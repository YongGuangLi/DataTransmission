// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: NetworkCollect.proto

package com.networkcollect;

public final class NetworkCollect {
  private NetworkCollect() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }
  /**
   * <pre>
   *协议类型
   * </pre>
   *
   * Protobuf enum {@code ProtocolType}
   */
  public enum ProtocolType
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <code>PT_INVALID = 0;</code>
     */
    PT_INVALID(0),
    /**
     * <code>PT_SYSLOG = 1;</code>
     */
    PT_SYSLOG(1),
    /**
     * <code>PT_SNMP = 2;</code>
     */
    PT_SNMP(2),
    /**
     * <code>PT_SNMPTRAP = 3;</code>
     */
    PT_SNMPTRAP(3),
    /**
     * <code>PT_AGENT = 4;</code>
     */
    PT_AGENT(4),
    /**
     * <code>PT_SSH = 5;</code>
     */
    PT_SSH(5),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>PT_INVALID = 0;</code>
     */
    public static final int PT_INVALID_VALUE = 0;
    /**
     * <code>PT_SYSLOG = 1;</code>
     */
    public static final int PT_SYSLOG_VALUE = 1;
    /**
     * <code>PT_SNMP = 2;</code>
     */
    public static final int PT_SNMP_VALUE = 2;
    /**
     * <code>PT_SNMPTRAP = 3;</code>
     */
    public static final int PT_SNMPTRAP_VALUE = 3;
    /**
     * <code>PT_AGENT = 4;</code>
     */
    public static final int PT_AGENT_VALUE = 4;
    /**
     * <code>PT_SSH = 5;</code>
     */
    public static final int PT_SSH_VALUE = 5;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static ProtocolType valueOf(int value) {
      return forNumber(value);
    }

    public static ProtocolType forNumber(int value) {
      switch (value) {
        case 0: return PT_INVALID;
        case 1: return PT_SYSLOG;
        case 2: return PT_SNMP;
        case 3: return PT_SNMPTRAP;
        case 4: return PT_AGENT;
        case 5: return PT_SSH;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ProtocolType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        ProtocolType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ProtocolType>() {
            public ProtocolType findValueByNumber(int number) {
              return ProtocolType.forNumber(number);
            }
          };

    private final int value;

    private ProtocolType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:ProtocolType)
  }

  /**
   * <pre>
   *设备类型
   * </pre>
   *
   * Protobuf enum {@code DeviceType}
   */
  public enum DeviceType
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <pre>
     *无效
     * </pre>
     *
     * <code>DT_INVALID = 0;</code>
     */
    DT_INVALID(0),
    /**
     * <pre>
     *通用主机设备
     * </pre>
     *
     * <code>DT_SERVER = 1;</code>
     */
    DT_SERVER(1),
    /**
     * <pre>
     *工控主机设备
     * </pre>
     *
     * <code>DT_CONTROL = 2;</code>
     */
    DT_CONTROL(2),
    /**
     * <pre>
     *网络设备
     * </pre>
     *
     * <code>DT_NETWORK = 3;</code>
     */
    DT_NETWORK(3),
    /**
     * <pre>
     *安全设备
     * </pre>
     *
     * <code>DT_SECURITY = 4;</code>
     */
    DT_SECURITY(4),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     *无效
     * </pre>
     *
     * <code>DT_INVALID = 0;</code>
     */
    public static final int DT_INVALID_VALUE = 0;
    /**
     * <pre>
     *通用主机设备
     * </pre>
     *
     * <code>DT_SERVER = 1;</code>
     */
    public static final int DT_SERVER_VALUE = 1;
    /**
     * <pre>
     *工控主机设备
     * </pre>
     *
     * <code>DT_CONTROL = 2;</code>
     */
    public static final int DT_CONTROL_VALUE = 2;
    /**
     * <pre>
     *网络设备
     * </pre>
     *
     * <code>DT_NETWORK = 3;</code>
     */
    public static final int DT_NETWORK_VALUE = 3;
    /**
     * <pre>
     *安全设备
     * </pre>
     *
     * <code>DT_SECURITY = 4;</code>
     */
    public static final int DT_SECURITY_VALUE = 4;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static DeviceType valueOf(int value) {
      return forNumber(value);
    }

    public static DeviceType forNumber(int value) {
      switch (value) {
        case 0: return DT_INVALID;
        case 1: return DT_SERVER;
        case 2: return DT_CONTROL;
        case 3: return DT_NETWORK;
        case 4: return DT_SECURITY;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<DeviceType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        DeviceType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<DeviceType>() {
            public DeviceType findValueByNumber(int number) {
              return DeviceType.forNumber(number);
            }
          };

    private final int value;

    private DeviceType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:DeviceType)
  }

  /**
   * <pre>
   *设备子类型
   * </pre>
   *
   * Protobuf enum {@code DeviceSubType}
   */
  public enum DeviceSubType
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <pre>
     *无效
     * </pre>
     *
     * <code>DST_INVALID = 0;</code>
     */
    DST_INVALID(0),
    /**
     * <pre>
     *防火墙
     * </pre>
     *
     * <code>DST_FW = 1;</code>
     */
    DST_FW(1),
    /**
     * <pre>
     *横向正向隔离装置
     * </pre>
     *
     * <code>DST_FID = 2;</code>
     */
    DST_FID(2),
    /**
     * <pre>
     *横向反向隔离装置
     * </pre>
     *
     * <code>DST_BID = 3;</code>
     */
    DST_BID(3),
    /**
     * <pre>
     *服务器
     * </pre>
     *
     * <code>DST_SVR = 4;</code>
     */
    DST_SVR(4),
    /**
     * <pre>
     *交换机
     * </pre>
     *
     * <code>DST_SW = 5;</code>
     */
    DST_SW(5),
    /**
     * <pre>
     *纵向加密装置
     * </pre>
     *
     * <code>DST_VEAD = 6;</code>
     */
    DST_VEAD(6),
    /**
     * <pre>
     *态势感知采集装置
     * </pre>
     *
     * <code>DST_CSA = 7;</code>
     */
    DST_CSA(7),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     *无效
     * </pre>
     *
     * <code>DST_INVALID = 0;</code>
     */
    public static final int DST_INVALID_VALUE = 0;
    /**
     * <pre>
     *防火墙
     * </pre>
     *
     * <code>DST_FW = 1;</code>
     */
    public static final int DST_FW_VALUE = 1;
    /**
     * <pre>
     *横向正向隔离装置
     * </pre>
     *
     * <code>DST_FID = 2;</code>
     */
    public static final int DST_FID_VALUE = 2;
    /**
     * <pre>
     *横向反向隔离装置
     * </pre>
     *
     * <code>DST_BID = 3;</code>
     */
    public static final int DST_BID_VALUE = 3;
    /**
     * <pre>
     *服务器
     * </pre>
     *
     * <code>DST_SVR = 4;</code>
     */
    public static final int DST_SVR_VALUE = 4;
    /**
     * <pre>
     *交换机
     * </pre>
     *
     * <code>DST_SW = 5;</code>
     */
    public static final int DST_SW_VALUE = 5;
    /**
     * <pre>
     *纵向加密装置
     * </pre>
     *
     * <code>DST_VEAD = 6;</code>
     */
    public static final int DST_VEAD_VALUE = 6;
    /**
     * <pre>
     *态势感知采集装置
     * </pre>
     *
     * <code>DST_CSA = 7;</code>
     */
    public static final int DST_CSA_VALUE = 7;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static DeviceSubType valueOf(int value) {
      return forNumber(value);
    }

    public static DeviceSubType forNumber(int value) {
      switch (value) {
        case 0: return DST_INVALID;
        case 1: return DST_FW;
        case 2: return DST_FID;
        case 3: return DST_BID;
        case 4: return DST_SVR;
        case 5: return DST_SW;
        case 6: return DST_VEAD;
        case 7: return DST_CSA;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<DeviceSubType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        DeviceSubType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<DeviceSubType>() {
            public DeviceSubType findValueByNumber(int number) {
              return DeviceSubType.forNumber(number);
            }
          };

    private final int value;

    private DeviceSubType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:DeviceSubType)
  }

  /**
   * Protobuf enum {@code CdataType}
   */
  public enum CdataType
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <pre>
     *无效
     * </pre>
     *
     * <code>CDT_INVALID = 0;</code>
     */
    CDT_INVALID(0),
    /**
     * <pre>
     *日志类型
     * </pre>
     *
     * <code>CDT_lOG = 1;</code>
     */
    CDT_lOG(1),
    /**
     * <pre>
     *事件类型
     * </pre>
     *
     * <code>CDT_EVENT = 2;</code>
     */
    CDT_EVENT(2),
    /**
     * <pre>
     *值类型
     * </pre>
     *
     * <code>CDT_VALUE = 3;</code>
     */
    CDT_VALUE(3),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     *无效
     * </pre>
     *
     * <code>CDT_INVALID = 0;</code>
     */
    public static final int CDT_INVALID_VALUE = 0;
    /**
     * <pre>
     *日志类型
     * </pre>
     *
     * <code>CDT_lOG = 1;</code>
     */
    public static final int CDT_lOG_VALUE = 1;
    /**
     * <pre>
     *事件类型
     * </pre>
     *
     * <code>CDT_EVENT = 2;</code>
     */
    public static final int CDT_EVENT_VALUE = 2;
    /**
     * <pre>
     *值类型
     * </pre>
     *
     * <code>CDT_VALUE = 3;</code>
     */
    public static final int CDT_VALUE_VALUE = 3;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static CdataType valueOf(int value) {
      return forNumber(value);
    }

    public static CdataType forNumber(int value) {
      switch (value) {
        case 0: return CDT_INVALID;
        case 1: return CDT_lOG;
        case 2: return CDT_EVENT;
        case 3: return CDT_VALUE;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<CdataType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        CdataType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<CdataType>() {
            public CdataType findValueByNumber(int number) {
              return CdataType.forNumber(number);
            }
          };

    private final int value;

    private CdataType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:CdataType)
  }

  /**
   * <pre>
   *********收到主站的数据**********
   *消息类型
   * </pre>
   *
   * Protobuf enum {@code MainStationMsgType}
   */
  public enum MainStationMsgType
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <pre>
     *无效
     * </pre>
     *
     * <code>MAIN_INVALID = 0;</code>
     */
    MAIN_INVALID(0),
    /**
     * <pre>
     *日志匹配规则------filePath
     * </pre>
     *
     * <code>MAIN_LOG_RULE = 1;</code>
     */
    MAIN_LOG_RULE(1),
    /**
     * <pre>
     *告警阈值配置-------thresholdList
     * </pre>
     *
     * <code>MAIN_ALARM_THRESHOLD = 2;</code>
     */
    MAIN_ALARM_THRESHOLD(2),
    /**
     * <pre>
     *资产信息变化
     * </pre>
     *
     * <code>MAIN_ASSET_CHANGE = 3;</code>
     */
    MAIN_ASSET_CHANGE(3),
    /**
     * <pre>
     *通信对白名单-----pairList
     * </pre>
     *
     * <code>MAIN_COMMUNICATION_PAIR = 4;</code>
     */
    MAIN_COMMUNICATION_PAIR(4),
    /**
     * <pre>
     *ip-mac白名单-------ipMacList
     * </pre>
     *
     * <code>MAIN_IP_MAC = 5;</code>
     */
    MAIN_IP_MAC(5),
    /**
     * <pre>
     *关键文件-------keyFileList
     * </pre>
     *
     * <code>MAIN_KEY_FILE = 6;</code>
     */
    MAIN_KEY_FILE(6),
    /**
     * <pre>
     *基线核查--------fileContent
     * </pre>
     *
     * <code>MAIN_BASELINE_CHECK = 7;</code>
     */
    MAIN_BASELINE_CHECK(7),
    /**
     * <pre>
     *采集数据-------collectItem
     * </pre>
     *
     * <code>MAIN_COLLECT_DATA = 8;</code>
     */
    MAIN_COLLECT_DATA(8),
    /**
     * <pre>
     *基线核查配置
     * </pre>
     *
     * <code>MAIN_BASELINE_CHECK_CONF = 9;</code>
     */
    MAIN_BASELINE_CHECK_CONF(9),
    /**
     * <pre>
     *网络自动扫描配置
     * </pre>
     *
     * <code>MAIN_ICMP_CONF = 10;</code>
     */
    MAIN_ICMP_CONF(10),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     *无效
     * </pre>
     *
     * <code>MAIN_INVALID = 0;</code>
     */
    public static final int MAIN_INVALID_VALUE = 0;
    /**
     * <pre>
     *日志匹配规则------filePath
     * </pre>
     *
     * <code>MAIN_LOG_RULE = 1;</code>
     */
    public static final int MAIN_LOG_RULE_VALUE = 1;
    /**
     * <pre>
     *告警阈值配置-------thresholdList
     * </pre>
     *
     * <code>MAIN_ALARM_THRESHOLD = 2;</code>
     */
    public static final int MAIN_ALARM_THRESHOLD_VALUE = 2;
    /**
     * <pre>
     *资产信息变化
     * </pre>
     *
     * <code>MAIN_ASSET_CHANGE = 3;</code>
     */
    public static final int MAIN_ASSET_CHANGE_VALUE = 3;
    /**
     * <pre>
     *通信对白名单-----pairList
     * </pre>
     *
     * <code>MAIN_COMMUNICATION_PAIR = 4;</code>
     */
    public static final int MAIN_COMMUNICATION_PAIR_VALUE = 4;
    /**
     * <pre>
     *ip-mac白名单-------ipMacList
     * </pre>
     *
     * <code>MAIN_IP_MAC = 5;</code>
     */
    public static final int MAIN_IP_MAC_VALUE = 5;
    /**
     * <pre>
     *关键文件-------keyFileList
     * </pre>
     *
     * <code>MAIN_KEY_FILE = 6;</code>
     */
    public static final int MAIN_KEY_FILE_VALUE = 6;
    /**
     * <pre>
     *基线核查--------fileContent
     * </pre>
     *
     * <code>MAIN_BASELINE_CHECK = 7;</code>
     */
    public static final int MAIN_BASELINE_CHECK_VALUE = 7;
    /**
     * <pre>
     *采集数据-------collectItem
     * </pre>
     *
     * <code>MAIN_COLLECT_DATA = 8;</code>
     */
    public static final int MAIN_COLLECT_DATA_VALUE = 8;
    /**
     * <pre>
     *基线核查配置
     * </pre>
     *
     * <code>MAIN_BASELINE_CHECK_CONF = 9;</code>
     */
    public static final int MAIN_BASELINE_CHECK_CONF_VALUE = 9;
    /**
     * <pre>
     *网络自动扫描配置
     * </pre>
     *
     * <code>MAIN_ICMP_CONF = 10;</code>
     */
    public static final int MAIN_ICMP_CONF_VALUE = 10;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static MainStationMsgType valueOf(int value) {
      return forNumber(value);
    }

    public static MainStationMsgType forNumber(int value) {
      switch (value) {
        case 0: return MAIN_INVALID;
        case 1: return MAIN_LOG_RULE;
        case 2: return MAIN_ALARM_THRESHOLD;
        case 3: return MAIN_ASSET_CHANGE;
        case 4: return MAIN_COMMUNICATION_PAIR;
        case 5: return MAIN_IP_MAC;
        case 6: return MAIN_KEY_FILE;
        case 7: return MAIN_BASELINE_CHECK;
        case 8: return MAIN_COLLECT_DATA;
        case 9: return MAIN_BASELINE_CHECK_CONF;
        case 10: return MAIN_ICMP_CONF;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<MainStationMsgType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        MainStationMsgType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<MainStationMsgType>() {
            public MainStationMsgType findValueByNumber(int number) {
              return MainStationMsgType.forNumber(number);
            }
          };

    private final int value;

    private MainStationMsgType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:MainStationMsgType)
  }

  /**
   * <pre>
   *************对进程进行控制****************
   * </pre>
   *
   * Protobuf enum {@code ProcessCmdType}
   */
  public enum ProcessCmdType
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <pre>
     *无效
     * </pre>
     *
     * <code>PROCESS_INVALID = 0;</code>
     */
    PROCESS_INVALID(0),
    /**
     * <pre>
     *停止
     * </pre>
     *
     * <code>PROCESS_STOP = 1;</code>
     */
    PROCESS_STOP(1),
    /**
     * <pre>
     *重启
     * </pre>
     *
     * <code>PROCESS_RESTART = 2;</code>
     */
    PROCESS_RESTART(2),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     *无效
     * </pre>
     *
     * <code>PROCESS_INVALID = 0;</code>
     */
    public static final int PROCESS_INVALID_VALUE = 0;
    /**
     * <pre>
     *停止
     * </pre>
     *
     * <code>PROCESS_STOP = 1;</code>
     */
    public static final int PROCESS_STOP_VALUE = 1;
    /**
     * <pre>
     *重启
     * </pre>
     *
     * <code>PROCESS_RESTART = 2;</code>
     */
    public static final int PROCESS_RESTART_VALUE = 2;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static ProcessCmdType valueOf(int value) {
      return forNumber(value);
    }

    public static ProcessCmdType forNumber(int value) {
      switch (value) {
        case 0: return PROCESS_INVALID;
        case 1: return PROCESS_STOP;
        case 2: return PROCESS_RESTART;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ProcessCmdType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        ProcessCmdType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ProcessCmdType>() {
            public ProcessCmdType findValueByNumber(int number) {
              return ProcessCmdType.forNumber(number);
            }
          };

    private final int value;

    private ProcessCmdType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:ProcessCmdType)
  }

  /**
   * <pre>
   *新的未知资产
   *设备来源
   * </pre>
   *
   * Protobuf enum {@code DeviceSource}
   */
  public enum DeviceSource
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <pre>
     *无效的
     * </pre>
     *
     * <code>DS_INVALID = 0;</code>
     */
    DS_INVALID(0),
    /**
     * <pre>
     *厂站录入
     * </pre>
     *
     * <code>DS_PLANT_INPUT = 1;</code>
     */
    DS_PLANT_INPUT(1),
    /**
     * <pre>
     *主站录入
     * </pre>
     *
     * <code>DS_MAIN_INPUT = 2;</code>
     */
    DS_MAIN_INPUT(2),
    /**
     * <pre>
     *ICMP3
     * </pre>
     *
     * <code>DS_ICMP3 = 3;</code>
     */
    DS_ICMP3(3),
    /**
     * <pre>
     *镜像流量
     * </pre>
     *
     * <code>DS_MIRROR = 4;</code>
     */
    DS_MIRROR(4),
    /**
     * <pre>
     *snmp发现
     * </pre>
     *
     * <code>DS_SNMP = 5;</code>
     */
    DS_SNMP(5),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     *无效的
     * </pre>
     *
     * <code>DS_INVALID = 0;</code>
     */
    public static final int DS_INVALID_VALUE = 0;
    /**
     * <pre>
     *厂站录入
     * </pre>
     *
     * <code>DS_PLANT_INPUT = 1;</code>
     */
    public static final int DS_PLANT_INPUT_VALUE = 1;
    /**
     * <pre>
     *主站录入
     * </pre>
     *
     * <code>DS_MAIN_INPUT = 2;</code>
     */
    public static final int DS_MAIN_INPUT_VALUE = 2;
    /**
     * <pre>
     *ICMP3
     * </pre>
     *
     * <code>DS_ICMP3 = 3;</code>
     */
    public static final int DS_ICMP3_VALUE = 3;
    /**
     * <pre>
     *镜像流量
     * </pre>
     *
     * <code>DS_MIRROR = 4;</code>
     */
    public static final int DS_MIRROR_VALUE = 4;
    /**
     * <pre>
     *snmp发现
     * </pre>
     *
     * <code>DS_SNMP = 5;</code>
     */
    public static final int DS_SNMP_VALUE = 5;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static DeviceSource valueOf(int value) {
      return forNumber(value);
    }

    public static DeviceSource forNumber(int value) {
      switch (value) {
        case 0: return DS_INVALID;
        case 1: return DS_PLANT_INPUT;
        case 2: return DS_MAIN_INPUT;
        case 3: return DS_ICMP3;
        case 4: return DS_MIRROR;
        case 5: return DS_SNMP;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<DeviceSource>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        DeviceSource> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<DeviceSource>() {
            public DeviceSource findValueByNumber(int number) {
              return DeviceSource.forNumber(number);
            }
          };

    private final int value;

    private DeviceSource(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:DeviceSource)
  }

  /**
   * <pre>
   *远程命令类型
   * </pre>
   *
   * Protobuf enum {@code RemoteCmdType}
   */
  public enum RemoteCmdType
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <pre>
     *无效
     * </pre>
     *
     * <code>RCT_INVALID = 0;</code>
     */
    RCT_INVALID(0),
    /**
     * <pre>
     *更新配置文件
     * </pre>
     *
     * <code>RCT_UPDATE_CONFIG = 1;</code>
     */
    RCT_UPDATE_CONFIG(1),
    /**
     * <pre>
     *备份配置文件
     * </pre>
     *
     * <code>RCT_BACKUP_CONFIG = 2;</code>
     */
    RCT_BACKUP_CONFIG(2),
    /**
     * <pre>
     *重启系统
     * </pre>
     *
     * <code>RCT_SYS_RESTART = 3;</code>
     */
    RCT_SYS_RESTART(3),
    /**
     * <pre>
     *获取所有的网卡信息
     * </pre>
     *
     * <code>RCT_GET_NETINFO = 4;</code>
     */
    RCT_GET_NETINFO(4),
    /**
     * <pre>
     *设置网卡信息
     * </pre>
     *
     * <code>RCT_SET_NETINFO = 5;</code>
     */
    RCT_SET_NETINFO(5),
    /**
     * <pre>
     *设置路由信息
     * </pre>
     *
     * <code>RCT_SET_ROUTEINFO = 6;</code>
     */
    RCT_SET_ROUTEINFO(6),
    /**
     * <pre>
     *网络主动扫描，ping，traceroute，telnet
     * </pre>
     *
     * <code>RCT_CMD_EXEC = 7;</code>
     */
    RCT_CMD_EXEC(7),
    /**
     * <pre>
     *设置子接口参数信息
     * </pre>
     *
     * <code>RCT_SET_SUBNETINFO = 8;</code>
     */
    RCT_SET_SUBNETINFO(8),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     *无效
     * </pre>
     *
     * <code>RCT_INVALID = 0;</code>
     */
    public static final int RCT_INVALID_VALUE = 0;
    /**
     * <pre>
     *更新配置文件
     * </pre>
     *
     * <code>RCT_UPDATE_CONFIG = 1;</code>
     */
    public static final int RCT_UPDATE_CONFIG_VALUE = 1;
    /**
     * <pre>
     *备份配置文件
     * </pre>
     *
     * <code>RCT_BACKUP_CONFIG = 2;</code>
     */
    public static final int RCT_BACKUP_CONFIG_VALUE = 2;
    /**
     * <pre>
     *重启系统
     * </pre>
     *
     * <code>RCT_SYS_RESTART = 3;</code>
     */
    public static final int RCT_SYS_RESTART_VALUE = 3;
    /**
     * <pre>
     *获取所有的网卡信息
     * </pre>
     *
     * <code>RCT_GET_NETINFO = 4;</code>
     */
    public static final int RCT_GET_NETINFO_VALUE = 4;
    /**
     * <pre>
     *设置网卡信息
     * </pre>
     *
     * <code>RCT_SET_NETINFO = 5;</code>
     */
    public static final int RCT_SET_NETINFO_VALUE = 5;
    /**
     * <pre>
     *设置路由信息
     * </pre>
     *
     * <code>RCT_SET_ROUTEINFO = 6;</code>
     */
    public static final int RCT_SET_ROUTEINFO_VALUE = 6;
    /**
     * <pre>
     *网络主动扫描，ping，traceroute，telnet
     * </pre>
     *
     * <code>RCT_CMD_EXEC = 7;</code>
     */
    public static final int RCT_CMD_EXEC_VALUE = 7;
    /**
     * <pre>
     *设置子接口参数信息
     * </pre>
     *
     * <code>RCT_SET_SUBNETINFO = 8;</code>
     */
    public static final int RCT_SET_SUBNETINFO_VALUE = 8;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static RemoteCmdType valueOf(int value) {
      return forNumber(value);
    }

    public static RemoteCmdType forNumber(int value) {
      switch (value) {
        case 0: return RCT_INVALID;
        case 1: return RCT_UPDATE_CONFIG;
        case 2: return RCT_BACKUP_CONFIG;
        case 3: return RCT_SYS_RESTART;
        case 4: return RCT_GET_NETINFO;
        case 5: return RCT_SET_NETINFO;
        case 6: return RCT_SET_ROUTEINFO;
        case 7: return RCT_CMD_EXEC;
        case 8: return RCT_SET_SUBNETINFO;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<RemoteCmdType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        RemoteCmdType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<RemoteCmdType>() {
            public RemoteCmdType findValueByNumber(int number) {
              return RemoteCmdType.forNumber(number);
            }
          };

    private final int value;

    private RemoteCmdType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:RemoteCmdType)
  }

  /**
   * <pre>
   *设置类型
   * </pre>
   *
   * Protobuf enum {@code RemoteSetType}
   */
  public enum RemoteSetType
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <pre>
     *无效
     * </pre>
     *
     * <code>RST_INVALID = 0;</code>
     */
    RST_INVALID(0),
    /**
     * <pre>
     *新增
     * </pre>
     *
     * <code>RST_ADD = 1;</code>
     */
    RST_ADD(1),
    /**
     * <pre>
     *修改
     * </pre>
     *
     * <code>RST_MODIFY = 2;</code>
     */
    RST_MODIFY(2),
    /**
     * <pre>
     *删除
     * </pre>
     *
     * <code>RST_DELETE = 3;</code>
     */
    RST_DELETE(3),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     *无效
     * </pre>
     *
     * <code>RST_INVALID = 0;</code>
     */
    public static final int RST_INVALID_VALUE = 0;
    /**
     * <pre>
     *新增
     * </pre>
     *
     * <code>RST_ADD = 1;</code>
     */
    public static final int RST_ADD_VALUE = 1;
    /**
     * <pre>
     *修改
     * </pre>
     *
     * <code>RST_MODIFY = 2;</code>
     */
    public static final int RST_MODIFY_VALUE = 2;
    /**
     * <pre>
     *删除
     * </pre>
     *
     * <code>RST_DELETE = 3;</code>
     */
    public static final int RST_DELETE_VALUE = 3;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static RemoteSetType valueOf(int value) {
      return forNumber(value);
    }

    public static RemoteSetType forNumber(int value) {
      switch (value) {
        case 0: return RST_INVALID;
        case 1: return RST_ADD;
        case 2: return RST_MODIFY;
        case 3: return RST_DELETE;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<RemoteSetType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        RemoteSetType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<RemoteSetType>() {
            public RemoteSetType findValueByNumber(int number) {
              return RemoteSetType.forNumber(number);
            }
          };

    private final int value;

    private RemoteSetType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:RemoteSetType)
  }

  /**
   * <pre>
   *消息类型
   * </pre>
   *
   * Protobuf enum {@code MessageType}
   */
  public enum MessageType
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <code>MT_INVALID = 0;</code>
     */
    MT_INVALID(0),
    /**
     * <pre>
     *采集数据	
     * </pre>
     *
     * <code>MT_CollectData = 1;</code>
     */
    MT_CollectData(1),
    /**
     * <pre>
     *接收到主站数据	
     * </pre>
     *
     * <code>MT_RecvMainStationData = 2;</code>
     */
    MT_RecvMainStationData(2),
    /**
     * <pre>
     *心跳消息
     * </pre>
     *
     * <code>MT_HeartBeatMessage = 3;</code>
     */
    MT_HeartBeatMessage(3),
    /**
     * <pre>
     *进程控制
     * </pre>
     *
     * <code>MT_ProcessCtrl = 4;</code>
     */
    MT_ProcessCtrl(4),
    /**
     * <pre>
     *新的未知资产
     * </pre>
     *
     * <code>MT_UnknownAsset = 5;</code>
     */
    MT_UnknownAsset(5),
    /**
     * <pre>
     *通信对
     * </pre>
     *
     * <code>MT_CommunicationPair = 6;</code>
     */
    MT_CommunicationPair(6),
    /**
     * <pre>
     *原始日志
     * </pre>
     *
     * <code>MT_OriginalSyslog = 7;</code>
     */
    MT_OriginalSyslog(7),
    /**
     * <pre>
     *资产信息
     * </pre>
     *
     * <code>MT_AssetInfo = 8;</code>
     */
    MT_AssetInfo(8),
    /**
     * <pre>
     *远程控制命令
     * </pre>
     *
     * <code>MT_RemoteCmdInfo = 9;</code>
     */
    MT_RemoteCmdInfo(9),
    /**
     * <pre>
     *远程控制回复
     * </pre>
     *
     * <code>MT_RemoteResponse = 10;</code>
     */
    MT_RemoteResponse(10),
    /**
     * <pre>
     *还原文件
     * </pre>
     *
     * <code>MT_RESTOREFILE = 11;</code>
     */
    MT_RESTOREFILE(11),
    /**
     * <pre>
     *网络自动扫描 
     * </pre>
     *
     * <code>MT_NMAP = 12;</code>
     */
    MT_NMAP(12),
    /**
     * <pre>
     *副主站的数据
     * </pre>
     *
     * <code>MT_SubMainStationData = 13;</code>
     */
    MT_SubMainStationData(13),
    /**
     * <pre>
     *主站配置参数
     * </pre>
     *
     * <code>MT_StationConnectConfig = 14;</code>
     */
    MT_StationConnectConfig(14),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>MT_INVALID = 0;</code>
     */
    public static final int MT_INVALID_VALUE = 0;
    /**
     * <pre>
     *采集数据	
     * </pre>
     *
     * <code>MT_CollectData = 1;</code>
     */
    public static final int MT_CollectData_VALUE = 1;
    /**
     * <pre>
     *接收到主站数据	
     * </pre>
     *
     * <code>MT_RecvMainStationData = 2;</code>
     */
    public static final int MT_RecvMainStationData_VALUE = 2;
    /**
     * <pre>
     *心跳消息
     * </pre>
     *
     * <code>MT_HeartBeatMessage = 3;</code>
     */
    public static final int MT_HeartBeatMessage_VALUE = 3;
    /**
     * <pre>
     *进程控制
     * </pre>
     *
     * <code>MT_ProcessCtrl = 4;</code>
     */
    public static final int MT_ProcessCtrl_VALUE = 4;
    /**
     * <pre>
     *新的未知资产
     * </pre>
     *
     * <code>MT_UnknownAsset = 5;</code>
     */
    public static final int MT_UnknownAsset_VALUE = 5;
    /**
     * <pre>
     *通信对
     * </pre>
     *
     * <code>MT_CommunicationPair = 6;</code>
     */
    public static final int MT_CommunicationPair_VALUE = 6;
    /**
     * <pre>
     *原始日志
     * </pre>
     *
     * <code>MT_OriginalSyslog = 7;</code>
     */
    public static final int MT_OriginalSyslog_VALUE = 7;
    /**
     * <pre>
     *资产信息
     * </pre>
     *
     * <code>MT_AssetInfo = 8;</code>
     */
    public static final int MT_AssetInfo_VALUE = 8;
    /**
     * <pre>
     *远程控制命令
     * </pre>
     *
     * <code>MT_RemoteCmdInfo = 9;</code>
     */
    public static final int MT_RemoteCmdInfo_VALUE = 9;
    /**
     * <pre>
     *远程控制回复
     * </pre>
     *
     * <code>MT_RemoteResponse = 10;</code>
     */
    public static final int MT_RemoteResponse_VALUE = 10;
    /**
     * <pre>
     *还原文件
     * </pre>
     *
     * <code>MT_RESTOREFILE = 11;</code>
     */
    public static final int MT_RESTOREFILE_VALUE = 11;
    /**
     * <pre>
     *网络自动扫描 
     * </pre>
     *
     * <code>MT_NMAP = 12;</code>
     */
    public static final int MT_NMAP_VALUE = 12;
    /**
     * <pre>
     *副主站的数据
     * </pre>
     *
     * <code>MT_SubMainStationData = 13;</code>
     */
    public static final int MT_SubMainStationData_VALUE = 13;
    /**
     * <pre>
     *主站配置参数
     * </pre>
     *
     * <code>MT_StationConnectConfig = 14;</code>
     */
    public static final int MT_StationConnectConfig_VALUE = 14;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static MessageType valueOf(int value) {
      return forNumber(value);
    }

    public static MessageType forNumber(int value) {
      switch (value) {
        case 0: return MT_INVALID;
        case 1: return MT_CollectData;
        case 2: return MT_RecvMainStationData;
        case 3: return MT_HeartBeatMessage;
        case 4: return MT_ProcessCtrl;
        case 5: return MT_UnknownAsset;
        case 6: return MT_CommunicationPair;
        case 7: return MT_OriginalSyslog;
        case 8: return MT_AssetInfo;
        case 9: return MT_RemoteCmdInfo;
        case 10: return MT_RemoteResponse;
        case 11: return MT_RESTOREFILE;
        case 12: return MT_NMAP;
        case 13: return MT_SubMainStationData;
        case 14: return MT_StationConnectConfig;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<MessageType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        MessageType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<MessageType>() {
            public MessageType findValueByNumber(int number) {
              return MessageType.forNumber(number);
            }
          };

    private final int value;

    private MessageType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:MessageType)
  }

  public interface KeyValueOrBuilder extends
      // @@protoc_insertion_point(interface_extends:KeyValue)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>string key = 1;</code>
     */
    java.lang.String getKey();
    /**
     * <code>string key = 1;</code>
     */
    com.google.protobuf.ByteString
        getKeyBytes();

    /**
     * <code>string value = 2;</code>
     */
    java.lang.String getValue();
    /**
     * <code>string value = 2;</code>
     */
    com.google.protobuf.ByteString
        getValueBytes();
  }
  /**
   * <pre>
   *键值对
   * </pre>
   *
   * Protobuf type {@code KeyValue}
   */
  public  static final class KeyValue extends
      com.google.protobuf.GeneratedMessageLite<
          KeyValue, KeyValue.Builder> implements
      // @@protoc_insertion_point(message_implements:KeyValue)
      KeyValueOrBuilder {
    private KeyValue() {
      key_ = "";
      value_ = "";
    }
    public static final int KEY_FIELD_NUMBER = 1;
    private java.lang.String key_;
    /**
     * <code>string key = 1;</code>
     */
    public java.lang.String getKey() {
      return key_;
    }
    /**
     * <code>string key = 1;</code>
     */
    public com.google.protobuf.ByteString
        getKeyBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(key_);
    }
    /**
     * <code>string key = 1;</code>
     */
    private void setKey(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      key_ = value;
    }
    /**
     * <code>string key = 1;</code>
     */
    private void clearKey() {
      
      key_ = getDefaultInstance().getKey();
    }
    /**
     * <code>string key = 1;</code>
     */
    private void setKeyBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      key_ = value.toStringUtf8();
    }

    public static final int VALUE_FIELD_NUMBER = 2;
    private java.lang.String value_;
    /**
     * <code>string value = 2;</code>
     */
    public java.lang.String getValue() {
      return value_;
    }
    /**
     * <code>string value = 2;</code>
     */
    public com.google.protobuf.ByteString
        getValueBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(value_);
    }
    /**
     * <code>string value = 2;</code>
     */
    private void setValue(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      value_ = value;
    }
    /**
     * <code>string value = 2;</code>
     */
    private void clearValue() {
      
      value_ = getDefaultInstance().getValue();
    }
    /**
     * <code>string value = 2;</code>
     */
    private void setValueBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      value_ = value.toStringUtf8();
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!key_.isEmpty()) {
        output.writeString(1, getKey());
      }
      if (!value_.isEmpty()) {
        output.writeString(2, getValue());
      }
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (!key_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getKey());
      }
      if (!value_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(2, getValue());
      }
      memoizedSerializedSize = size;
      return size;
    }

    public static com.networkcollect.NetworkCollect.KeyValue parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.networkcollect.NetworkCollect.KeyValue parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.networkcollect.NetworkCollect.KeyValue parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.networkcollect.NetworkCollect.KeyValue parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.networkcollect.NetworkCollect.KeyValue parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.networkcollect.NetworkCollect.KeyValue parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.networkcollect.NetworkCollect.KeyValue parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.networkcollect.NetworkCollect.KeyValue parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.networkcollect.NetworkCollect.KeyValue parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.networkcollect.NetworkCollect.KeyValue parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.networkcollect.NetworkCollect.KeyValue parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.networkcollect.NetworkCollect.KeyValue parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.networkcollect.NetworkCollect.KeyValue prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * <pre>
     *键值对
     * </pre>
     *
     * Protobuf type {@code KeyValue}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.networkcollect.NetworkCollect.KeyValue, Builder> implements
        // @@protoc_insertion_point(builder_implements:KeyValue)
        com.networkcollect.NetworkCollect.KeyValueOrBuilder {
      // Construct using com.networkcollect.NetworkCollect.KeyValue.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>string key = 1;</code>
       */
      public java.lang.String getKey() {
        return instance.getKey();
      }
      /**
       * <code>string key = 1;</code>
       */
      public com.google.protobuf.ByteString
          getKeyBytes() {
        return instance.getKeyBytes();
      }
      /**
       * <code>string key = 1;</code>
       */
      public Builder setKey(
          java.lang.String value) {
        copyOnWrite();
        instance.setKey(value);
        return this;
      }
      /**
       * <code>string key = 1;</code>
       */
      public Builder clearKey() {
        copyOnWrite();
        instance.clearKey();
        return this;
      }
      /**
       * <code>string key = 1;</code>
       */
      public Builder setKeyBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setKeyBytes(value);
        return this;
      }

      /**
       * <code>string value = 2;</code>
       */
      public java.lang.String getValue() {
        return instance.getValue();
      }
      /**
       * <code>string value = 2;</code>
       */
      public com.google.protobuf.ByteString
          getValueBytes() {
        return instance.getValueBytes();
      }
      /**
       * <code>string value = 2;</code>
       */
      public Builder setValue(
          java.lang.String value) {
        copyOnWrite();
        instance.setValue(value);
        return this;
      }
      /**
       * <code>string value = 2;</code>
       */
      public Builder clearValue() {
        copyOnWrite();
        instance.clearValue();
        return this;
      }
      /**
       * <code>string value = 2;</code>
       */
      public Builder setValueBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setValueBytes(value);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:KeyValue)
    }
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.networkcollect.NetworkCollect.KeyValue();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.networkcollect.NetworkCollect.KeyValue other = (com.networkcollect.NetworkCollect.KeyValue) arg1;
          key_ = visitor.visitString(!key_.isEmpty(), key_,
              !other.key_.isEmpty(), other.key_);
          value_ = visitor.visitString(!value_.isEmpty(), value_,
              !other.value_.isEmpty(), other.value_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!input.skipField(tag)) {
                    done = true;
                  }
                  break;
                }
                case 10: {
                  String s = input.readStringRequireUtf8();

                  key_ = s;
                  break;
                }
                case 18: {
                  String s = input.readStringRequireUtf8();

                  value_ = s;
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (com.networkcollect.NetworkCollect.KeyValue.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:KeyValue)
    private static final com.networkcollect.NetworkCollect.KeyValue DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new KeyValue();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static com.networkcollect.NetworkCollect.KeyValue getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<KeyValue> PARSER;

    public static com.google.protobuf.Parser<KeyValue> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface StorageInfoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:StorageInfo)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     *存储设备编号
     * </pre>
     *
     * <code>int32 storageIndex = 1;</code>
     */
    int getStorageIndex();

    /**
     * <pre>
     *存储设备类型
     * </pre>
     *
     * <code>int32 storageType = 2;</code>
     */
    int getStorageType();

    /**
     * <pre>
     *存储设备描述
     * </pre>
     *
     * <code>string storageDescr = 3;</code>
     */
    java.lang.String getStorageDescr();
    /**
     * <pre>
     *存储设备描述
     * </pre>
     *
     * <code>string storageDescr = 3;</code>
     */
    com.google.protobuf.ByteString
        getStorageDescrBytes();

    /**
     * <pre>
     *总容量
     * </pre>
     *
     * <code>int32 storageTotal = 4;</code>
     */
    int getStorageTotal();

    /**
     * <pre>
     *使用率
     * </pre>
     *
     * <code>float usedPercent = 5;</code>
     */
    float getUsedPercent();
  }
  /**
   * <pre>
   *磁盘使用率
   * </pre>
   *
   * Protobuf type {@code StorageInfo}
   */
  public  static final class StorageInfo extends
      com.google.protobuf.GeneratedMessageLite<
          StorageInfo, StorageInfo.Builder> implements
      // @@protoc_insertion_point(message_implements:StorageInfo)
      StorageInfoOrBuilder {
    private StorageInfo() {
      storageDescr_ = "";
    }
    public static final int STORAGEINDEX_FIELD_NUMBER = 1;
    private int storageIndex_;
    /**
     * <pre>
     *存储设备编号
     * </pre>
     *
     * <code>int32 storageIndex = 1;</code>
     */
    public int getStorageIndex() {
      return storageIndex_;
    }
    /**
     * <pre>
     *存储设备编号
     * </pre>
     *
     * <code>int32 storageIndex = 1;</code>
     */
    private void setStorageIndex(int value) {
      
      storageIndex_ = value;
    }
    /**
     * <pre>
     *存储设备编号
     * </pre>
     *
     * <code>int32 storageIndex = 1;</code>
     */
    private void clearStorageIndex() {
      
      storageIndex_ = 0;
    }

    public static final int STORAGETYPE_FIELD_NUMBER = 2;
    private int storageType_;
    /**
     * <pre>
     *存储设备类型
     * </pre>
     *
     * <code>int32 storageType = 2;</code>
     */
    public int getStorageType() {
      return storageType_;
    }
    /**
     * <pre>
     *存储设备类型
     * </pre>
     *
     * <code>int32 storageType = 2;</code>
     */
    private void setStorageType(int value) {
      
      storageType_ = value;
    }
    /**
     * <pre>
     *存储设备类型
     * </pre>
     *
     * <code>int32 storageType = 2;</code>
     */
    private void clearStorageType() {
      
      storageType_ = 0;
    }

    public static final int STORAGEDESCR_FIELD_NUMBER = 3;
    private java.lang.String storageDescr_;
    /**
     * <pre>
     *存储设备描述
     * </pre>
     *
     * <code>string storageDescr = 3;</code>
     */
    public java.lang.String getStorageDescr() {
      return storageDescr_;
    }
    /**
     * <pre>
     *存储设备描述
     * </pre>
     *
     * <code>string storageDescr = 3;</code>
     */
    public com.google.protobuf.ByteString
        getStorageDescrBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(storageDescr_);
    }
    /**
     * <pre>
     *存储设备描述
     * </pre>
     *
     * <code>string storageDescr = 3;</code>
     */
    private void setStorageDescr(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      storageDescr_ = value;
    }
    /**
     * <pre>
     *存储设备描述
     * </pre>
     *
     * <code>string storageDescr = 3;</code>
     */
    private void clearStorageDescr() {
      
      storageDescr_ = getDefaultInstance().getStorageDescr();
    }
    /**
     * <pre>
     *存储设备描述
     * </pre>
     *
     * <code>string storageDescr = 3;</code>
     */
    private void setStorageDescrBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      storageDescr_ = value.toStringUtf8();
    }

    public static final int STORAGETOTAL_FIELD_NUMBER = 4;
    private int storageTotal_;
    /**
     * <pre>
     *总容量
     * </pre>
     *
     * <code>int32 storageTotal = 4;</code>
     */
    public int getStorageTotal() {
      return storageTotal_;
    }
    /**
     * <pre>
     *总容量
     * </pre>
     *
     * <code>int32 storageTotal = 4;</code>
     */
    private void setStorageTotal(int value) {
      
      storageTotal_ = value;
    }
    /**
     * <pre>
     *总容量
     * </pre>
     *
     * <code>int32 storageTotal = 4;</code>
     */
    private void clearStorageTotal() {
      
      storageTotal_ = 0;
    }

    public static final int USEDPERCENT_FIELD_NUMBER = 5;
    private float usedPercent_;
    /**
     * <pre>
     *使用率
     * </pre>
     *
     * <code>float usedPercent = 5;</code>
     */
    public float getUsedPercent() {
      return usedPercent_;
    }
    /**
     * <pre>
     *使用率
     * </pre>
     *
     * <code>float usedPercent = 5;</code>
     */
    private void setUsedPercent(float value) {
      
      usedPercent_ = value;
    }
    /**
     * <pre>
     *使用率
     * </pre>
     *
     * <code>float usedPercent = 5;</code>
     */
    private void clearUsedPercent() {
      
      usedPercent_ = 0F;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (storageIndex_ != 0) {
        output.writeInt32(1, storageIndex_);
      }
      if (storageType_ != 0) {
        output.writeInt32(2, storageType_);
      }
      if (!storageDescr_.isEmpty()) {
        output.writeString(3, getStorageDescr());
      }
      if (storageTotal_ != 0) {
        output.writeInt32(4, storageTotal_);
      }
      if (usedPercent_ != 0F) {
        output.writeFloat(5, usedPercent_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (storageIndex_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, storageIndex_);
      }
      if (storageType_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, storageType_);
      }
      if (!storageDescr_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(3, getStorageDescr());
      }
      if (storageTotal_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, storageTotal_);
      }
      if (usedPercent_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(5, usedPercent_);
      }
      memoizedSerializedSize = size;
      return size;
    }

    public static com.networkcollect.NetworkCollect.StorageInfo parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.networkcollect.NetworkCollect.StorageInfo parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.networkcollect.NetworkCollect.StorageInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.networkcollect.NetworkCollect.StorageInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.networkcollect.NetworkCollect.StorageInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.networkcollect.NetworkCollect.StorageInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.networkcollect.NetworkCollect.StorageInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.networkcollect.NetworkCollect.StorageInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.networkcollect.NetworkCollect.StorageInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.networkcollect.NetworkCollect.StorageInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.networkcollect.NetworkCollect.StorageInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.networkcollect.NetworkCollect.StorageInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.networkcollect.NetworkCollect.StorageInfo prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * <pre>
     *磁盘使用率
     * </pre>
     *
     * Protobuf type {@code StorageInfo}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.networkcollect.NetworkCollect.StorageInfo, Builder> implements
        // @@protoc_insertion_point(builder_implements:StorageInfo)
        com.networkcollect.NetworkCollect.StorageInfoOrBuilder {
      // Construct using com.networkcollect.NetworkCollect.StorageInfo.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       *存储设备编号
       * </pre>
       *
       * <code>int32 storageIndex = 1;</code>
       */
      public int getStorageIndex() {
        return instance.getStorageIndex();
      }
      /**
       * <pre>
       *存储设备编号
       * </pre>
       *
       * <code>int32 storageIndex = 1;</code>
       */
      public Builder setStorageIndex(int value) {
        copyOnWrite();
        instance.setStorageIndex(value);
        return this;
      }
      /**
       * <pre>
       *存储设备编号
       * </pre>
       *
       * <code>int32 storageIndex = 1;</code>
       */
      public Builder clearStorageIndex() {
        copyOnWrite();
        instance.clearStorageIndex();
        return this;
      }

      /**
       * <pre>
       *存储设备类型
       * </pre>
       *
       * <code>int32 storageType = 2;</code>
       */
      public int getStorageType() {
        return instance.getStorageType();
      }
      /**
       * <pre>
       *存储设备类型
       * </pre>
       *
       * <code>int32 storageType = 2;</code>
       */
      public Builder setStorageType(int value) {
        copyOnWrite();
        instance.setStorageType(value);
        return this;
      }
      /**
       * <pre>
       *存储设备类型
       * </pre>
       *
       * <code>int32 storageType = 2;</code>
       */
      public Builder clearStorageType() {
        copyOnWrite();
        instance.clearStorageType();
        return this;
      }

      /**
       * <pre>
       *存储设备描述
       * </pre>
       *
       * <code>string storageDescr = 3;</code>
       */
      public java.lang.String getStorageDescr() {
        return instance.getStorageDescr();
      }
      /**
       * <pre>
       *存储设备描述
       * </pre>
       *
       * <code>string storageDescr = 3;</code>
       */
      public com.google.protobuf.ByteString
          getStorageDescrBytes() {
        return instance.getStorageDescrBytes();
      }
      /**
       * <pre>
       *存储设备描述
       * </pre>
       *
       * <code>string storageDescr = 3;</code>
       */
      public Builder setStorageDescr(
          java.lang.String value) {
        copyOnWrite();
        instance.setStorageDescr(value);
        return this;
      }
      /**
       * <pre>
       *存储设备描述
       * </pre>
       *
       * <code>string storageDescr = 3;</code>
       */
      public Builder clearStorageDescr() {
        copyOnWrite();
        instance.clearStorageDescr();
        return this;
      }
      /**
       * <pre>
       *存储设备描述
       * </pre>
       *
       * <code>string storageDescr = 3;</code>
       */
      public Builder setStorageDescrBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setStorageDescrBytes(value);
        return this;
      }

      /**
       * <pre>
       *总容量
       * </pre>
       *
       * <code>int32 storageTotal = 4;</code>
       */
      public int getStorageTotal() {
        return instance.getStorageTotal();
      }
      /**
       * <pre>
       *总容量
       * </pre>
       *
       * <code>int32 storageTotal = 4;</code>
       */
      public Builder setStorageTotal(int value) {
        copyOnWrite();
        instance.setStorageTotal(value);
        return this;
      }
      /**
       * <pre>
       *总容量
       * </pre>
       *
       * <code>int32 storageTotal = 4;</code>
       */
      public Builder clearStorageTotal() {
        copyOnWrite();
        instance.clearStorageTotal();
        return this;
      }

      /**
       * <pre>
       *使用率
       * </pre>
       *
       * <code>float usedPercent = 5;</code>
       */
      public float getUsedPercent() {
        return instance.getUsedPercent();
      }
      /**
       * <pre>
       *使用率
       * </pre>
       *
       * <code>float usedPercent = 5;</code>
       */
      public Builder setUsedPercent(float value) {
        copyOnWrite();
        instance.setUsedPercent(value);
        return this;
      }
      /**
       * <pre>
       *使用率
       * </pre>
       *
       * <code>float usedPercent = 5;</code>
       */
      public Builder clearUsedPercent() {
        copyOnWrite();
        instance.clearUsedPercent();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:StorageInfo)
    }
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.networkcollect.NetworkCollect.StorageInfo();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.networkcollect.NetworkCollect.StorageInfo other = (com.networkcollect.NetworkCollect.StorageInfo) arg1;
          storageIndex_ = visitor.visitInt(storageIndex_ != 0, storageIndex_,
              other.storageIndex_ != 0, other.storageIndex_);
          storageType_ = visitor.visitInt(storageType_ != 0, storageType_,
              other.storageType_ != 0, other.storageType_);
          storageDescr_ = visitor.visitString(!storageDescr_.isEmpty(), storageDescr_,
              !other.storageDescr_.isEmpty(), other.storageDescr_);
          storageTotal_ = visitor.visitInt(storageTotal_ != 0, storageTotal_,
              other.storageTotal_ != 0, other.storageTotal_);
          usedPercent_ = visitor.visitFloat(usedPercent_ != 0F, usedPercent_,
              other.usedPercent_ != 0F, other.usedPercent_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!input.skipField(tag)) {
                    done = true;
                  }
                  break;
                }
                case 8: {

                  storageIndex_ = input.readInt32();
                  break;
                }
                case 16: {

                  storageType_ = input.readInt32();
                  break;
                }
                case 26: {
                  String s = input.readStringRequireUtf8();

                  storageDescr_ = s;
                  break;
                }
                case 32: {

                  storageTotal_ = input.readInt32();
                  break;
                }
                case 45: {

                  usedPercent_ = input.readFloat();
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (com.networkcollect.NetworkCollect.StorageInfo.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:StorageInfo)
    private static final com.networkcollect.NetworkCollect.StorageInfo DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new StorageInfo();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static com.networkcollect.NetworkCollect.StorageInfo getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<StorageInfo> PARSER;

    public static com.google.protobuf.Parser<StorageInfo> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface NetPortInfoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:NetPortInfo)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     *网络接口信息描述
     * </pre>
     *
     * <code>string descr = 1;</code>
     */
    java.lang.String getDescr();
    /**
     * <pre>
     *网络接口信息描述
     * </pre>
     *
     * <code>string descr = 1;</code>
     */
    com.google.protobuf.ByteString
        getDescrBytes();

    /**
     * <pre>
     *网络接口类型
     * </pre>
     *
     * <code>int32 type = 2;</code>
     */
    int getType();

    /**
     * <pre>
     *接口的物理地址
     * </pre>
     *
     * <code>string physAddress = 3;</code>
     */
    java.lang.String getPhysAddress();
    /**
     * <pre>
     *接口的物理地址
     * </pre>
     *
     * <code>string physAddress = 3;</code>
     */
    com.google.protobuf.ByteString
        getPhysAddressBytes();

    /**
     * <pre>
     *接口当前操作状态[up|down]
     * </pre>
     *
     * <code>int32 operStatus = 4;</code>
     */
    int getOperStatus();
  }
  /**
   * <pre>
   *网口状态
   * </pre>
   *
   * Protobuf type {@code NetPortInfo}
   */
  public  static final class NetPortInfo extends
      com.google.protobuf.GeneratedMessageLite<
          NetPortInfo, NetPortInfo.Builder> implements
      // @@protoc_insertion_point(message_implements:NetPortInfo)
      NetPortInfoOrBuilder {
    private NetPortInfo() {
      descr_ = "";
      physAddress_ = "";
    }
    public static final int DESCR_FIELD_NUMBER = 1;
    private java.lang.String descr_;
    /**
     * <pre>
     *网络接口信息描述
     * </pre>
     *
     * <code>string descr = 1;</code>
     */
    public java.lang.String getDescr() {
      return descr_;
    }
    /**
     * <pre>
     *网络接口信息描述
     * </pre>
     *
     * <code>string descr = 1;</code>
     */
    public com.google.protobuf.ByteString
        getDescrBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(descr_);
    }
    /**
     * <pre>
     *网络接口信息描述
     * </pre>
     *
     * <code>string descr = 1;</code>
     */
    private void setDescr(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      descr_ = value;
    }
    /**
     * <pre>
     *网络接口信息描述
     * </pre>
     *
     * <code>string descr = 1;</code>
     */
    private void clearDescr() {
      
      descr_ = getDefaultInstance().getDescr();
    }
    /**
     * <pre>
     *网络接口信息描述
     * </pre>
     *
     * <code>string descr = 1;</code>
     */
    private void setDescrBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      descr_ = value.toStringUtf8();
    }

    public static final int TYPE_FIELD_NUMBER = 2;
    private int type_;
    /**
     * <pre>
     *网络接口类型
     * </pre>
     *
     * <code>int32 type = 2;</code>
     */
    public int getType() {
      return type_;
    }
    /**
     * <pre>
     *网络接口类型
     * </pre>
     *
     * <code>int32 type = 2;</code>
     */
    private void setType(int value) {
      
      type_ = value;
    }
    /**
     * <pre>
     *网络接口类型
     * </pre>
     *
     * <code>int32 type = 2;</code>
     */
    private void clearType() {
      
      type_ = 0;
    }

    public static final int PHYSADDRESS_FIELD_NUMBER = 3;
    private java.lang.String physAddress_;
    /**
     * <pre>
     *接口的物理地址
     * </pre>
     *
     * <code>string physAddress = 3;</code>
     */
    public java.lang.String getPhysAddress() {
      return physAddress_;
    }
    /**
     * <pre>
     *接口的物理地址
     * </pre>
     *
     * <code>string physAddress = 3;</code>
     */
    public com.google.protobuf.ByteString
        getPhysAddressBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(physAddress_);
    }
    /**
     * <pre>
     *接口的物理地址
     * </pre>
     *
     * <code>string physAddress = 3;</code>
     */
    private void setPhysAddress(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      physAddress_ = value;
    }
    /**
     * <pre>
     *接口的物理地址
     * </pre>
     *
     * <code>string physAddress = 3;</code>
     */
    private void clearPhysAddress() {
      
      physAddress_ = getDefaultInstance().getPhysAddress();
    }
    /**
     * <pre>
     *接口的物理地址
     * </pre>
     *
     * <code>string physAddress = 3;</code>
     */
    private void setPhysAddressBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      physAddress_ = value.toStringUtf8();
    }

    public static final int OPERSTATUS_FIELD_NUMBER = 4;
    private int operStatus_;
    /**
     * <pre>
     *接口当前操作状态[up|down]
     * </pre>
     *
     * <code>int32 operStatus = 4;</code>
     */
    public int getOperStatus() {
      return operStatus_;
    }
    /**
     * <pre>
     *接口当前操作状态[up|down]
     * </pre>
     *
     * <code>int32 operStatus = 4;</code>
     */
    private void setOperStatus(int value) {
      
      operStatus_ = value;
    }
    /**
     * <pre>
     *接口当前操作状态[up|down]
     * </pre>
     *
     * <code>int32 operStatus = 4;</code>
     */
    private void clearOperStatus() {
      
      operStatus_ = 0;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!descr_.isEmpty()) {
        output.writeString(1, getDescr());
      }
      if (type_ != 0) {
        output.writeInt32(2, type_);
      }
      if (!physAddress_.isEmpty()) {
        output.writeString(3, getPhysAddress());
      }
      if (operStatus_ != 0) {
        output.writeInt32(4, operStatus_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (!descr_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getDescr());
      }
      if (type_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, type_);
      }
      if (!physAddress_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(3, getPhysAddress());
      }
      if (operStatus_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, operStatus_);
      }
      memoizedSerializedSize = size;
      return size;
    }

    public static com.networkcollect.NetworkCollect.NetPortInfo parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.networkcollect.NetworkCollect.NetPortInfo parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.networkcollect.NetworkCollect.NetPortInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.networkcollect.NetworkCollect.NetPortInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.networkcollect.NetworkCollect.NetPortInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.networkcollect.NetworkCollect.NetPortInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.networkcollect.NetworkCollect.NetPortInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.networkcollect.NetworkCollect.NetPortInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.networkcollect.NetworkCollect.NetPortInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.networkcollect.NetworkCollect.NetPortInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.networkcollect.NetworkCollect.NetPortInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.networkcollect.NetworkCollect.NetPortInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.networkcollect.NetworkCollect.NetPortInfo prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * <pre>
     *网口状态
     * </pre>
     *
     * Protobuf type {@code NetPortInfo}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.networkcollect.NetworkCollect.NetPortInfo, Builder> implements
        // @@protoc_insertion_point(builder_implements:NetPortInfo)
        com.networkcollect.NetworkCollect.NetPortInfoOrBuilder {
      // Construct using com.networkcollect.NetworkCollect.NetPortInfo.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       *网络接口信息描述
       * </pre>
       *
       * <code>string descr = 1;</code>
       */
      public java.lang.String getDescr() {
        return instance.getDescr();
      }
      /**
       * <pre>
       *网络接口信息描述
       * </pre>
       *
       * <code>string descr = 1;</code>
       */
      public com.google.protobuf.ByteString
          getDescrBytes() {
        return instance.getDescrBytes();
      }
      /**
       * <pre>
       *网络接口信息描述
       * </pre>
       *
       * <code>string descr = 1;</code>
       */
      public Builder setDescr(
          java.lang.String value) {
        copyOnWrite();
        instance.setDescr(value);
        return this;
      }
      /**
       * <pre>
       *网络接口信息描述
       * </pre>
       *
       * <code>string descr = 1;</code>
       */
      public Builder clearDescr() {
        copyOnWrite();
        instance.clearDescr();
        return this;
      }
      /**
       * <pre>
       *网络接口信息描述
       * </pre>
       *
       * <code>string descr = 1;</code>
       */
      public Builder setDescrBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setDescrBytes(value);
        return this;
      }

      /**
       * <pre>
       *网络接口类型
       * </pre>
       *
       * <code>int32 type = 2;</code>
       */
      public int getType() {
        return instance.getType();
      }
      /**
       * <pre>
       *网络接口类型
       * </pre>
       *
       * <code>int32 type = 2;</code>
       */
      public Builder setType(int value) {
        copyOnWrite();
        instance.setType(value);
        return this;
      }
      /**
       * <pre>
       *网络接口类型
       * </pre>
       *
       * <code>int32 type = 2;</code>
       */
      public Builder clearType() {
        copyOnWrite();
        instance.clearType();
        return this;
      }

      /**
       * <pre>
       *接口的物理地址
       * </pre>
       *
       * <code>string physAddress = 3;</code>
       */
      public java.lang.String getPhysAddress() {
        return instance.getPhysAddress();
      }
      /**
       * <pre>
       *接口的物理地址
       * </pre>
       *
       * <code>string physAddress = 3;</code>
       */
      public com.google.protobuf.ByteString
          getPhysAddressBytes() {
        return instance.getPhysAddressBytes();
      }
      /**
       * <pre>
       *接口的物理地址
       * </pre>
       *
       * <code>string physAddress = 3;</code>
       */
      public Builder setPhysAddress(
          java.lang.String value) {
        copyOnWrite();
        instance.setPhysAddress(value);
        return this;
      }
      /**
       * <pre>
       *接口的物理地址
       * </pre>
       *
       * <code>string physAddress = 3;</code>
       */
      public Builder clearPhysAddress() {
        copyOnWrite();
        instance.clearPhysAddress();
        return this;
      }
      /**
       * <pre>
       *接口的物理地址
       * </pre>
       *
       * <code>string physAddress = 3;</code>
       */
      public Builder setPhysAddressBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setPhysAddressBytes(value);
        return this;
      }

      /**
       * <pre>
       *接口当前操作状态[up|down]
       * </pre>
       *
       * <code>int32 operStatus = 4;</code>
       */
      public int getOperStatus() {
        return instance.getOperStatus();
      }
      /**
       * <pre>
       *接口当前操作状态[up|down]
       * </pre>
       *
       * <code>int32 operStatus = 4;</code>
       */
      public Builder setOperStatus(int value) {
        copyOnWrite();
        instance.setOperStatus(value);
        return this;
      }
      /**
       * <pre>
       *接口当前操作状态[up|down]
       * </pre>
       *
       * <code>int32 operStatus = 4;</code>
       */
      public Builder clearOperStatus() {
        copyOnWrite();
        instance.clearOperStatus();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:NetPortInfo)
    }
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.networkcollect.NetworkCollect.NetPortInfo();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.networkcollect.NetworkCollect.NetPortInfo other = (com.networkcollect.NetworkCollect.NetPortInfo) arg1;
          descr_ = visitor.visitString(!descr_.isEmpty(), descr_,
              !other.descr_.isEmpty(), other.descr_);
          type_ = visitor.visitInt(type_ != 0, type_,
              other.type_ != 0, other.type_);
          physAddress_ = visitor.visitString(!physAddress_.isEmpty(), physAddress_,
              !other.physAddress_.isEmpty(), other.physAddress_);
          operStatus_ = visitor.visitInt(operStatus_ != 0, operStatus_,
              other.operStatus_ != 0, other.operStatus_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!input.skipField(tag)) {
                    done = true;
                  }
                  break;
                }
                case 10: {
                  String s = input.readStringRequireUtf8();

                  descr_ = s;
                  break;
                }
                case 16: {

                  type_ = input.readInt32();
                  break;
                }
                case 26: {
                  String s = input.readStringRequireUtf8();

                  physAddress_ = s;
                  break;
                }
                case 32: {

                  operStatus_ = input.readInt32();
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (com.networkcollect.NetworkCollect.NetPortInfo.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:NetPortInfo)
    private static final com.networkcollect.NetworkCollect.NetPortInfo DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new NetPortInfo();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static com.networkcollect.NetworkCollect.NetPortInfo getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<NetPortInfo> PARSER;

    public static com.google.protobuf.Parser<NetPortInfo> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface MacAddrInfoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:MacAddrInfo)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     *网络接口号
     * </pre>
     *
     * <code>string netToMediaIfIndex = 1;</code>
     */
    java.lang.String getNetToMediaIfIndex();
    /**
     * <pre>
     *网络接口号
     * </pre>
     *
     * <code>string netToMediaIfIndex = 1;</code>
     */
    com.google.protobuf.ByteString
        getNetToMediaIfIndexBytes();

    /**
     * <pre>
     *mac地址
     * </pre>
     *
     * <code>string netToMediaPhysAddress = 2;</code>
     */
    java.lang.String getNetToMediaPhysAddress();
    /**
     * <pre>
     *mac地址
     * </pre>
     *
     * <code>string netToMediaPhysAddress = 2;</code>
     */
    com.google.protobuf.ByteString
        getNetToMediaPhysAddressBytes();

    /**
     * <pre>
     *ip地址
     * </pre>
     *
     * <code>string netToMediaNetAddress = 3;</code>
     */
    java.lang.String getNetToMediaNetAddress();
    /**
     * <pre>
     *ip地址
     * </pre>
     *
     * <code>string netToMediaNetAddress = 3;</code>
     */
    com.google.protobuf.ByteString
        getNetToMediaNetAddressBytes();
  }
  /**
   * <pre>
   *mac地址表
   * </pre>
   *
   * Protobuf type {@code MacAddrInfo}
   */
  public  static final class MacAddrInfo extends
      com.google.protobuf.GeneratedMessageLite<
          MacAddrInfo, MacAddrInfo.Builder> implements
      // @@protoc_insertion_point(message_implements:MacAddrInfo)
      MacAddrInfoOrBuilder {
    private MacAddrInfo() {
      netToMediaIfIndex_ = "";
      netToMediaPhysAddress_ = "";
      netToMediaNetAddress_ = "";
    }
    public static final int NETTOMEDIAIFINDEX_FIELD_NUMBER = 1;
    private java.lang.String netToMediaIfIndex_;
    /**
     * <pre>
     *网络接口号
     * </pre>
     *
     * <code>string netToMediaIfIndex = 1;</code>
     */
    public java.lang.String getNetToMediaIfIndex() {
      return netToMediaIfIndex_;
    }
    /**
     * <pre>
     *网络接口号
     * </pre>
     *
     * <code>string netToMediaIfIndex = 1;</code>
     */
    public com.google.protobuf.ByteString
        getNetToMediaIfIndexBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(netToMediaIfIndex_);
    }
    /**
     * <pre>
     *网络接口号
     * </pre>
     *
     * <code>string netToMediaIfIndex = 1;</code>
     */
    private void setNetToMediaIfIndex(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      netToMediaIfIndex_ = value;
    }
    /**
     * <pre>
     *网络接口号
     * </pre>
     *
     * <code>string netToMediaIfIndex = 1;</code>
     */
    private void clearNetToMediaIfIndex() {
      
      netToMediaIfIndex_ = getDefaultInstance().getNetToMediaIfIndex();
    }
    /**
     * <pre>
     *网络接口号
     * </pre>
     *
     * <code>string netToMediaIfIndex = 1;</code>
     */
    private void setNetToMediaIfIndexBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      netToMediaIfIndex_ = value.toStringUtf8();
    }

    public static final int NETTOMEDIAPHYSADDRESS_FIELD_NUMBER = 2;
    private java.lang.String netToMediaPhysAddress_;
    /**
     * <pre>
     *mac地址
     * </pre>
     *
     * <code>string netToMediaPhysAddress = 2;</code>
     */
    public java.lang.String getNetToMediaPhysAddress() {
      return netToMediaPhysAddress_;
    }
    /**
     * <pre>
     *mac地址
     * </pre>
     *
     * <code>string netToMediaPhysAddress = 2;</code>
     */
    public com.google.protobuf.ByteString
        getNetToMediaPhysAddressBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(netToMediaPhysAddress_);
    }
    /**
     * <pre>
     *mac地址
     * </pre>
     *
     * <code>string netToMediaPhysAddress = 2;</code>
     */
    private void setNetToMediaPhysAddress(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      netToMediaPhysAddress_ = value;
    }
    /**
     * <pre>
     *mac地址
     * </pre>
     *
     * <code>string netToMediaPhysAddress = 2;</code>
     */
    private void clearNetToMediaPhysAddress() {
      
      netToMediaPhysAddress_ = getDefaultInstance().getNetToMediaPhysAddress();
    }
    /**
     * <pre>
     *mac地址
     * </pre>
     *
     * <code>string netToMediaPhysAddress = 2;</code>
     */
    private void setNetToMediaPhysAddressBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      netToMediaPhysAddress_ = value.toStringUtf8();
    }

    public static final int NETTOMEDIANETADDRESS_FIELD_NUMBER = 3;
    private java.lang.String netToMediaNetAddress_;
    /**
     * <pre>
     *ip地址
     * </pre>
     *
     * <code>string netToMediaNetAddress = 3;</code>
     */
    public java.lang.String getNetToMediaNetAddress() {
      return netToMediaNetAddress_;
    }
    /**
     * <pre>
     *ip地址
     * </pre>
     *
     * <code>string netToMediaNetAddress = 3;</code>
     */
    public com.google.protobuf.ByteString
        getNetToMediaNetAddressBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(netToMediaNetAddress_);
    }
    /**
     * <pre>
     *ip地址
     * </pre>
     *
     * <code>string netToMediaNetAddress = 3;</code>
     */
    private void setNetToMediaNetAddress(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      netToMediaNetAddress_ = value;
    }
    /**
     * <pre>
     *ip地址
     * </pre>
     *
     * <code>string netToMediaNetAddress = 3;</code>
     */
    private void clearNetToMediaNetAddress() {
      
      netToMediaNetAddress_ = getDefaultInstance().getNetToMediaNetAddress();
    }
    /**
     * <pre>
     *ip地址
     * </pre>
     *
     * <code>string netToMediaNetAddress = 3;</code>
     */
    private void setNetToMediaNetAddressBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      netToMediaNetAddress_ = value.toStringUtf8();
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!netToMediaIfIndex_.isEmpty()) {
        output.writeString(1, getNetToMediaIfIndex());
      }
      if (!netToMediaPhysAddress_.isEmpty()) {
        output.writeString(2, getNetToMediaPhysAddress());
      }
      if (!netToMediaNetAddress_.isEmpty()) {
        output.writeString(3, getNetToMediaNetAddress());
      }
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (!netToMediaIfIndex_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getNetToMediaIfIndex());
      }
      if (!netToMediaPhysAddress_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(2, getNetToMediaPhysAddress());
      }
      if (!netToMediaNetAddress_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(3, getNetToMediaNetAddress());
      }
      memoizedSerializedSize = size;
      return size;
    }

    public static com.networkcollect.NetworkCollect.MacAddrInfo parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.networkcollect.NetworkCollect.MacAddrInfo parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.networkcollect.NetworkCollect.MacAddrInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.networkcollect.NetworkCollect.MacAddrInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.networkcollect.NetworkCollect.MacAddrInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.networkcollect.NetworkCollect.MacAddrInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.networkcollect.NetworkCollect.MacAddrInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.networkcollect.NetworkCollect.MacAddrInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.networkcollect.NetworkCollect.MacAddrInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.networkcollect.NetworkCollect.MacAddrInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.networkcollect.NetworkCollect.MacAddrInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.networkcollect.NetworkCollect.MacAddrInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.networkcollect.NetworkCollect.MacAddrInfo prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * <pre>
     *mac地址表
     * </pre>
     *
     * Protobuf type {@code MacAddrInfo}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.networkcollect.NetworkCollect.MacAddrInfo, Builder> implements
        // @@protoc_insertion_point(builder_implements:MacAddrInfo)
        com.networkcollect.NetworkCollect.MacAddrInfoOrBuilder {
      // Construct using com.networkcollect.NetworkCollect.MacAddrInfo.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       *网络接口号
       * </pre>
       *
       * <code>string netToMediaIfIndex = 1;</code>
       */
      public java.lang.String getNetToMediaIfIndex() {
        return instance.getNetToMediaIfIndex();
      }
      /**
       * <pre>
       *网络接口号
       * </pre>
       *
       * <code>string netToMediaIfIndex = 1;</code>
       */
      public com.google.protobuf.ByteString
          getNetToMediaIfIndexBytes() {
        return instance.getNetToMediaIfIndexBytes();
      }
      /**
       * <pre>
       *网络接口号
       * </pre>
       *
       * <code>string netToMediaIfIndex = 1;</code>
       */
      public Builder setNetToMediaIfIndex(
          java.lang.String value) {
        copyOnWrite();
        instance.setNetToMediaIfIndex(value);
        return this;
      }
      /**
       * <pre>
       *网络接口号
       * </pre>
       *
       * <code>string netToMediaIfIndex = 1;</code>
       */
      public Builder clearNetToMediaIfIndex() {
        copyOnWrite();
        instance.clearNetToMediaIfIndex();
        return this;
      }
      /**
       * <pre>
       *网络接口号
       * </pre>
       *
       * <code>string netToMediaIfIndex = 1;</code>
       */
      public Builder setNetToMediaIfIndexBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setNetToMediaIfIndexBytes(value);
        return this;
      }

      /**
       * <pre>
       *mac地址
       * </pre>
       *
       * <code>string netToMediaPhysAddress = 2;</code>
       */
      public java.lang.String getNetToMediaPhysAddress() {
        return instance.getNetToMediaPhysAddress();
      }
      /**
       * <pre>
       *mac地址
       * </pre>
       *
       * <code>string netToMediaPhysAddress = 2;</code>
       */
      public com.google.protobuf.ByteString
          getNetToMediaPhysAddressBytes() {
        return instance.getNetToMediaPhysAddressBytes();
      }
      /**
       * <pre>
       *mac地址
       * </pre>
       *
       * <code>string netToMediaPhysAddress = 2;</code>
       */
      public Builder setNetToMediaPhysAddress(
          java.lang.String value) {
        copyOnWrite();
        instance.setNetToMediaPhysAddress(value);
        return this;
      }
      /**
       * <pre>
       *mac地址
       * </pre>
       *
       * <code>string netToMediaPhysAddress = 2;</code>
       */
      public Builder clearNetToMediaPhysAddress() {
        copyOnWrite();
        instance.clearNetToMediaPhysAddress();
        return this;
      }
      /**
       * <pre>
       *mac地址
       * </pre>
       *
       * <code>string netToMediaPhysAddress = 2;</code>
       */
      public Builder setNetToMediaPhysAddressBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setNetToMediaPhysAddressBytes(value);
        return this;
      }

      /**
       * <pre>
       *ip地址
       * </pre>
       *
       * <code>string netToMediaNetAddress = 3;</code>
       */
      public java.lang.String getNetToMediaNetAddress() {
        return instance.getNetToMediaNetAddress();
      }
      /**
       * <pre>
       *ip地址
       * </pre>
       *
       * <code>string netToMediaNetAddress = 3;</code>
       */
      public com.google.protobuf.ByteString
          getNetToMediaNetAddressBytes() {
        return instance.getNetToMediaNetAddressBytes();
      }
      /**
       * <pre>
       *ip地址
       * </pre>
       *
       * <code>string netToMediaNetAddress = 3;</code>
       */
      public Builder setNetToMediaNetAddress(
          java.lang.String value) {
        copyOnWrite();
        instance.setNetToMediaNetAddress(value);
        return this;
      }
      /**
       * <pre>
       *ip地址
       * </pre>
       *
       * <code>string netToMediaNetAddress = 3;</code>
       */
      public Builder clearNetToMediaNetAddress() {
        copyOnWrite();
        instance.clearNetToMediaNetAddress();
        return this;
      }
      /**
       * <pre>
       *ip地址
       * </pre>
       *
       * <code>string netToMediaNetAddress = 3;</code>
       */
      public Builder setNetToMediaNetAddressBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setNetToMediaNetAddressBytes(value);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:MacAddrInfo)
    }
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.networkcollect.NetworkCollect.MacAddrInfo();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.networkcollect.NetworkCollect.MacAddrInfo other = (com.networkcollect.NetworkCollect.MacAddrInfo) arg1;
          netToMediaIfIndex_ = visitor.visitString(!netToMediaIfIndex_.isEmpty(), netToMediaIfIndex_,
              !other.netToMediaIfIndex_.isEmpty(), other.netToMediaIfIndex_);
          netToMediaPhysAddress_ = visitor.visitString(!netToMediaPhysAddress_.isEmpty(), netToMediaPhysAddress_,
              !other.netToMediaPhysAddress_.isEmpty(), other.netToMediaPhysAddress_);
          netToMediaNetAddress_ = visitor.visitString(!netToMediaNetAddress_.isEmpty(), netToMediaNetAddress_,
              !other.netToMediaNetAddress_.isEmpty(), other.netToMediaNetAddress_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!input.skipField(tag)) {
                    done = true;
                  }
                  break;
                }
                case 10: {
                  String s = input.readStringRequireUtf8();

                  netToMediaIfIndex_ = s;
                  break;
                }
                case 18: {
                  String s = input.readStringRequireUtf8();

                  netToMediaPhysAddress_ = s;
                  break;
                }
                case 26: {
                  String s = input.readStringRequireUtf8();

                  netToMediaNetAddress_ = s;
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (com.networkcollect.NetworkCollect.MacAddrInfo.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:MacAddrInfo)
    private static final com.networkcollect.NetworkCollect.MacAddrInfo DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new MacAddrInfo();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static com.networkcollect.NetworkCollect.MacAddrInfo getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<MacAddrInfo> PARSER;

    public static com.google.protobuf.Parser<MacAddrInfo> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface CollectDataOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CollectData)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     *协议类型-----
     * </pre>
     *
     * <code>.ProtocolType type = 1;</code>
     */
    int getTypeValue();
    /**
     * <pre>
     *协议类型-----
     * </pre>
     *
     * <code>.ProtocolType type = 1;</code>
     */
    com.networkcollect.NetworkCollect.ProtocolType getType();

    /**
     * <pre>
     *资产id-----
     * </pre>
     *
     * <code>string assetId = 2;</code>
     */
    java.lang.String getAssetId();
    /**
     * <pre>
     *资产id-----
     * </pre>
     *
     * <code>string assetId = 2;</code>
     */
    com.google.protobuf.ByteString
        getAssetIdBytes();

    /**
     * <pre>
     *数据类型
     * </pre>
     *
     * <code>.CdataType dataType = 3;</code>
     */
    int getDataTypeValue();
    /**
     * <pre>
     *数据类型
     * </pre>
     *
     * <code>.CdataType dataType = 3;</code>
     */
    com.networkcollect.NetworkCollect.CdataType getDataType();

    /**
     * <pre>
     *日志类型
     * </pre>
     *
     * <code>int32 logType = 4;</code>
     */
    int getLogType();

    /**
     * <pre>
     *日志子类型
     * </pre>
     *
     * <code>int32 logSubType = 5;</code>
     */
    int getLogSubType();

    /**
     * <pre>
     *事件类型
     * </pre>
     *
     * <code>int32 eventType = 6;</code>
     */
    int getEventType();

    /**
     * <pre>
     *事件子类型
     * </pre>
     *
     * <code>int32 eventSubType = 7;</code>
     */
    int getEventSubType();

    /**
     * <pre>
     *事件级别
     * </pre>
     *
     * <code>int32 level = 8;</code>
     */
    int getLevel();

    /**
     * <pre>
     *设备类型
     * </pre>
     *
     * <code>string deviceType = 9;</code>
     */
    java.lang.String getDeviceType();
    /**
     * <pre>
     *设备类型
     * </pre>
     *
     * <code>string deviceType = 9;</code>
     */
    com.google.protobuf.ByteString
        getDeviceTypeBytes();

    /**
     * <pre>
     *设备子类型
     * </pre>
     *
     * <code>string deviceSubType = 10;</code>
     */
    java.lang.String getDeviceSubType();
    /**
     * <pre>
     *设备子类型
     * </pre>
     *
     * <code>string deviceSubType = 10;</code>
     */
    com.google.protobuf.ByteString
        getDeviceSubTypeBytes();

    /**
     * <pre>
     *监控项id
     * </pre>
     *
     * <code>string itemId = 11;</code>
     */
    java.lang.String getItemId();
    /**
     * <pre>
     *监控项id
     * </pre>
     *
     * <code>string itemId = 11;</code>
     */
    com.google.protobuf.ByteString
        getItemIdBytes();

    /**
     * <pre>
     *时间(yyyy-MM-dd hh:mm:ss)
     * </pre>
     *
     * <code>string time = 12;</code>
     */
    java.lang.String getTime();
    /**
     * <pre>
     *时间(yyyy-MM-dd hh:mm:ss)
     * </pre>
     *
     * <code>string time = 12;</code>
     */
    com.google.protobuf.ByteString
        getTimeBytes();

    /**
     * <pre>
     *采集项值-----
     * </pre>
     *
     * <code>string itemValue = 13;</code>
     */
    java.lang.String getItemValue();
    /**
     * <pre>
     *采集项值-----
     * </pre>
     *
     * <code>string itemValue = 13;</code>
     */
    com.google.protobuf.ByteString
        getItemValueBytes();

    /**
     * <code>repeated .KeyValue valueList = 14;</code>
     */
    java.util.List<com.networkcollect.NetworkCollect.KeyValue> 
        getValueListList();
    /**
     * <code>repeated .KeyValue valueList = 14;</code>
     */
    com.networkcollect.NetworkCollect.KeyValue getValueList(int index);
    /**
     * <code>repeated .KeyValue valueList = 14;</code>
     */
    int getValueListCount();

    /**
     * <pre>
     *cpu使用率
     * </pre>
     *
     * <code>float cpuUsed = 15;</code>
     */
    float getCpuUsed();

    /**
     * <pre>
     *内存使用率
     * </pre>
     *
     * <code>float memUsed = 16;</code>
     */
    float getMemUsed();

    /**
     * <pre>
     *磁盘使用率
     * </pre>
     *
     * <code>repeated .StorageInfo storageInfoList = 17;</code>
     */
    java.util.List<com.networkcollect.NetworkCollect.StorageInfo> 
        getStorageInfoListList();
    /**
     * <pre>
     *磁盘使用率
     * </pre>
     *
     * <code>repeated .StorageInfo storageInfoList = 17;</code>
     */
    com.networkcollect.NetworkCollect.StorageInfo getStorageInfoList(int index);
    /**
     * <pre>
     *磁盘使用率
     * </pre>
     *
     * <code>repeated .StorageInfo storageInfoList = 17;</code>
     */
    int getStorageInfoListCount();

    /**
     * <pre>
     *网口状态
     * </pre>
     *
     * <code>repeated .NetPortInfo netPortInfoList = 18;</code>
     */
    java.util.List<com.networkcollect.NetworkCollect.NetPortInfo> 
        getNetPortInfoListList();
    /**
     * <pre>
     *网口状态
     * </pre>
     *
     * <code>repeated .NetPortInfo netPortInfoList = 18;</code>
     */
    com.networkcollect.NetworkCollect.NetPortInfo getNetPortInfoList(int index);
    /**
     * <pre>
     *网口状态
     * </pre>
     *
     * <code>repeated .NetPortInfo netPortInfoList = 18;</code>
     */
    int getNetPortInfoListCount();

    /**
     * <pre>
     *mac地址表
     * </pre>
     *
     * <code>repeated .MacAddrInfo macAddrInfoList = 19;</code>
     */
    java.util.List<com.networkcollect.NetworkCollect.MacAddrInfo> 
        getMacAddrInfoListList();
    /**
     * <pre>
     *mac地址表
     * </pre>
     *
     * <code>repeated .MacAddrInfo macAddrInfoList = 19;</code>
     */
    com.networkcollect.NetworkCollect.MacAddrInfo getMacAddrInfoList(int index);
    /**
     * <pre>
     *mac地址表
     * </pre>
     *
     * <code>repeated .MacAddrInfo macAddrInfoList = 19;</code>
     */
    int getMacAddrInfoListCount();
  }
  /**
   * Protobuf type {@code CollectData}
   */
  public  static final class CollectData extends
      com.google.protobuf.GeneratedMessageLite<
          CollectData, CollectData.Builder> implements
      // @@protoc_insertion_point(message_implements:CollectData)
      CollectDataOrBuilder {
    private CollectData() {
      assetId_ = "";
      deviceType_ = "";
      deviceSubType_ = "";
      itemId_ = "";
      time_ = "";
      itemValue_ = "";
      valueList_ = emptyProtobufList();
      storageInfoList_ = emptyProtobufList();
      netPortInfoList_ = emptyProtobufList();
      macAddrInfoList_ = emptyProtobufList();
    }
    private int bitField0_;
    public static final int TYPE_FIELD_NUMBER = 1;
    private int type_;
    /**
     * <pre>
     *协议类型-----
     * </pre>
     *
     * <code>.ProtocolType type = 1;</code>
     */
    public int getTypeValue() {
      return type_;
    }
    /**
     * <pre>
     *协议类型-----
     * </pre>
     *
     * <code>.ProtocolType type = 1;</code>
     */
    public com.networkcollect.NetworkCollect.ProtocolType getType() {
      com.networkcollect.NetworkCollect.ProtocolType result = com.networkcollect.NetworkCollect.ProtocolType.forNumber(type_);
      return result == null ? com.networkcollect.NetworkCollect.ProtocolType.UNRECOGNIZED : result;
    }
    /**
     * <pre>
     *协议类型-----
     * </pre>
     *
     * <code>.ProtocolType type = 1;</code>
     */
    private void setTypeValue(int value) {
        type_ = value;
    }
    /**
     * <pre>
     *协议类型-----
     * </pre>
     *
     * <code>.ProtocolType type = 1;</code>
     */
    private void setType(com.networkcollect.NetworkCollect.ProtocolType value) {
      if (value == null) {
        throw new NullPointerException();
      }
      
      type_ = value.getNumber();
    }
    /**
     * <pre>
     *协议类型-----
     * </pre>
     *
     * <code>.ProtocolType type = 1;</code>
     */
    private void clearType() {
      
      type_ = 0;
    }

    public static final int ASSETID_FIELD_NUMBER = 2;
    private java.lang.String assetId_;
    /**
     * <pre>
     *资产id-----
     * </pre>
     *
     * <code>string assetId = 2;</code>
     */
    public java.lang.String getAssetId() {
      return assetId_;
    }
    /**
     * <pre>
     *资产id-----
     * </pre>
     *
     * <code>string assetId = 2;</code>
     */
    public com.google.protobuf.ByteString
        getAssetIdBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(assetId_);
    }
    /**
     * <pre>
     *资产id-----
     * </pre>
     *
     * <code>string assetId = 2;</code>
     */
    private void setAssetId(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      assetId_ = value;
    }
    /**
     * <pre>
     *资产id-----
     * </pre>
     *
     * <code>string assetId = 2;</code>
     */
    private void clearAssetId() {
      
      assetId_ = getDefaultInstance().getAssetId();
    }
    /**
     * <pre>
     *资产id-----
     * </pre>
     *
     * <code>string assetId = 2;</code>
     */
    private void setAssetIdBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      assetId_ = value.toStringUtf8();
    }

    public static final int DATATYPE_FIELD_NUMBER = 3;
    private int dataType_;
    /**
     * <pre>
     *数据类型
     * </pre>
     *
     * <code>.CdataType dataType = 3;</code>
     */
    public int getDataTypeValue() {
      return dataType_;
    }
    /**
     * <pre>
     *数据类型
     * </pre>
     *
     * <code>.CdataType dataType = 3;</code>
     */
    public com.networkcollect.NetworkCollect.CdataType getDataType() {
      com.networkcollect.NetworkCollect.CdataType result = com.networkcollect.NetworkCollect.CdataType.forNumber(dataType_);
      return result == null ? com.networkcollect.NetworkCollect.CdataType.UNRECOGNIZED : result;
    }
    /**
     * <pre>
     *数据类型
     * </pre>
     *
     * <code>.CdataType dataType = 3;</code>
     */
    private void setDataTypeValue(int value) {
        dataType_ = value;
    }
    /**
     * <pre>
     *数据类型
     * </pre>
     *
     * <code>.CdataType dataType = 3;</code>
     */
    private void setDataType(com.networkcollect.NetworkCollect.CdataType value) {
      if (value == null) {
        throw new NullPointerException();
      }
      
      dataType_ = value.getNumber();
    }
    /**
     * <pre>
     *数据类型
     * </pre>
     *
     * <code>.CdataType dataType = 3;</code>
     */
    private void clearDataType() {
      
      dataType_ = 0;
    }

    public static final int LOGTYPE_FIELD_NUMBER = 4;
    private int logType_;
    /**
     * <pre>
     *日志类型
     * </pre>
     *
     * <code>int32 logType = 4;</code>
     */
    public int getLogType() {
      return logType_;
    }
    /**
     * <pre>
     *日志类型
     * </pre>
     *
     * <code>int32 logType = 4;</code>
     */
    private void setLogType(int value) {
      
      logType_ = value;
    }
    /**
     * <pre>
     *日志类型
     * </pre>
     *
     * <code>int32 logType = 4;</code>
     */
    private void clearLogType() {
      
      logType_ = 0;
    }

    public static final int LOGSUBTYPE_FIELD_NUMBER = 5;
    private int logSubType_;
    /**
     * <pre>
     *日志子类型
     * </pre>
     *
     * <code>int32 logSubType = 5;</code>
     */
    public int getLogSubType() {
      return logSubType_;
    }
    /**
     * <pre>
     *日志子类型
     * </pre>
     *
     * <code>int32 logSubType = 5;</code>
     */
    private void setLogSubType(int value) {
      
      logSubType_ = value;
    }
    /**
     * <pre>
     *日志子类型
     * </pre>
     *
     * <code>int32 logSubType = 5;</code>
     */
    private void clearLogSubType() {
      
      logSubType_ = 0;
    }

    public static final int EVENTTYPE_FIELD_NUMBER = 6;
    private int eventType_;
    /**
     * <pre>
     *事件类型
     * </pre>
     *
     * <code>int32 eventType = 6;</code>
     */
    public int getEventType() {
      return eventType_;
    }
    /**
     * <pre>
     *事件类型
     * </pre>
     *
     * <code>int32 eventType = 6;</code>
     */
    private void setEventType(int value) {
      
      eventType_ = value;
    }
    /**
     * <pre>
     *事件类型
     * </pre>
     *
     * <code>int32 eventType = 6;</code>
     */
    private void clearEventType() {
      
      eventType_ = 0;
    }

    public static final int EVENTSUBTYPE_FIELD_NUMBER = 7;
    private int eventSubType_;
    /**
     * <pre>
     *事件子类型
     * </pre>
     *
     * <code>int32 eventSubType = 7;</code>
     */
    public int getEventSubType() {
      return eventSubType_;
    }
    /**
     * <pre>
     *事件子类型
     * </pre>
     *
     * <code>int32 eventSubType = 7;</code>
     */
    private void setEventSubType(int value) {
      
      eventSubType_ = value;
    }
    /**
     * <pre>
     *事件子类型
     * </pre>
     *
     * <code>int32 eventSubType = 7;</code>
     */
    private void clearEventSubType() {
      
      eventSubType_ = 0;
    }

    public static final int LEVEL_FIELD_NUMBER = 8;
    private int level_;
    /**
     * <pre>
     *事件级别
     * </pre>
     *
     * <code>int32 level = 8;</code>
     */
    public int getLevel() {
      return level_;
    }
    /**
     * <pre>
     *事件级别
     * </pre>
     *
     * <code>int32 level = 8;</code>
     */
    private void setLevel(int value) {
      
      level_ = value;
    }
    /**
     * <pre>
     *事件级别
     * </pre>
     *
     * <code>int32 level = 8;</code>
     */
    private void clearLevel() {
      
      level_ = 0;
    }

    public static final int DEVICETYPE_FIELD_NUMBER = 9;
    private java.lang.String deviceType_;
    /**
     * <pre>
     *设备类型
     * </pre>
     *
     * <code>string deviceType = 9;</code>
     */
    public java.lang.String getDeviceType() {
      return deviceType_;
    }
    /**
     * <pre>
     *设备类型
     * </pre>
     *
     * <code>string deviceType = 9;</code>
     */
    public com.google.protobuf.ByteString
        getDeviceTypeBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(deviceType_);
    }
    /**
     * <pre>
     *设备类型
     * </pre>
     *
     * <code>string deviceType = 9;</code>
     */
    private void setDeviceType(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      deviceType_ = value;
    }
    /**
     * <pre>
     *设备类型
     * </pre>
     *
     * <code>string deviceType = 9;</code>
     */
    private void clearDeviceType() {
      
      deviceType_ = getDefaultInstance().getDeviceType();
    }
    /**
     * <pre>
     *设备类型
     * </pre>
     *
     * <code>string deviceType = 9;</code>
     */
    private void setDeviceTypeBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      deviceType_ = value.toStringUtf8();
    }

    public static final int DEVICESUBTYPE_FIELD_NUMBER = 10;
    private java.lang.String deviceSubType_;
    /**
     * <pre>
     *设备子类型
     * </pre>
     *
     * <code>string deviceSubType = 10;</code>
     */
    public java.lang.String getDeviceSubType() {
      return deviceSubType_;
    }
    /**
     * <pre>
     *设备子类型
     * </pre>
     *
     * <code>string deviceSubType = 10;</code>
     */
    public com.google.protobuf.ByteString
        getDeviceSubTypeBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(deviceSubType_);
    }
    /**
     * <pre>
     *设备子类型
     * </pre>
     *
     * <code>string deviceSubType = 10;</code>
     */
    private void setDeviceSubType(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      deviceSubType_ = value;
    }
    /**
     * <pre>
     *设备子类型
     * </pre>
     *
     * <code>string deviceSubType = 10;</code>
     */
    private void clearDeviceSubType() {
      
      deviceSubType_ = getDefaultInstance().getDeviceSubType();
    }
    /**
     * <pre>
     *设备子类型
     * </pre>
     *
     * <code>string deviceSubType = 10;</code>
     */
    private void setDeviceSubTypeBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      deviceSubType_ = value.toStringUtf8();
    }

    public static final int ITEMID_FIELD_NUMBER = 11;
    private java.lang.String itemId_;
    /**
     * <pre>
     *监控项id
     * </pre>
     *
     * <code>string itemId = 11;</code>
     */
    public java.lang.String getItemId() {
      return itemId_;
    }
    /**
     * <pre>
     *监控项id
     * </pre>
     *
     * <code>string itemId = 11;</code>
     */
    public com.google.protobuf.ByteString
        getItemIdBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(itemId_);
    }
    /**
     * <pre>
     *监控项id
     * </pre>
     *
     * <code>string itemId = 11;</code>
     */
    private void setItemId(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      itemId_ = value;
    }
    /**
     * <pre>
     *监控项id
     * </pre>
     *
     * <code>string itemId = 11;</code>
     */
    private void clearItemId() {
      
      itemId_ = getDefaultInstance().getItemId();
    }
    /**
     * <pre>
     *监控项id
     * </pre>
     *
     * <code>string itemId = 11;</code>
     */
    private void setItemIdBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      itemId_ = value.toStringUtf8();
    }

    public static final int TIME_FIELD_NUMBER = 12;
    private java.lang.String time_;
    /**
     * <pre>
     *时间(yyyy-MM-dd hh:mm:ss)
     * </pre>
     *
     * <code>string time = 12;</code>
     */
    public java.lang.String getTime() {
      return time_;
    }
    /**
     * <pre>
     *时间(yyyy-MM-dd hh:mm:ss)
     * </pre>
     *
     * <code>string time = 12;</code>
     */
    public com.google.protobuf.ByteString
        getTimeBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(time_);
    }
    /**
     * <pre>
     *时间(yyyy-MM-dd hh:mm:ss)
     * </pre>
     *
     * <code>string time = 12;</code>
     */
    private void setTime(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      time_ = value;
    }
    /**
     * <pre>
     *时间(yyyy-MM-dd hh:mm:ss)
     * </pre>
     *
     * <code>string time = 12;</code>
     */
    private void clearTime() {
      
      time_ = getDefaultInstance().getTime();
    }
    /**
     * <pre>
     *时间(yyyy-MM-dd hh:mm:ss)
     * </pre>
     *
     * <code>string time = 12;</code>
     */
    private void setTimeBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      time_ = value.toStringUtf8();
    }

    public static final int ITEMVALUE_FIELD_NUMBER = 13;
    private java.lang.String itemValue_;
    /**
     * <pre>
     *采集项值-----
     * </pre>
     *
     * <code>string itemValue = 13;</code>
     */
    public java.lang.String getItemValue() {
      return itemValue_;
    }
    /**
     * <pre>
     *采集项值-----
     * </pre>
     *
     * <code>string itemValue = 13;</code>
     */
    public com.google.protobuf.ByteString
        getItemValueBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(itemValue_);
    }
    /**
     * <pre>
     *采集项值-----
     * </pre>
     *
     * <code>string itemValue = 13;</code>
     */
    private void setItemValue(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      itemValue_ = value;
    }
    /**
     * <pre>
     *采集项值-----
     * </pre>
     *
     * <code>string itemValue = 13;</code>
     */
    private void clearItemValue() {
      
      itemValue_ = getDefaultInstance().getItemValue();
    }
    /**
     * <pre>
     *采集项值-----
     * </pre>
     *
     * <code>string itemValue = 13;</code>
     */
    private void setItemValueBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      itemValue_ = value.toStringUtf8();
    }

    public static final int VALUELIST_FIELD_NUMBER = 14;
    private com.google.protobuf.Internal.ProtobufList<com.networkcollect.NetworkCollect.KeyValue> valueList_;
    /**
     * <code>repeated .KeyValue valueList = 14;</code>
     */
    public java.util.List<com.networkcollect.NetworkCollect.KeyValue> getValueListList() {
      return valueList_;
    }
    /**
     * <code>repeated .KeyValue valueList = 14;</code>
     */
    public java.util.List<? extends com.networkcollect.NetworkCollect.KeyValueOrBuilder> 
        getValueListOrBuilderList() {
      return valueList_;
    }
    /**
     * <code>repeated .KeyValue valueList = 14;</code>
     */
    public int getValueListCount() {
      return valueList_.size();
    }
    /**
     * <code>repeated .KeyValue valueList = 14;</code>
     */
    public com.networkcollect.NetworkCollect.KeyValue getValueList(int index) {
      return valueList_.get(index);
    }
    /**
     * <code>repeated .KeyValue valueList = 14;</code>
     */
    public com.networkcollect.NetworkCollect.KeyValueOrBuilder getValueListOrBuilder(
        int index) {
      return valueList_.get(index);
    }
    private void ensureValueListIsMutable() {
      if (!valueList_.isModifiable()) {
        valueList_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(valueList_);
       }
    }

    /**
     * <code>repeated .KeyValue valueList = 14;</code>
     */
    private void setValueList(
        int index, com.networkcollect.NetworkCollect.KeyValue value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureValueListIsMutable();
      valueList_.set(index, value);
    }
    /**
     * <code>repeated .KeyValue valueList = 14;</code>
     */
    private void setValueList(
        int index, com.networkcollect.NetworkCollect.KeyValue.Builder builderForValue) {
      ensureValueListIsMutable();
      valueList_.set(index, builderForValue.build());
    }
    /**
     * <code>repeated .KeyValue valueList = 14;</code>
     */
    private void addValueList(com.networkcollect.NetworkCollect.KeyValue value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureValueListIsMutable();
      valueList_.add(value);
    }
    /**
     * <code>repeated .KeyValue valueList = 14;</code>
     */
    private void addValueList(
        int index, com.networkcollect.NetworkCollect.KeyValue value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureValueListIsMutable();
      valueList_.add(index, value);
    }
    /**
     * <code>repeated .KeyValue valueList = 14;</code>
     */
    private void addValueList(
        com.networkcollect.NetworkCollect.KeyValue.Builder builderForValue) {
      ensureValueListIsMutable();
      valueList_.add(builderForValue.build());
    }
    /**
     * <code>repeated .KeyValue valueList = 14;</code>
     */
    private void addValueList(
        int index, com.networkcollect.NetworkCollect.KeyValue.Builder builderForValue) {
      ensureValueListIsMutable();
      valueList_.add(index, builderForValue.build());
    }
    /**
     * <code>repeated .KeyValue valueList = 14;</code>
     */
    private void addAllValueList(
        java.lang.Iterable<? extends com.networkcollect.NetworkCollect.KeyValue> values) {
      ensureValueListIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, valueList_);
    }
    /**
     * <code>repeated .KeyValue valueList = 14;</code>
     */
    private void clearValueList() {
      valueList_ = emptyProtobufList();
    }
    /**
     * <code>repeated .KeyValue valueList = 14;</code>
     */
    private void removeValueList(int index) {
      ensureValueListIsMutable();
      valueList_.remove(index);
    }

    public static final int CPUUSED_FIELD_NUMBER = 15;
    private float cpuUsed_;
    /**
     * <pre>
     *cpu使用率
     * </pre>
     *
     * <code>float cpuUsed = 15;</code>
     */
    public float getCpuUsed() {
      return cpuUsed_;
    }
    /**
     * <pre>
     *cpu使用率
     * </pre>
     *
     * <code>float cpuUsed = 15;</code>
     */
    private void setCpuUsed(float value) {
      
      cpuUsed_ = value;
    }
    /**
     * <pre>
     *cpu使用率
     * </pre>
     *
     * <code>float cpuUsed = 15;</code>
     */
    private void clearCpuUsed() {
      
      cpuUsed_ = 0F;
    }

    public static final int MEMUSED_FIELD_NUMBER = 16;
    private float memUsed_;
    /**
     * <pre>
     *内存使用率
     * </pre>
     *
     * <code>float memUsed = 16;</code>
     */
    public float getMemUsed() {
      return memUsed_;
    }
    /**
     * <pre>
     *内存使用率
     * </pre>
     *
     * <code>float memUsed = 16;</code>
     */
    private void setMemUsed(float value) {
      
      memUsed_ = value;
    }
    /**
     * <pre>
     *内存使用率
     * </pre>
     *
     * <code>float memUsed = 16;</code>
     */
    private void clearMemUsed() {
      
      memUsed_ = 0F;
    }

    public static final int STORAGEINFOLIST_FIELD_NUMBER = 17;
    private com.google.protobuf.Internal.ProtobufList<com.networkcollect.NetworkCollect.StorageInfo> storageInfoList_;
    /**
     * <pre>
     *磁盘使用率
     * </pre>
     *
     * <code>repeated .StorageInfo storageInfoList = 17;</code>
     */
    public java.util.List<com.networkcollect.NetworkCollect.StorageInfo> getStorageInfoListList() {
      return storageInfoList_;
    }
    /**
     * <pre>
     *磁盘使用率
     * </pre>
     *
     * <code>repeated .StorageInfo storageInfoList = 17;</code>
     */
    public java.util.List<? extends com.networkcollect.NetworkCollect.StorageInfoOrBuilder> 
        getStorageInfoListOrBuilderList() {
      return storageInfoList_;
    }
    /**
     * <pre>
     *磁盘使用率
     * </pre>
     *
     * <code>repeated .StorageInfo storageInfoList = 17;</code>
     */
    public int getStorageInfoListCount() {
      return storageInfoList_.size();
    }
    /**
     * <pre>
     *磁盘使用率
     * </pre>
     *
     * <code>repeated .StorageInfo storageInfoList = 17;</code>
     */
    public com.networkcollect.NetworkCollect.StorageInfo getStorageInfoList(int index) {
      return storageInfoList_.get(index);
    }
    /**
     * <pre>
     *磁盘使用率
     * </pre>
     *
     * <code>repeated .StorageInfo storageInfoList = 17;</code>
     */
    public com.networkcollect.NetworkCollect.StorageInfoOrBuilder getStorageInfoListOrBuilder(
        int index) {
      return storageInfoList_.get(index);
    }
    private void ensureStorageInfoListIsMutable() {
      if (!storageInfoList_.isModifiable()) {
        storageInfoList_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(storageInfoList_);
       }
    }

    /**
     * <pre>
     *磁盘使用率
     * </pre>
     *
     * <code>repeated .StorageInfo storageInfoList = 17;</code>
     */
    private void setStorageInfoList(
        int index, com.networkcollect.NetworkCollect.StorageInfo value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureStorageInfoListIsMutable();
      storageInfoList_.set(index, value);
    }
    /**
     * <pre>
     *磁盘使用率
     * </pre>
     *
     * <code>repeated .StorageInfo storageInfoList = 17;</code>
     */
    private void setStorageInfoList(
        int index, com.networkcollect.NetworkCollect.StorageInfo.Builder builderForValue) {
      ensureStorageInfoListIsMutable();
      storageInfoList_.set(index, builderForValue.build());
    }
    /**
     * <pre>
     *磁盘使用率
     * </pre>
     *
     * <code>repeated .StorageInfo storageInfoList = 17;</code>
     */
    private void addStorageInfoList(com.networkcollect.NetworkCollect.StorageInfo value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureStorageInfoListIsMutable();
      storageInfoList_.add(value);
    }
    /**
     * <pre>
     *磁盘使用率
     * </pre>
     *
     * <code>repeated .StorageInfo storageInfoList = 17;</code>
     */
    private void addStorageInfoList(
        int index, com.networkcollect.NetworkCollect.StorageInfo value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureStorageInfoListIsMutable();
      storageInfoList_.add(index, value);
    }
    /**
     * <pre>
     *磁盘使用率
     * </pre>
     *
     * <code>repeated .StorageInfo storageInfoList = 17;</code>
     */
    private void addStorageInfoList(
        com.networkcollect.NetworkCollect.StorageInfo.Builder builderForValue) {
      ensureStorageInfoListIsMutable();
      storageInfoList_.add(builderForValue.build());
    }
    /**
     * <pre>
     *磁盘使用率
     * </pre>
     *
     * <code>repeated .StorageInfo storageInfoList = 17;</code>
     */
    private void addStorageInfoList(
        int index, com.networkcollect.NetworkCollect.StorageInfo.Builder builderForValue) {
      ensureStorageInfoListIsMutable();
      storageInfoList_.add(index, builderForValue.build());
    }
    /**
     * <pre>
     *磁盘使用率
     * </pre>
     *
     * <code>repeated .StorageInfo storageInfoList = 17;</code>
     */
    private void addAllStorageInfoList(
        java.lang.Iterable<? extends com.networkcollect.NetworkCollect.StorageInfo> values) {
      ensureStorageInfoListIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, storageInfoList_);
    }
    /**
     * <pre>
     *磁盘使用率
     * </pre>
     *
     * <code>repeated .StorageInfo storageInfoList = 17;</code>
     */
    private void clearStorageInfoList() {
      storageInfoList_ = emptyProtobufList();
    }
    /**
     * <pre>
     *磁盘使用率
     * </pre>
     *
     * <code>repeated .StorageInfo storageInfoList = 17;</code>
     */
    private void removeStorageInfoList(int index) {
      ensureStorageInfoListIsMutable();
      storageInfoList_.remove(index);
    }

    public static final int NETPORTINFOLIST_FIELD_NUMBER = 18;
    private com.google.protobuf.Internal.ProtobufList<com.networkcollect.NetworkCollect.NetPortInfo> netPortInfoList_;
    /**
     * <pre>
     *网口状态
     * </pre>
     *
     * <code>repeated .NetPortInfo netPortInfoList = 18;</code>
     */
    public java.util.List<com.networkcollect.NetworkCollect.NetPortInfo> getNetPortInfoListList() {
      return netPortInfoList_;
    }
    /**
     * <pre>
     *网口状态
     * </pre>
     *
     * <code>repeated .NetPortInfo netPortInfoList = 18;</code>
     */
    public java.util.List<? extends com.networkcollect.NetworkCollect.NetPortInfoOrBuilder> 
        getNetPortInfoListOrBuilderList() {
      return netPortInfoList_;
    }
    /**
     * <pre>
     *网口状态
     * </pre>
     *
     * <code>repeated .NetPortInfo netPortInfoList = 18;</code>
     */
    public int getNetPortInfoListCount() {
      return netPortInfoList_.size();
    }
    /**
     * <pre>
     *网口状态
     * </pre>
     *
     * <code>repeated .NetPortInfo netPortInfoList = 18;</code>
     */
    public com.networkcollect.NetworkCollect.NetPortInfo getNetPortInfoList(int index) {
      return netPortInfoList_.get(index);
    }
    /**
     * <pre>
     *网口状态
     * </pre>
     *
     * <code>repeated .NetPortInfo netPortInfoList = 18;</code>
     */
    public com.networkcollect.NetworkCollect.NetPortInfoOrBuilder getNetPortInfoListOrBuilder(
        int index) {
      return netPortInfoList_.get(index);
    }
    private void ensureNetPortInfoListIsMutable() {
      if (!netPortInfoList_.isModifiable()) {
        netPortInfoList_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(netPortInfoList_);
       }
    }

    /**
     * <pre>
     *网口状态
     * </pre>
     *
     * <code>repeated .NetPortInfo netPortInfoList = 18;</code>
     */
    private void setNetPortInfoList(
        int index, com.networkcollect.NetworkCollect.NetPortInfo value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureNetPortInfoListIsMutable();
      netPortInfoList_.set(index, value);
    }
    /**
     * <pre>
     *网口状态
     * </pre>
     *
     * <code>repeated .NetPortInfo netPortInfoList = 18;</code>
     */
    private void setNetPortInfoList(
        int index, com.networkcollect.NetworkCollect.NetPortInfo.Builder builderForValue) {
      ensureNetPortInfoListIsMutable();
      netPortInfoList_.set(index, builderForValue.build());
    }
    /**
     * <pre>
     *网口状态
     * </pre>
     *
     * <code>repeated .NetPortInfo netPortInfoList = 18;</code>
     */
    private void addNetPortInfoList(com.networkcollect.NetworkCollect.NetPortInfo value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureNetPortInfoListIsMutable();
      netPortInfoList_.add(value);
    }
    /**
     * <pre>
     *网口状态
     * </pre>
     *
     * <code>repeated .NetPortInfo netPortInfoList = 18;</code>
     */
    private void addNetPortInfoList(
        int index, com.networkcollect.NetworkCollect.NetPortInfo value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureNetPortInfoListIsMutable();
      netPortInfoList_.add(index, value);
    }
    /**
     * <pre>
     *网口状态
     * </pre>
     *
     * <code>repeated .NetPortInfo netPortInfoList = 18;</code>
     */
    private void addNetPortInfoList(
        com.networkcollect.NetworkCollect.NetPortInfo.Builder builderForValue) {
      ensureNetPortInfoListIsMutable();
      netPortInfoList_.add(builderForValue.build());
    }
    /**
     * <pre>
     *网口状态
     * </pre>
     *
     * <code>repeated .NetPortInfo netPortInfoList = 18;</code>
     */
    private void addNetPortInfoList(
        int index, com.networkcollect.NetworkCollect.NetPortInfo.Builder builderForValue) {
      ensureNetPortInfoListIsMutable();
      netPortInfoList_.add(index, builderForValue.build());
    }
    /**
     * <pre>
     *网口状态
     * </pre>
     *
     * <code>repeated .NetPortInfo netPortInfoList = 18;</code>
     */
    private void addAllNetPortInfoList(
        java.lang.Iterable<? extends com.networkcollect.NetworkCollect.NetPortInfo> values) {
      ensureNetPortInfoListIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, netPortInfoList_);
    }
    /**
     * <pre>
     *网口状态
     * </pre>
     *
     * <code>repeated .NetPortInfo netPortInfoList = 18;</code>
     */
    private void clearNetPortInfoList() {
      netPortInfoList_ = emptyProtobufList();
    }
    /**
     * <pre>
     *网口状态
     * </pre>
     *
     * <code>repeated .NetPortInfo netPortInfoList = 18;</code>
     */
    private void removeNetPortInfoList(int index) {
      ensureNetPortInfoListIsMutable();
      netPortInfoList_.remove(index);
    }

    public static final int MACADDRINFOLIST_FIELD_NUMBER = 19;
    private com.google.protobuf.Internal.ProtobufList<com.networkcollect.NetworkCollect.MacAddrInfo> macAddrInfoList_;
    /**
     * <pre>
     *mac地址表
     * </pre>
     *
     * <code>repeated .MacAddrInfo macAddrInfoList = 19;</code>
     */
    public java.util.List<com.networkcollect.NetworkCollect.MacAddrInfo> getMacAddrInfoListList() {
      return macAddrInfoList_;
    }
    /**
     * <pre>
     *mac地址表
     * </pre>
     *
     * <code>repeated .MacAddrInfo macAddrInfoList = 19;</code>
     */
    public java.util.List<? extends com.networkcollect.NetworkCollect.MacAddrInfoOrBuilder> 
        getMacAddrInfoListOrBuilderList() {
      return macAddrInfoList_;
    }
    /**
     * <pre>
     *mac地址表
     * </pre>
     *
     * <code>repeated .MacAddrInfo macAddrInfoList = 19;</code>
     */
    public int getMacAddrInfoListCount() {
      return macAddrInfoList_.size();
    }
    /**
     * <pre>
     *mac地址表
     * </pre>
     *
     * <code>repeated .MacAddrInfo macAddrInfoList = 19;</code>
     */
    public com.networkcollect.NetworkCollect.MacAddrInfo getMacAddrInfoList(int index) {
      return macAddrInfoList_.get(index);
    }
    /**
     * <pre>
     *mac地址表
     * </pre>
     *
     * <code>repeated .MacAddrInfo macAddrInfoList = 19;</code>
     */
    public com.networkcollect.NetworkCollect.MacAddrInfoOrBuilder getMacAddrInfoListOrBuilder(
        int index) {
      return macAddrInfoList_.get(index);
    }
    private void ensureMacAddrInfoListIsMutable() {
      if (!macAddrInfoList_.isModifiable()) {
        macAddrInfoList_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(macAddrInfoList_);
       }
    }

    /**
     * <pre>
     *mac地址表
     * </pre>
     *
     * <code>repeated .MacAddrInfo macAddrInfoList = 19;</code>
     */
    private void setMacAddrInfoList(
        int index, com.networkcollect.NetworkCollect.MacAddrInfo value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureMacAddrInfoListIsMutable();
      macAddrInfoList_.set(index, value);
    }
    /**
     * <pre>
     *mac地址表
     * </pre>
     *
     * <code>repeated .MacAddrInfo macAddrInfoList = 19;</code>
     */
    private void setMacAddrInfoList(
        int index, com.networkcollect.NetworkCollect.MacAddrInfo.Builder builderForValue) {
      ensureMacAddrInfoListIsMutable();
      macAddrInfoList_.set(index, builderForValue.build());
    }
    /**
     * <pre>
     *mac地址表
     * </pre>
     *
     * <code>repeated .MacAddrInfo macAddrInfoList = 19;</code>
     */
    private void addMacAddrInfoList(com.networkcollect.NetworkCollect.MacAddrInfo value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureMacAddrInfoListIsMutable();
      macAddrInfoList_.add(value);
    }
    /**
     * <pre>
     *mac地址表
     * </pre>
     *
     * <code>repeated .MacAddrInfo macAddrInfoList = 19;</code>
     */
    private void addMacAddrInfoList(
        int index, com.networkcollect.NetworkCollect.MacAddrInfo value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureMacAddrInfoListIsMutable();
      macAddrInfoList_.add(index, value);
    }
    /**
     * <pre>
     *mac地址表
     * </pre>
     *
     * <code>repeated .MacAddrInfo macAddrInfoList = 19;</code>
     */
    private void addMacAddrInfoList(
        com.networkcollect.NetworkCollect.MacAddrInfo.Builder builderForValue) {
      ensureMacAddrInfoListIsMutable();
      macAddrInfoList_.add(builderForValue.build());
    }
    /**
     * <pre>
     *mac地址表
     * </pre>
     *
     * <code>repeated .MacAddrInfo macAddrInfoList = 19;</code>
     */
    private void addMacAddrInfoList(
        int index, com.networkcollect.NetworkCollect.MacAddrInfo.Builder builderForValue) {
      ensureMacAddrInfoListIsMutable();
      macAddrInfoList_.add(index, builderForValue.build());
    }
    /**
     * <pre>
     *mac地址表
     * </pre>
     *
     * <code>repeated .MacAddrInfo macAddrInfoList = 19;</code>
     */
    private void addAllMacAddrInfoList(
        java.lang.Iterable<? extends com.networkcollect.NetworkCollect.MacAddrInfo> values) {
      ensureMacAddrInfoListIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, macAddrInfoList_);
    }
    /**
     * <pre>
     *mac地址表
     * </pre>
     *
     * <code>repeated .MacAddrInfo macAddrInfoList = 19;</code>
     */
    private void clearMacAddrInfoList() {
      macAddrInfoList_ = emptyProtobufList();
    }
    /**
     * <pre>
     *mac地址表
     * </pre>
     *
     * <code>repeated .MacAddrInfo macAddrInfoList = 19;</code>
     */
    private void removeMacAddrInfoList(int index) {
      ensureMacAddrInfoListIsMutable();
      macAddrInfoList_.remove(index);
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (type_ != com.networkcollect.NetworkCollect.ProtocolType.PT_INVALID.getNumber()) {
        output.writeEnum(1, type_);
      }
      if (!assetId_.isEmpty()) {
        output.writeString(2, getAssetId());
      }
      if (dataType_ != com.networkcollect.NetworkCollect.CdataType.CDT_INVALID.getNumber()) {
        output.writeEnum(3, dataType_);
      }
      if (logType_ != 0) {
        output.writeInt32(4, logType_);
      }
      if (logSubType_ != 0) {
        output.writeInt32(5, logSubType_);
      }
      if (eventType_ != 0) {
        output.writeInt32(6, eventType_);
      }
      if (eventSubType_ != 0) {
        output.writeInt32(7, eventSubType_);
      }
      if (level_ != 0) {
        output.writeInt32(8, level_);
      }
      if (!deviceType_.isEmpty()) {
        output.writeString(9, getDeviceType());
      }
      if (!deviceSubType_.isEmpty()) {
        output.writeString(10, getDeviceSubType());
      }
      if (!itemId_.isEmpty()) {
        output.writeString(11, getItemId());
      }
      if (!time_.isEmpty()) {
        output.writeString(12, getTime());
      }
      if (!itemValue_.isEmpty()) {
        output.writeString(13, getItemValue());
      }
      for (int i = 0; i < valueList_.size(); i++) {
        output.writeMessage(14, valueList_.get(i));
      }
      if (cpuUsed_ != 0F) {
        output.writeFloat(15, cpuUsed_);
      }
      if (memUsed_ != 0F) {
        output.writeFloat(16, memUsed_);
      }
      for (int i = 0; i < storageInfoList_.size(); i++) {
        output.writeMessage(17, storageInfoList_.get(i));
      }
      for (int i = 0; i < netPortInfoList_.size(); i++) {
        output.writeMessage(18, netPortInfoList_.get(i));
      }
      for (int i = 0; i < macAddrInfoList_.size(); i++) {
        output.writeMessage(19, macAddrInfoList_.get(i));
      }
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (type_ != com.networkcollect.NetworkCollect.ProtocolType.PT_INVALID.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, type_);
      }
      if (!assetId_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(2, getAssetId());
      }
      if (dataType_ != com.networkcollect.NetworkCollect.CdataType.CDT_INVALID.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(3, dataType_);
      }
      if (logType_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, logType_);
      }
      if (logSubType_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, logSubType_);
      }
      if (eventType_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, eventType_);
      }
      if (eventSubType_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, eventSubType_);
      }
      if (level_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(8, level_);
      }
      if (!deviceType_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(9, getDeviceType());
      }
      if (!deviceSubType_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(10, getDeviceSubType());
      }
      if (!itemId_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(11, getItemId());
      }
      if (!time_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(12, getTime());
      }
      if (!itemValue_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(13, getItemValue());
      }
      for (int i = 0; i < valueList_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(14, valueList_.get(i));
      }
      if (cpuUsed_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(15, cpuUsed_);
      }
      if (memUsed_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(16, memUsed_);
      }
      for (int i = 0; i < storageInfoList_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(17, storageInfoList_.get(i));
      }
      for (int i = 0; i < netPortInfoList_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(18, netPortInfoList_.get(i));
      }
      for (int i = 0; i < macAddrInfoList_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(19, macAddrInfoList_.get(i));
      }
      memoizedSerializedSize = size;
      return size;
    }

    public static com.networkcollect.NetworkCollect.CollectData parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.networkcollect.NetworkCollect.CollectData parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.networkcollect.NetworkCollect.CollectData parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.networkcollect.NetworkCollect.CollectData parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.networkcollect.NetworkCollect.CollectData parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.networkcollect.NetworkCollect.CollectData parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.networkcollect.NetworkCollect.CollectData parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.networkcollect.NetworkCollect.CollectData parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.networkcollect.NetworkCollect.CollectData parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.networkcollect.NetworkCollect.CollectData parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.networkcollect.NetworkCollect.CollectData parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.networkcollect.NetworkCollect.CollectData parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.networkcollect.NetworkCollect.CollectData prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code CollectData}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.networkcollect.NetworkCollect.CollectData, Builder> implements
        // @@protoc_insertion_point(builder_implements:CollectData)
        com.networkcollect.NetworkCollect.CollectDataOrBuilder {
      // Construct using com.networkcollect.NetworkCollect.CollectData.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       *协议类型-----
       * </pre>
       *
       * <code>.ProtocolType type = 1;</code>
       */
      public int getTypeValue() {
        return instance.getTypeValue();
      }
      /**
       * <pre>
       *协议类型-----
       * </pre>
       *
       * <code>.ProtocolType type = 1;</code>
       */
      public Builder setTypeValue(int value) {
        copyOnWrite();
        instance.setTypeValue(value);
        return this;
      }
      /**
       * <pre>
       *协议类型-----
       * </pre>
       *
       * <code>.ProtocolType type = 1;</code>
       */
      public com.networkcollect.NetworkCollect.ProtocolType getType() {
        return instance.getType();
      }
      /**
       * <pre>
       *协议类型-----
       * </pre>
       *
       * <code>.ProtocolType type = 1;</code>
       */
      public Builder setType(com.networkcollect.NetworkCollect.ProtocolType value) {
        copyOnWrite();
        instance.setType(value);
        return this;
      }
      /**
       * <pre>
       *协议类型-----
       * </pre>
       *
       * <code>.ProtocolType type = 1;</code>
       */
      public Builder clearType() {
        copyOnWrite();
        instance.clearType();
        return this;
      }

      /**
       * <pre>
       *资产id-----
       * </pre>
       *
       * <code>string assetId = 2;</code>
       */
      public java.lang.String getAssetId() {
        return instance.getAssetId();
      }
      /**
       * <pre>
       *资产id-----
       * </pre>
       *
       * <code>string assetId = 2;</code>
       */
      public com.google.protobuf.ByteString
          getAssetIdBytes() {
        return instance.getAssetIdBytes();
      }
      /**
       * <pre>
       *资产id-----
       * </pre>
       *
       * <code>string assetId = 2;</code>
       */
      public Builder setAssetId(
          java.lang.String value) {
        copyOnWrite();
        instance.setAssetId(value);
        return this;
      }
      /**
       * <pre>
       *资产id-----
       * </pre>
       *
       * <code>string assetId = 2;</code>
       */
      public Builder clearAssetId() {
        copyOnWrite();
        instance.clearAssetId();
        return this;
      }
      /**
       * <pre>
       *资产id-----
       * </pre>
       *
       * <code>string assetId = 2;</code>
       */
      public Builder setAssetIdBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setAssetIdBytes(value);
        return this;
      }

      /**
       * <pre>
       *数据类型
       * </pre>
       *
       * <code>.CdataType dataType = 3;</code>
       */
      public int getDataTypeValue() {
        return instance.getDataTypeValue();
      }
      /**
       * <pre>
       *数据类型
       * </pre>
       *
       * <code>.CdataType dataType = 3;</code>
       */
      public Builder setDataTypeValue(int value) {
        copyOnWrite();
        instance.setDataTypeValue(value);
        return this;
      }
      /**
       * <pre>
       *数据类型
       * </pre>
       *
       * <code>.CdataType dataType = 3;</code>
       */
      public com.networkcollect.NetworkCollect.CdataType getDataType() {
        return instance.getDataType();
      }
      /**
       * <pre>
       *数据类型
       * </pre>
       *
       * <code>.CdataType dataType = 3;</code>
       */
      public Builder setDataType(com.networkcollect.NetworkCollect.CdataType value) {
        copyOnWrite();
        instance.setDataType(value);
        return this;
      }
      /**
       * <pre>
       *数据类型
       * </pre>
       *
       * <code>.CdataType dataType = 3;</code>
       */
      public Builder clearDataType() {
        copyOnWrite();
        instance.clearDataType();
        return this;
      }

      /**
       * <pre>
       *日志类型
       * </pre>
       *
       * <code>int32 logType = 4;</code>
       */
      public int getLogType() {
        return instance.getLogType();
      }
      /**
       * <pre>
       *日志类型
       * </pre>
       *
       * <code>int32 logType = 4;</code>
       */
      public Builder setLogType(int value) {
        copyOnWrite();
        instance.setLogType(value);
        return this;
      }
      /**
       * <pre>
       *日志类型
       * </pre>
       *
       * <code>int32 logType = 4;</code>
       */
      public Builder clearLogType() {
        copyOnWrite();
        instance.clearLogType();
        return this;
      }

      /**
       * <pre>
       *日志子类型
       * </pre>
       *
       * <code>int32 logSubType = 5;</code>
       */
      public int getLogSubType() {
        return instance.getLogSubType();
      }
      /**
       * <pre>
       *日志子类型
       * </pre>
       *
       * <code>int32 logSubType = 5;</code>
       */
      public Builder setLogSubType(int value) {
        copyOnWrite();
        instance.setLogSubType(value);
        return this;
      }
      /**
       * <pre>
       *日志子类型
       * </pre>
       *
       * <code>int32 logSubType = 5;</code>
       */
      public Builder clearLogSubType() {
        copyOnWrite();
        instance.clearLogSubType();
        return this;
      }

      /**
       * <pre>
       *事件类型
       * </pre>
       *
       * <code>int32 eventType = 6;</code>
       */
      public int getEventType() {
        return instance.getEventType();
      }
      /**
       * <pre>
       *事件类型
       * </pre>
       *
       * <code>int32 eventType = 6;</code>
       */
      public Builder setEventType(int value) {
        copyOnWrite();
        instance.setEventType(value);
        return this;
      }
      /**
       * <pre>
       *事件类型
       * </pre>
       *
       * <code>int32 eventType = 6;</code>
       */
      public Builder clearEventType() {
        copyOnWrite();
        instance.clearEventType();
        return this;
      }

      /**
       * <pre>
       *事件子类型
       * </pre>
       *
       * <code>int32 eventSubType = 7;</code>
       */
      public int getEventSubType() {
        return instance.getEventSubType();
      }
      /**
       * <pre>
       *事件子类型
       * </pre>
       *
       * <code>int32 eventSubType = 7;</code>
       */
      public Builder setEventSubType(int value) {
        copyOnWrite();
        instance.setEventSubType(value);
        return this;
      }
      /**
       * <pre>
       *事件子类型
       * </pre>
       *
       * <code>int32 eventSubType = 7;</code>
       */
      public Builder clearEventSubType() {
        copyOnWrite();
        instance.clearEventSubType();
        return this;
      }

      /**
       * <pre>
       *事件级别
       * </pre>
       *
       * <code>int32 level = 8;</code>
       */
      public int getLevel() {
        return instance.getLevel();
      }
      /**
       * <pre>
       *事件级别
       * </pre>
       *
       * <code>int32 level = 8;</code>
       */
      public Builder setLevel(int value) {
        copyOnWrite();
        instance.setLevel(value);
        return this;
      }
      /**
       * <pre>
       *事件级别
       * </pre>
       *
       * <code>int32 level = 8;</code>
       */
      public Builder clearLevel() {
        copyOnWrite();
        instance.clearLevel();
        return this;
      }

      /**
       * <pre>
       *设备类型
       * </pre>
       *
       * <code>string deviceType = 9;</code>
       */
      public java.lang.String getDeviceType() {
        return instance.getDeviceType();
      }
      /**
       * <pre>
       *设备类型
       * </pre>
       *
       * <code>string deviceType = 9;</code>
       */
      public com.google.protobuf.ByteString
          getDeviceTypeBytes() {
        return instance.getDeviceTypeBytes();
      }
      /**
       * <pre>
       *设备类型
       * </pre>
       *
       * <code>string deviceType = 9;</code>
       */
      public Builder setDeviceType(
          java.lang.String value) {
        copyOnWrite();
        instance.setDeviceType(value);
        return this;
      }
      /**
       * <pre>
       *设备类型
       * </pre>
       *
       * <code>string deviceType = 9;</code>
       */
      public Builder clearDeviceType() {
        copyOnWrite();
        instance.clearDeviceType();
        return this;
      }
      /**
       * <pre>
       *设备类型
       * </pre>
       *
       * <code>string deviceType = 9;</code>
       */
      public Builder setDeviceTypeBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setDeviceTypeBytes(value);
        return this;
      }

      /**
       * <pre>
       *设备子类型
       * </pre>
       *
       * <code>string deviceSubType = 10;</code>
       */
      public java.lang.String getDeviceSubType() {
        return instance.getDeviceSubType();
      }
      /**
       * <pre>
       *设备子类型
       * </pre>
       *
       * <code>string deviceSubType = 10;</code>
       */
      public com.google.protobuf.ByteString
          getDeviceSubTypeBytes() {
        return instance.getDeviceSubTypeBytes();
      }
      /**
       * <pre>
       *设备子类型
       * </pre>
       *
       * <code>string deviceSubType = 10;</code>
       */
      public Builder setDeviceSubType(
          java.lang.String value) {
        copyOnWrite();
        instance.setDeviceSubType(value);
        return this;
      }
      /**
       * <pre>
       *设备子类型
       * </pre>
       *
       * <code>string deviceSubType = 10;</code>
       */
      public Builder clearDeviceSubType() {
        copyOnWrite();
        instance.clearDeviceSubType();
        return this;
      }
      /**
       * <pre>
       *设备子类型
       * </pre>
       *
       * <code>string deviceSubType = 10;</code>
       */
      public Builder setDeviceSubTypeBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setDeviceSubTypeBytes(value);
        return this;
      }

      /**
       * <pre>
       *监控项id
       * </pre>
       *
       * <code>string itemId = 11;</code>
       */
      public java.lang.String getItemId() {
        return instance.getItemId();
      }
      /**
       * <pre>
       *监控项id
       * </pre>
       *
       * <code>string itemId = 11;</code>
       */
      public com.google.protobuf.ByteString
          getItemIdBytes() {
        return instance.getItemIdBytes();
      }
      /**
       * <pre>
       *监控项id
       * </pre>
       *
       * <code>string itemId = 11;</code>
       */
      public Builder setItemId(
          java.lang.String value) {
        copyOnWrite();
        instance.setItemId(value);
        return this;
      }
      /**
       * <pre>
       *监控项id
       * </pre>
       *
       * <code>string itemId = 11;</code>
       */
      public Builder clearItemId() {
        copyOnWrite();
        instance.clearItemId();
        return this;
      }
      /**
       * <pre>
       *监控项id
       * </pre>
       *
       * <code>string itemId = 11;</code>
       */
      public Builder setItemIdBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setItemIdBytes(value);
        return this;
      }

      /**
       * <pre>
       *时间(yyyy-MM-dd hh:mm:ss)
       * </pre>
       *
       * <code>string time = 12;</code>
       */
      public java.lang.String getTime() {
        return instance.getTime();
      }
      /**
       * <pre>
       *时间(yyyy-MM-dd hh:mm:ss)
       * </pre>
       *
       * <code>string time = 12;</code>
       */
      public com.google.protobuf.ByteString
          getTimeBytes() {
        return instance.getTimeBytes();
      }
      /**
       * <pre>
       *时间(yyyy-MM-dd hh:mm:ss)
       * </pre>
       *
       * <code>string time = 12;</code>
       */
      public Builder setTime(
          java.lang.String value) {
        copyOnWrite();
        instance.setTime(value);
        return this;
      }
      /**
       * <pre>
       *时间(yyyy-MM-dd hh:mm:ss)
       * </pre>
       *
       * <code>string time = 12;</code>
       */
      public Builder clearTime() {
        copyOnWrite();
        instance.clearTime();
        return this;
      }
      /**
       * <pre>
       *时间(yyyy-MM-dd hh:mm:ss)
       * </pre>
       *
       * <code>string time = 12;</code>
       */
      public Builder setTimeBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setTimeBytes(value);
        return this;
      }

      /**
       * <pre>
       *采集项值-----
       * </pre>
       *
       * <code>string itemValue = 13;</code>
       */
      public java.lang.String getItemValue() {
        return instance.getItemValue();
      }
      /**
       * <pre>
       *采集项值-----
       * </pre>
       *
       * <code>string itemValue = 13;</code>
       */
      public com.google.protobuf.ByteString
          getItemValueBytes() {
        return instance.getItemValueBytes();
      }
      /**
       * <pre>
       *采集项值-----
       * </pre>
       *
       * <code>string itemValue = 13;</code>
       */
      public Builder setItemValue(
          java.lang.String value) {
        copyOnWrite();
        instance.setItemValue(value);
        return this;
      }
      /**
       * <pre>
       *采集项值-----
       * </pre>
       *
       * <code>string itemValue = 13;</code>
       */
      public Builder clearItemValue() {
        copyOnWrite();
        instance.clearItemValue();
        return this;
      }
      /**
       * <pre>
       *采集项值-----
       * </pre>
       *
       * <code>string itemValue = 13;</code>
       */
      public Builder setItemValueBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setItemValueBytes(value);
        return this;
      }

      /**
       * <code>repeated .KeyValue valueList = 14;</code>
       */
      public java.util.List<com.networkcollect.NetworkCollect.KeyValue> getValueListList() {
        return java.util.Collections.unmodifiableList(
            instance.getValueListList());
      }
      /**
       * <code>repeated .KeyValue valueList = 14;</code>
       */
      public int getValueListCount() {
        return instance.getValueListCount();
      }/**
       * <code>repeated .KeyValue valueList = 14;</code>
       */
      public com.networkcollect.NetworkCollect.KeyValue getValueList(int index) {
        return instance.getValueList(index);
      }
      /**
       * <code>repeated .KeyValue valueList = 14;</code>
       */
      public Builder setValueList(
          int index, com.networkcollect.NetworkCollect.KeyValue value) {
        copyOnWrite();
        instance.setValueList(index, value);
        return this;
      }
      /**
       * <code>repeated .KeyValue valueList = 14;</code>
       */
      public Builder setValueList(
          int index, com.networkcollect.NetworkCollect.KeyValue.Builder builderForValue) {
        copyOnWrite();
        instance.setValueList(index, builderForValue);
        return this;
      }
      /**
       * <code>repeated .KeyValue valueList = 14;</code>
       */
      public Builder addValueList(com.networkcollect.NetworkCollect.KeyValue value) {
        copyOnWrite();
        instance.addValueList(value);
        return this;
      }
      /**
       * <code>repeated .KeyValue valueList = 14;</code>
       */
      public Builder addValueList(
          int index, com.networkcollect.NetworkCollect.KeyValue value) {
        copyOnWrite();
        instance.addValueList(index, value);
        return this;
      }
      /**
       * <code>repeated .KeyValue valueList = 14;</code>
       */
      public Builder addValueList(
          com.networkcollect.NetworkCollect.KeyValue.Builder builderForValue) {
        copyOnWrite();
        instance.addValueList(builderForValue);
        return this;
      }
      /**
       * <code>repeated .KeyValue valueList = 14;</code>
       */
      public Builder addValueList(
          int index, com.networkcollect.NetworkCollect.KeyValue.Builder builderForValue) {
        copyOnWrite();
        instance.addValueList(index, builderForValue);
        return this;
      }
      /**
       * <code>repeated .KeyValue valueList = 14;</code>
       */
      public Builder addAllValueList(
          java.lang.Iterable<? extends com.networkcollect.NetworkCollect.KeyValue> values) {
        copyOnWrite();
        instance.addAllValueList(values);
        return this;
      }
      /**
       * <code>repeated .KeyValue valueList = 14;</code>
       */
      public Builder clearValueList() {
        copyOnWrite();
        instance.clearValueList();
        return this;
      }
      /**
       * <code>repeated .KeyValue valueList = 14;</code>
       */
      public Builder removeValueList(int index) {
        copyOnWrite();
        instance.removeValueList(index);
        return this;
      }

      /**
       * <pre>
       *cpu使用率
       * </pre>
       *
       * <code>float cpuUsed = 15;</code>
       */
      public float getCpuUsed() {
        return instance.getCpuUsed();
      }
      /**
       * <pre>
       *cpu使用率
       * </pre>
       *
       * <code>float cpuUsed = 15;</code>
       */
      public Builder setCpuUsed(float value) {
        copyOnWrite();
        instance.setCpuUsed(value);
        return this;
      }
      /**
       * <pre>
       *cpu使用率
       * </pre>
       *
       * <code>float cpuUsed = 15;</code>
       */
      public Builder clearCpuUsed() {
        copyOnWrite();
        instance.clearCpuUsed();
        return this;
      }

      /**
       * <pre>
       *内存使用率
       * </pre>
       *
       * <code>float memUsed = 16;</code>
       */
      public float getMemUsed() {
        return instance.getMemUsed();
      }
      /**
       * <pre>
       *内存使用率
       * </pre>
       *
       * <code>float memUsed = 16;</code>
       */
      public Builder setMemUsed(float value) {
        copyOnWrite();
        instance.setMemUsed(value);
        return this;
      }
      /**
       * <pre>
       *内存使用率
       * </pre>
       *
       * <code>float memUsed = 16;</code>
       */
      public Builder clearMemUsed() {
        copyOnWrite();
        instance.clearMemUsed();
        return this;
      }

      /**
       * <pre>
       *磁盘使用率
       * </pre>
       *
       * <code>repeated .StorageInfo storageInfoList = 17;</code>
       */
      public java.util.List<com.networkcollect.NetworkCollect.StorageInfo> getStorageInfoListList() {
        return java.util.Collections.unmodifiableList(
            instance.getStorageInfoListList());
      }
      /**
       * <pre>
       *磁盘使用率
       * </pre>
       *
       * <code>repeated .StorageInfo storageInfoList = 17;</code>
       */
      public int getStorageInfoListCount() {
        return instance.getStorageInfoListCount();
      }/**
       * <pre>
       *磁盘使用率
       * </pre>
       *
       * <code>repeated .StorageInfo storageInfoList = 17;</code>
       */
      public com.networkcollect.NetworkCollect.StorageInfo getStorageInfoList(int index) {
        return instance.getStorageInfoList(index);
      }
      /**
       * <pre>
       *磁盘使用率
       * </pre>
       *
       * <code>repeated .StorageInfo storageInfoList = 17;</code>
       */
      public Builder setStorageInfoList(
          int index, com.networkcollect.NetworkCollect.StorageInfo value) {
        copyOnWrite();
        instance.setStorageInfoList(index, value);
        return this;
      }
      /**
       * <pre>
       *磁盘使用率
       * </pre>
       *
       * <code>repeated .StorageInfo storageInfoList = 17;</code>
       */
      public Builder setStorageInfoList(
          int index, com.networkcollect.NetworkCollect.StorageInfo.Builder builderForValue) {
        copyOnWrite();
        instance.setStorageInfoList(index, builderForValue);
        return this;
      }
      /**
       * <pre>
       *磁盘使用率
       * </pre>
       *
       * <code>repeated .StorageInfo storageInfoList = 17;</code>
       */
      public Builder addStorageInfoList(com.networkcollect.NetworkCollect.StorageInfo value) {
        copyOnWrite();
        instance.addStorageInfoList(value);
        return this;
      }
      /**
       * <pre>
       *磁盘使用率
       * </pre>
       *
       * <code>repeated .StorageInfo storageInfoList = 17;</code>
       */
      public Builder addStorageInfoList(
          int index, com.networkcollect.NetworkCollect.StorageInfo value) {
        copyOnWrite();
        instance.addStorageInfoList(index, value);
        return this;
      }
      /**
       * <pre>
       *磁盘使用率
       * </pre>
       *
       * <code>repeated .StorageInfo storageInfoList = 17;</code>
       */
      public Builder addStorageInfoList(
          com.networkcollect.NetworkCollect.StorageInfo.Builder builderForValue) {
        copyOnWrite();
        instance.addStorageInfoList(builderForValue);
        return this;
      }
      /**
       * <pre>
       *磁盘使用率
       * </pre>
       *
       * <code>repeated .StorageInfo storageInfoList = 17;</code>
       */
      public Builder addStorageInfoList(
          int index, com.networkcollect.NetworkCollect.StorageInfo.Builder builderForValue) {
        copyOnWrite();
        instance.addStorageInfoList(index, builderForValue);
        return this;
      }
      /**
       * <pre>
       *磁盘使用率
       * </pre>
       *
       * <code>repeated .StorageInfo storageInfoList = 17;</code>
       */
      public Builder addAllStorageInfoList(
          java.lang.Iterable<? extends com.networkcollect.NetworkCollect.StorageInfo> values) {
        copyOnWrite();
        instance.addAllStorageInfoList(values);
        return this;
      }
      /**
       * <pre>
       *磁盘使用率
       * </pre>
       *
       * <code>repeated .StorageInfo storageInfoList = 17;</code>
       */
      public Builder clearStorageInfoList() {
        copyOnWrite();
        instance.clearStorageInfoList();
        return this;
      }
      /**
       * <pre>
       *磁盘使用率
       * </pre>
       *
       * <code>repeated .StorageInfo storageInfoList = 17;</code>
       */
      public Builder removeStorageInfoList(int index) {
        copyOnWrite();
        instance.removeStorageInfoList(index);
        return this;
      }

      /**
       * <pre>
       *网口状态
       * </pre>
       *
       * <code>repeated .NetPortInfo netPortInfoList = 18;</code>
       */
      public java.util.List<com.networkcollect.NetworkCollect.NetPortInfo> getNetPortInfoListList() {
        return java.util.Collections.unmodifiableList(
            instance.getNetPortInfoListList());
      }
      /**
       * <pre>
       *网口状态
       * </pre>
       *
       * <code>repeated .NetPortInfo netPortInfoList = 18;</code>
       */
      public int getNetPortInfoListCount() {
        return instance.getNetPortInfoListCount();
      }/**
       * <pre>
       *网口状态
       * </pre>
       *
       * <code>repeated .NetPortInfo netPortInfoList = 18;</code>
       */
      public com.networkcollect.NetworkCollect.NetPortInfo getNetPortInfoList(int index) {
        return instance.getNetPortInfoList(index);
      }
      /**
       * <pre>
       *网口状态
       * </pre>
       *
       * <code>repeated .NetPortInfo netPortInfoList = 18;</code>
       */
      public Builder setNetPortInfoList(
          int index, com.networkcollect.NetworkCollect.NetPortInfo value) {
        copyOnWrite();
        instance.setNetPortInfoList(index, value);
        return this;
      }
      /**
       * <pre>
       *网口状态
       * </pre>
       *
       * <code>repeated .NetPortInfo netPortInfoList = 18;</code>
       */
      public Builder setNetPortInfoList(
          int index, com.networkcollect.NetworkCollect.NetPortInfo.Builder builderForValue) {
        copyOnWrite();
        instance.setNetPortInfoList(index, builderForValue);
        return this;
      }
      /**
       * <pre>
       *网口状态
       * </pre>
       *
       * <code>repeated .NetPortInfo netPortInfoList = 18;</code>
       */
      public Builder addNetPortInfoList(com.networkcollect.NetworkCollect.NetPortInfo value) {
        copyOnWrite();
        instance.addNetPortInfoList(value);
        return this;
      }
      /**
       * <pre>
       *网口状态
       * </pre>
       *
       * <code>repeated .NetPortInfo netPortInfoList = 18;</code>
       */
      public Builder addNetPortInfoList(
          int index, com.networkcollect.NetworkCollect.NetPortInfo value) {
        copyOnWrite();
        instance.addNetPortInfoList(index, value);
        return this;
      }
      /**
       * <pre>
       *网口状态
       * </pre>
       *
       * <code>repeated .NetPortInfo netPortInfoList = 18;</code>
       */
      public Builder addNetPortInfoList(
          com.networkcollect.NetworkCollect.NetPortInfo.Builder builderForValue) {
        copyOnWrite();
        instance.addNetPortInfoList(builderForValue);
        return this;
      }
      /**
       * <pre>
       *网口状态
       * </pre>
       *
       * <code>repeated .NetPortInfo netPortInfoList = 18;</code>
       */
      public Builder addNetPortInfoList(
          int index, com.networkcollect.NetworkCollect.NetPortInfo.Builder builderForValue) {
        copyOnWrite();
        instance.addNetPortInfoList(index, builderForValue);
        return this;
      }
      /**
       * <pre>
       *网口状态
       * </pre>
       *
       * <code>repeated .NetPortInfo netPortInfoList = 18;</code>
       */
      public Builder addAllNetPortInfoList(
          java.lang.Iterable<? extends com.networkcollect.NetworkCollect.NetPortInfo> values) {
        copyOnWrite();
        instance.addAllNetPortInfoList(values);
        return this;
      }
      /**
       * <pre>
       *网口状态
       * </pre>
       *
       * <code>repeated .NetPortInfo netPortInfoList = 18;</code>
       */
      public Builder clearNetPortInfoList() {
        copyOnWrite();
        instance.clearNetPortInfoList();
        return this;
      }
      /**
       * <pre>
       *网口状态
       * </pre>
       *
       * <code>repeated .NetPortInfo netPortInfoList = 18;</code>
       */
      public Builder removeNetPortInfoList(int index) {
        copyOnWrite();
        instance.removeNetPortInfoList(index);
        return this;
      }

      /**
       * <pre>
       *mac地址表
       * </pre>
       *
       * <code>repeated .MacAddrInfo macAddrInfoList = 19;</code>
       */
      public java.util.List<com.networkcollect.NetworkCollect.MacAddrInfo> getMacAddrInfoListList() {
        return java.util.Collections.unmodifiableList(
            instance.getMacAddrInfoListList());
      }
      /**
       * <pre>
       *mac地址表
       * </pre>
       *
       * <code>repeated .MacAddrInfo macAddrInfoList = 19;</code>
       */
      public int getMacAddrInfoListCount() {
        return instance.getMacAddrInfoListCount();
      }/**
       * <pre>
       *mac地址表
       * </pre>
       *
       * <code>repeated .MacAddrInfo macAddrInfoList = 19;</code>
       */
      public com.networkcollect.NetworkCollect.MacAddrInfo getMacAddrInfoList(int index) {
        return instance.getMacAddrInfoList(index);
      }
      /**
       * <pre>
       *mac地址表
       * </pre>
       *
       * <code>repeated .MacAddrInfo macAddrInfoList = 19;</code>
       */
      public Builder setMacAddrInfoList(
          int index, com.networkcollect.NetworkCollect.MacAddrInfo value) {
        copyOnWrite();
        instance.setMacAddrInfoList(index, value);
        return this;
      }
      /**
       * <pre>
       *mac地址表
       * </pre>
       *
       * <code>repeated .MacAddrInfo macAddrInfoList = 19;</code>
       */
      public Builder setMacAddrInfoList(
          int index, com.networkcollect.NetworkCollect.MacAddrInfo.Builder builderForValue) {
        copyOnWrite();
        instance.setMacAddrInfoList(index, builderForValue);
        return this;
      }
      /**
       * <pre>
       *mac地址表
       * </pre>
       *
       * <code>repeated .MacAddrInfo macAddrInfoList = 19;</code>
       */
      public Builder addMacAddrInfoList(com.networkcollect.NetworkCollect.MacAddrInfo value) {
        copyOnWrite();
        instance.addMacAddrInfoList(value);
        return this;
      }
      /**
       * <pre>
       *mac地址表
       * </pre>
       *
       * <code>repeated .MacAddrInfo macAddrInfoList = 19;</code>
       */
      public Builder addMacAddrInfoList(
          int index, com.networkcollect.NetworkCollect.MacAddrInfo value) {
        copyOnWrite();
        instance.addMacAddrInfoList(index, value);
        return this;
      }
      /**
       * <pre>
       *mac地址表
       * </pre>
       *
       * <code>repeated .MacAddrInfo macAddrInfoList = 19;</code>
       */
      public Builder addMacAddrInfoList(
          com.networkcollect.NetworkCollect.MacAddrInfo.Builder builderForValue) {
        copyOnWrite();
        instance.addMacAddrInfoList(builderForValue);
        return this;
      }
      /**
       * <pre>
       *mac地址表
       * </pre>
       *
       * <code>repeated .MacAddrInfo macAddrInfoList = 19;</code>
       */
      public Builder addMacAddrInfoList(
          int index, com.networkcollect.NetworkCollect.MacAddrInfo.Builder builderForValue) {
        copyOnWrite();
        instance.addMacAddrInfoList(index, builderForValue);
        return this;
      }
      /**
       * <pre>
       *mac地址表
       * </pre>
       *
       * <code>repeated .MacAddrInfo macAddrInfoList = 19;</code>
       */
      public Builder addAllMacAddrInfoList(
          java.lang.Iterable<? extends com.networkcollect.NetworkCollect.MacAddrInfo> values) {
        copyOnWrite();
        instance.addAllMacAddrInfoList(values);
        return this;
      }
      /**
       * <pre>
       *mac地址表
       * </pre>
       *
       * <code>repeated .MacAddrInfo macAddrInfoList = 19;</code>
       */
      public Builder clearMacAddrInfoList() {
        copyOnWrite();
        instance.clearMacAddrInfoList();
        return this;
      }
      /**
       * <pre>
       *mac地址表
       * </pre>
       *
       * <code>repeated .MacAddrInfo macAddrInfoList = 19;</code>
       */
      public Builder removeMacAddrInfoList(int index) {
        copyOnWrite();
        instance.removeMacAddrInfoList(index);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CollectData)
    }
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.networkcollect.NetworkCollect.CollectData();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          valueList_.makeImmutable();
          storageInfoList_.makeImmutable();
          netPortInfoList_.makeImmutable();
          macAddrInfoList_.makeImmutable();
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.networkcollect.NetworkCollect.CollectData other = (com.networkcollect.NetworkCollect.CollectData) arg1;
          type_ = visitor.visitInt(type_ != 0, type_,    other.type_ != 0, other.type_);
          assetId_ = visitor.visitString(!assetId_.isEmpty(), assetId_,
              !other.assetId_.isEmpty(), other.assetId_);
          dataType_ = visitor.visitInt(dataType_ != 0, dataType_,    other.dataType_ != 0, other.dataType_);
          logType_ = visitor.visitInt(logType_ != 0, logType_,
              other.logType_ != 0, other.logType_);
          logSubType_ = visitor.visitInt(logSubType_ != 0, logSubType_,
              other.logSubType_ != 0, other.logSubType_);
          eventType_ = visitor.visitInt(eventType_ != 0, eventType_,
              other.eventType_ != 0, other.eventType_);
          eventSubType_ = visitor.visitInt(eventSubType_ != 0, eventSubType_,
              other.eventSubType_ != 0, other.eventSubType_);
          level_ = visitor.visitInt(level_ != 0, level_,
              other.level_ != 0, other.level_);
          deviceType_ = visitor.visitString(!deviceType_.isEmpty(), deviceType_,
              !other.deviceType_.isEmpty(), other.deviceType_);
          deviceSubType_ = visitor.visitString(!deviceSubType_.isEmpty(), deviceSubType_,
              !other.deviceSubType_.isEmpty(), other.deviceSubType_);
          itemId_ = visitor.visitString(!itemId_.isEmpty(), itemId_,
              !other.itemId_.isEmpty(), other.itemId_);
          time_ = visitor.visitString(!time_.isEmpty(), time_,
              !other.time_.isEmpty(), other.time_);
          itemValue_ = visitor.visitString(!itemValue_.isEmpty(), itemValue_,
              !other.itemValue_.isEmpty(), other.itemValue_);
          valueList_= visitor.visitList(valueList_, other.valueList_);
          cpuUsed_ = visitor.visitFloat(cpuUsed_ != 0F, cpuUsed_,
              other.cpuUsed_ != 0F, other.cpuUsed_);
          memUsed_ = visitor.visitFloat(memUsed_ != 0F, memUsed_,
              other.memUsed_ != 0F, other.memUsed_);
          storageInfoList_= visitor.visitList(storageInfoList_, other.storageInfoList_);
          netPortInfoList_= visitor.visitList(netPortInfoList_, other.netPortInfoList_);
          macAddrInfoList_= visitor.visitList(macAddrInfoList_, other.macAddrInfoList_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!input.skipField(tag)) {
                    done = true;
                  }
                  break;
                }
                case 8: {
                  int rawValue = input.readEnum();

                  type_ = rawValue;
                  break;
                }
                case 18: {
                  String s = input.readStringRequireUtf8();

                  assetId_ = s;
                  break;
                }
                case 24: {
                  int rawValue = input.readEnum();

                  dataType_ = rawValue;
                  break;
                }
                case 32: {

                  logType_ = input.readInt32();
                  break;
                }
                case 40: {

                  logSubType_ = input.readInt32();
                  break;
                }
                case 48: {

                  eventType_ = input.readInt32();
                  break;
                }
                case 56: {

                  eventSubType_ = input.readInt32();
                  break;
                }
                case 64: {

                  level_ = input.readInt32();
                  break;
                }
                case 74: {
                  String s = input.readStringRequireUtf8();

                  deviceType_ = s;
                  break;
                }
                case 82: {
                  String s = input.readStringRequireUtf8();

                  deviceSubType_ = s;
                  break;
                }
                case 90: {
                  String s = input.readStringRequireUtf8();

                  itemId_ = s;
                  break;
                }
                case 98: {
                  String s = input.readStringRequireUtf8();

                  time_ = s;
                  break;
                }
                case 106: {
                  String s = input.readStringRequireUtf8();

                  itemValue_ = s;
                  break;
                }
                case 114: {
                  if (!valueList_.isModifiable()) {
                    valueList_ =
                        com.google.protobuf.GeneratedMessageLite.mutableCopy(valueList_);
                  }
                  valueList_.add(
                      input.readMessage(com.networkcollect.NetworkCollect.KeyValue.parser(), extensionRegistry));
                  break;
                }
                case 125: {

                  cpuUsed_ = input.readFloat();
                  break;
                }
                case 133: {

                  memUsed_ = input.readFloat();
                  break;
                }
                case 138: {
                  if (!storageInfoList_.isModifiable()) {
                    storageInfoList_ =
                        com.google.protobuf.GeneratedMessageLite.mutableCopy(storageInfoList_);
                  }
                  storageInfoList_.add(
                      input.readMessage(com.networkcollect.NetworkCollect.StorageInfo.parser(), extensionRegistry));
                  break;
                }
                case 146: {
                  if (!netPortInfoList_.isModifiable()) {
                    netPortInfoList_ =
                        com.google.protobuf.GeneratedMessageLite.mutableCopy(netPortInfoList_);
                  }
                  netPortInfoList_.add(
                      input.readMessage(com.networkcollect.NetworkCollect.NetPortInfo.parser(), extensionRegistry));
                  break;
                }
                case 154: {
                  if (!macAddrInfoList_.isModifiable()) {
                    macAddrInfoList_ =
                        com.google.protobuf.GeneratedMessageLite.mutableCopy(macAddrInfoList_);
                  }
                  macAddrInfoList_.add(
                      input.readMessage(com.networkcollect.NetworkCollect.MacAddrInfo.parser(), extensionRegistry));
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (com.networkcollect.NetworkCollect.CollectData.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:CollectData)
    private static final com.networkcollect.NetworkCollect.CollectData DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new CollectData();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static com.networkcollect.NetworkCollect.CollectData getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<CollectData> PARSER;

    public static com.google.protobuf.Parser<CollectData> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface Alarm_ThresholdOrBuilder extends
      // @@protoc_insertion_point(interface_extends:Alarm_Threshold)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     *cpu利用率上限阈值
     * </pre>
     *
     * <code>int32 cpuUsedLimit = 1;</code>
     */
    int getCpuUsedLimit();

    /**
     * <pre>
     *内存使用率上限
     * </pre>
     *
     * <code>int32 memUsedLimit = 2;</code>
     */
    int getMemUsedLimit();

    /**
     * <pre>
     *网口流量越限阈值
     * </pre>
     *
     * <code>int32 netPortFlow = 3;</code>
     */
    int getNetPortFlow();

    /**
     * <pre>
     *连续登陆失败阈值
     * </pre>
     *
     * <code>int32 loginFailed = 4;</code>
     */
    int getLoginFailed();

    /**
     * <pre>
     *归并事件归并周期
     * </pre>
     *
     * <code>int32 mergerPeriod = 5;</code>
     */
    int getMergerPeriod();

    /**
     * <pre>
     *磁盘空间使用率上限阈值
     * </pre>
     *
     * <code>int32 diskUsedLimit = 6;</code>
     */
    int getDiskUsedLimit();

    /**
     * <pre>
     *历史事件上报分界时间参数t
     * </pre>
     *
     * <code>int32 historyEventTime = 7;</code>
     */
    int getHistoryEventTime();
  }
  /**
   * <pre>
   *告警阈值配置
   * </pre>
   *
   * Protobuf type {@code Alarm_Threshold}
   */
  public  static final class Alarm_Threshold extends
      com.google.protobuf.GeneratedMessageLite<
          Alarm_Threshold, Alarm_Threshold.Builder> implements
      // @@protoc_insertion_point(message_implements:Alarm_Threshold)
      Alarm_ThresholdOrBuilder {
    private Alarm_Threshold() {
    }
    public static final int CPUUSEDLIMIT_FIELD_NUMBER = 1;
    private int cpuUsedLimit_;
    /**
     * <pre>
     *cpu利用率上限阈值
     * </pre>
     *
     * <code>int32 cpuUsedLimit = 1;</code>
     */
    public int getCpuUsedLimit() {
      return cpuUsedLimit_;
    }
    /**
     * <pre>
     *cpu利用率上限阈值
     * </pre>
     *
     * <code>int32 cpuUsedLimit = 1;</code>
     */
    private void setCpuUsedLimit(int value) {
      
      cpuUsedLimit_ = value;
    }
    /**
     * <pre>
     *cpu利用率上限阈值
     * </pre>
     *
     * <code>int32 cpuUsedLimit = 1;</code>
     */
    private void clearCpuUsedLimit() {
      
      cpuUsedLimit_ = 0;
    }

    public static final int MEMUSEDLIMIT_FIELD_NUMBER = 2;
    private int memUsedLimit_;
    /**
     * <pre>
     *内存使用率上限
     * </pre>
     *
     * <code>int32 memUsedLimit = 2;</code>
     */
    public int getMemUsedLimit() {
      return memUsedLimit_;
    }
    /**
     * <pre>
     *内存使用率上限
     * </pre>
     *
     * <code>int32 memUsedLimit = 2;</code>
     */
    private void setMemUsedLimit(int value) {
      
      memUsedLimit_ = value;
    }
    /**
     * <pre>
     *内存使用率上限
     * </pre>
     *
     * <code>int32 memUsedLimit = 2;</code>
     */
    private void clearMemUsedLimit() {
      
      memUsedLimit_ = 0;
    }

    public static final int NETPORTFLOW_FIELD_NUMBER = 3;
    private int netPortFlow_;
    /**
     * <pre>
     *网口流量越限阈值
     * </pre>
     *
     * <code>int32 netPortFlow = 3;</code>
     */
    public int getNetPortFlow() {
      return netPortFlow_;
    }
    /**
     * <pre>
     *网口流量越限阈值
     * </pre>
     *
     * <code>int32 netPortFlow = 3;</code>
     */
    private void setNetPortFlow(int value) {
      
      netPortFlow_ = value;
    }
    /**
     * <pre>
     *网口流量越限阈值
     * </pre>
     *
     * <code>int32 netPortFlow = 3;</code>
     */
    private void clearNetPortFlow() {
      
      netPortFlow_ = 0;
    }

    public static final int LOGINFAILED_FIELD_NUMBER = 4;
    private int loginFailed_;
    /**
     * <pre>
     *连续登陆失败阈值
     * </pre>
     *
     * <code>int32 loginFailed = 4;</code>
     */
    public int getLoginFailed() {
      return loginFailed_;
    }
    /**
     * <pre>
     *连续登陆失败阈值
     * </pre>
     *
     * <code>int32 loginFailed = 4;</code>
     */
    private void setLoginFailed(int value) {
      
      loginFailed_ = value;
    }
    /**
     * <pre>
     *连续登陆失败阈值
     * </pre>
     *
     * <code>int32 loginFailed = 4;</code>
     */
    private void clearLoginFailed() {
      
      loginFailed_ = 0;
    }

    public static final int MERGERPERIOD_FIELD_NUMBER = 5;
    private int mergerPeriod_;
    /**
     * <pre>
     *归并事件归并周期
     * </pre>
     *
     * <code>int32 mergerPeriod = 5;</code>
     */
    public int getMergerPeriod() {
      return mergerPeriod_;
    }
    /**
     * <pre>
     *归并事件归并周期
     * </pre>
     *
     * <code>int32 mergerPeriod = 5;</code>
     */
    private void setMergerPeriod(int value) {
      
      mergerPeriod_ = value;
    }
    /**
     * <pre>
     *归并事件归并周期
     * </pre>
     *
     * <code>int32 mergerPeriod = 5;</code>
     */
    private void clearMergerPeriod() {
      
      mergerPeriod_ = 0;
    }

    public static final int DISKUSEDLIMIT_FIELD_NUMBER = 6;
    private int diskUsedLimit_;
    /**
     * <pre>
     *磁盘空间使用率上限阈值
     * </pre>
     *
     * <code>int32 diskUsedLimit = 6;</code>
     */
    public int getDiskUsedLimit() {
      return diskUsedLimit_;
    }
    /**
     * <pre>
     *磁盘空间使用率上限阈值
     * </pre>
     *
     * <code>int32 diskUsedLimit = 6;</code>
     */
    private void setDiskUsedLimit(int value) {
      
      diskUsedLimit_ = value;
    }
    /**
     * <pre>
     *磁盘空间使用率上限阈值
     * </pre>
     *
     * <code>int32 diskUsedLimit = 6;</code>
     */
    private void clearDiskUsedLimit() {
      
      diskUsedLimit_ = 0;
    }

    public static final int HISTORYEVENTTIME_FIELD_NUMBER = 7;
    private int historyEventTime_;
    /**
     * <pre>
     *历史事件上报分界时间参数t
     * </pre>
     *
     * <code>int32 historyEventTime = 7;</code>
     */
    public int getHistoryEventTime() {
      return historyEventTime_;
    }
    /**
     * <pre>
     *历史事件上报分界时间参数t
     * </pre>
     *
     * <code>int32 historyEventTime = 7;</code>
     */
    private void setHistoryEventTime(int value) {
      
      historyEventTime_ = value;
    }
    /**
     * <pre>
     *历史事件上报分界时间参数t
     * </pre>
     *
     * <code>int32 historyEventTime = 7;</code>
     */
    private void clearHistoryEventTime() {
      
      historyEventTime_ = 0;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (cpuUsedLimit_ != 0) {
        output.writeInt32(1, cpuUsedLimit_);
      }
      if (memUsedLimit_ != 0) {
        output.writeInt32(2, memUsedLimit_);
      }
      if (netPortFlow_ != 0) {
        output.writeInt32(3, netPortFlow_);
      }
      if (loginFailed_ != 0) {
        output.writeInt32(4, loginFailed_);
      }
      if (mergerPeriod_ != 0) {
        output.writeInt32(5, mergerPeriod_);
      }
      if (diskUsedLimit_ != 0) {
        output.writeInt32(6, diskUsedLimit_);
      }
      if (historyEventTime_ != 0) {
        output.writeInt32(7, historyEventTime_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (cpuUsedLimit_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, cpuUsedLimit_);
      }
      if (memUsedLimit_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, memUsedLimit_);
      }
      if (netPortFlow_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, netPortFlow_);
      }
      if (loginFailed_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, loginFailed_);
      }
      if (mergerPeriod_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, mergerPeriod_);
      }
      if (diskUsedLimit_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, diskUsedLimit_);
      }
      if (historyEventTime_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, historyEventTime_);
      }
      memoizedSerializedSize = size;
      return size;
    }

    public static com.networkcollect.NetworkCollect.Alarm_Threshold parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.networkcollect.NetworkCollect.Alarm_Threshold parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.networkcollect.NetworkCollect.Alarm_Threshold parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.networkcollect.NetworkCollect.Alarm_Threshold parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.networkcollect.NetworkCollect.Alarm_Threshold parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.networkcollect.NetworkCollect.Alarm_Threshold parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.networkcollect.NetworkCollect.Alarm_Threshold parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.networkcollect.NetworkCollect.Alarm_Threshold parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.networkcollect.NetworkCollect.Alarm_Threshold parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.networkcollect.NetworkCollect.Alarm_Threshold parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.networkcollect.NetworkCollect.Alarm_Threshold parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.networkcollect.NetworkCollect.Alarm_Threshold parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.networkcollect.NetworkCollect.Alarm_Threshold prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * <pre>
     *告警阈值配置
     * </pre>
     *
     * Protobuf type {@code Alarm_Threshold}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.networkcollect.NetworkCollect.Alarm_Threshold, Builder> implements
        // @@protoc_insertion_point(builder_implements:Alarm_Threshold)
        com.networkcollect.NetworkCollect.Alarm_ThresholdOrBuilder {
      // Construct using com.networkcollect.NetworkCollect.Alarm_Threshold.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       *cpu利用率上限阈值
       * </pre>
       *
       * <code>int32 cpuUsedLimit = 1;</code>
       */
      public int getCpuUsedLimit() {
        return instance.getCpuUsedLimit();
      }
      /**
       * <pre>
       *cpu利用率上限阈值
       * </pre>
       *
       * <code>int32 cpuUsedLimit = 1;</code>
       */
      public Builder setCpuUsedLimit(int value) {
        copyOnWrite();
        instance.setCpuUsedLimit(value);
        return this;
      }
      /**
       * <pre>
       *cpu利用率上限阈值
       * </pre>
       *
       * <code>int32 cpuUsedLimit = 1;</code>
       */
      public Builder clearCpuUsedLimit() {
        copyOnWrite();
        instance.clearCpuUsedLimit();
        return this;
      }

      /**
       * <pre>
       *内存使用率上限
       * </pre>
       *
       * <code>int32 memUsedLimit = 2;</code>
       */
      public int getMemUsedLimit() {
        return instance.getMemUsedLimit();
      }
      /**
       * <pre>
       *内存使用率上限
       * </pre>
       *
       * <code>int32 memUsedLimit = 2;</code>
       */
      public Builder setMemUsedLimit(int value) {
        copyOnWrite();
        instance.setMemUsedLimit(value);
        return this;
      }
      /**
       * <pre>
       *内存使用率上限
       * </pre>
       *
       * <code>int32 memUsedLimit = 2;</code>
       */
      public Builder clearMemUsedLimit() {
        copyOnWrite();
        instance.clearMemUsedLimit();
        return this;
      }

      /**
       * <pre>
       *网口流量越限阈值
       * </pre>
       *
       * <code>int32 netPortFlow = 3;</code>
       */
      public int getNetPortFlow() {
        return instance.getNetPortFlow();
      }
      /**
       * <pre>
       *网口流量越限阈值
       * </pre>
       *
       * <code>int32 netPortFlow = 3;</code>
       */
      public Builder setNetPortFlow(int value) {
        copyOnWrite();
        instance.setNetPortFlow(value);
        return this;
      }
      /**
       * <pre>
       *网口流量越限阈值
       * </pre>
       *
       * <code>int32 netPortFlow = 3;</code>
       */
      public Builder clearNetPortFlow() {
        copyOnWrite();
        instance.clearNetPortFlow();
        return this;
      }

      /**
       * <pre>
       *连续登陆失败阈值
       * </pre>
       *
       * <code>int32 loginFailed = 4;</code>
       */
      public int getLoginFailed() {
        return instance.getLoginFailed();
      }
      /**
       * <pre>
       *连续登陆失败阈值
       * </pre>
       *
       * <code>int32 loginFailed = 4;</code>
       */
      public Builder setLoginFailed(int value) {
        copyOnWrite();
        instance.setLoginFailed(value);
        return this;
      }
      /**
       * <pre>
       *连续登陆失败阈值
       * </pre>
       *
       * <code>int32 loginFailed = 4;</code>
       */
      public Builder clearLoginFailed() {
        copyOnWrite();
        instance.clearLoginFailed();
        return this;
      }

      /**
       * <pre>
       *归并事件归并周期
       * </pre>
       *
       * <code>int32 mergerPeriod = 5;</code>
       */
      public int getMergerPeriod() {
        return instance.getMergerPeriod();
      }
      /**
       * <pre>
       *归并事件归并周期
       * </pre>
       *
       * <code>int32 mergerPeriod = 5;</code>
       */
      public Builder setMergerPeriod(int value) {
        copyOnWrite();
        instance.setMergerPeriod(value);
        return this;
      }
      /**
       * <pre>
       *归并事件归并周期
       * </pre>
       *
       * <code>int32 mergerPeriod = 5;</code>
       */
      public Builder clearMergerPeriod() {
        copyOnWrite();
        instance.clearMergerPeriod();
        return this;
      }

      /**
       * <pre>
       *磁盘空间使用率上限阈值
       * </pre>
       *
       * <code>int32 diskUsedLimit = 6;</code>
       */
      public int getDiskUsedLimit() {
        return instance.getDiskUsedLimit();
      }
      /**
       * <pre>
       *磁盘空间使用率上限阈值
       * </pre>
       *
       * <code>int32 diskUsedLimit = 6;</code>
       */
      public Builder setDiskUsedLimit(int value) {
        copyOnWrite();
        instance.setDiskUsedLimit(value);
        return this;
      }
      /**
       * <pre>
       *磁盘空间使用率上限阈值
       * </pre>
       *
       * <code>int32 diskUsedLimit = 6;</code>
       */
      public Builder clearDiskUsedLimit() {
        copyOnWrite();
        instance.clearDiskUsedLimit();
        return this;
      }

      /**
       * <pre>
       *历史事件上报分界时间参数t
       * </pre>
       *
       * <code>int32 historyEventTime = 7;</code>
       */
      public int getHistoryEventTime() {
        return instance.getHistoryEventTime();
      }
      /**
       * <pre>
       *历史事件上报分界时间参数t
       * </pre>
       *
       * <code>int32 historyEventTime = 7;</code>
       */
      public Builder setHistoryEventTime(int value) {
        copyOnWrite();
        instance.setHistoryEventTime(value);
        return this;
      }
      /**
       * <pre>
       *历史事件上报分界时间参数t
       * </pre>
       *
       * <code>int32 historyEventTime = 7;</code>
       */
      public Builder clearHistoryEventTime() {
        copyOnWrite();
        instance.clearHistoryEventTime();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:Alarm_Threshold)
    }
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.networkcollect.NetworkCollect.Alarm_Threshold();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.networkcollect.NetworkCollect.Alarm_Threshold other = (com.networkcollect.NetworkCollect.Alarm_Threshold) arg1;
          cpuUsedLimit_ = visitor.visitInt(cpuUsedLimit_ != 0, cpuUsedLimit_,
              other.cpuUsedLimit_ != 0, other.cpuUsedLimit_);
          memUsedLimit_ = visitor.visitInt(memUsedLimit_ != 0, memUsedLimit_,
              other.memUsedLimit_ != 0, other.memUsedLimit_);
          netPortFlow_ = visitor.visitInt(netPortFlow_ != 0, netPortFlow_,
              other.netPortFlow_ != 0, other.netPortFlow_);
          loginFailed_ = visitor.visitInt(loginFailed_ != 0, loginFailed_,
              other.loginFailed_ != 0, other.loginFailed_);
          mergerPeriod_ = visitor.visitInt(mergerPeriod_ != 0, mergerPeriod_,
              other.mergerPeriod_ != 0, other.mergerPeriod_);
          diskUsedLimit_ = visitor.visitInt(diskUsedLimit_ != 0, diskUsedLimit_,
              other.diskUsedLimit_ != 0, other.diskUsedLimit_);
          historyEventTime_ = visitor.visitInt(historyEventTime_ != 0, historyEventTime_,
              other.historyEventTime_ != 0, other.historyEventTime_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!input.skipField(tag)) {
                    done = true;
                  }
                  break;
                }
                case 8: {

                  cpuUsedLimit_ = input.readInt32();
                  break;
                }
                case 16: {

                  memUsedLimit_ = input.readInt32();
                  break;
                }
                case 24: {

                  netPortFlow_ = input.readInt32();
                  break;
                }
                case 32: {

                  loginFailed_ = input.readInt32();
                  break;
                }
                case 40: {

                  mergerPeriod_ = input.readInt32();
                  break;
                }
                case 48: {

                  diskUsedLimit_ = input.readInt32();
                  break;
                }
                case 56: {

                  historyEventTime_ = input.readInt32();
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (com.networkcollect.NetworkCollect.Alarm_Threshold.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:Alarm_Threshold)
    private static final com.networkcollect.NetworkCollect.Alarm_Threshold DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new Alarm_Threshold();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static com.networkcollect.NetworkCollect.Alarm_Threshold getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<Alarm_Threshold> PARSER;

    public static com.google.protobuf.Parser<Alarm_Threshold> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface IpMatchMacOrBuilder extends
      // @@protoc_insertion_point(interface_extends:IpMatchMac)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     *ip地址
     * </pre>
     *
     * <code>string ip = 1;</code>
     */
    java.lang.String getIp();
    /**
     * <pre>
     *ip地址
     * </pre>
     *
     * <code>string ip = 1;</code>
     */
    com.google.protobuf.ByteString
        getIpBytes();

    /**
     * <pre>
     *mac地址
     * </pre>
     *
     * <code>string mac = 2;</code>
     */
    java.lang.String getMac();
    /**
     * <pre>
     *mac地址
     * </pre>
     *
     * <code>string mac = 2;</code>
     */
    com.google.protobuf.ByteString
        getMacBytes();
  }
  /**
   * <pre>
   *ip-mac
   * </pre>
   *
   * Protobuf type {@code IpMatchMac}
   */
  public  static final class IpMatchMac extends
      com.google.protobuf.GeneratedMessageLite<
          IpMatchMac, IpMatchMac.Builder> implements
      // @@protoc_insertion_point(message_implements:IpMatchMac)
      IpMatchMacOrBuilder {
    private IpMatchMac() {
      ip_ = "";
      mac_ = "";
    }
    public static final int IP_FIELD_NUMBER = 1;
    private java.lang.String ip_;
    /**
     * <pre>
     *ip地址
     * </pre>
     *
     * <code>string ip = 1;</code>
     */
    public java.lang.String getIp() {
      return ip_;
    }
    /**
     * <pre>
     *ip地址
     * </pre>
     *
     * <code>string ip = 1;</code>
     */
    public com.google.protobuf.ByteString
        getIpBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(ip_);
    }
    /**
     * <pre>
     *ip地址
     * </pre>
     *
     * <code>string ip = 1;</code>
     */
    private void setIp(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      ip_ = value;
    }
    /**
     * <pre>
     *ip地址
     * </pre>
     *
     * <code>string ip = 1;</code>
     */
    private void clearIp() {
      
      ip_ = getDefaultInstance().getIp();
    }
    /**
     * <pre>
     *ip地址
     * </pre>
     *
     * <code>string ip = 1;</code>
     */
    private void setIpBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      ip_ = value.toStringUtf8();
    }

    public static final int MAC_FIELD_NUMBER = 2;
    private java.lang.String mac_;
    /**
     * <pre>
     *mac地址
     * </pre>
     *
     * <code>string mac = 2;</code>
     */
    public java.lang.String getMac() {
      return mac_;
    }
    /**
     * <pre>
     *mac地址
     * </pre>
     *
     * <code>string mac = 2;</code>
     */
    public com.google.protobuf.ByteString
        getMacBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(mac_);
    }
    /**
     * <pre>
     *mac地址
     * </pre>
     *
     * <code>string mac = 2;</code>
     */
    private void setMac(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      mac_ = value;
    }
    /**
     * <pre>
     *mac地址
     * </pre>
     *
     * <code>string mac = 2;</code>
     */
    private void clearMac() {
      
      mac_ = getDefaultInstance().getMac();
    }
    /**
     * <pre>
     *mac地址
     * </pre>
     *
     * <code>string mac = 2;</code>
     */
    private void setMacBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      mac_ = value.toStringUtf8();
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!ip_.isEmpty()) {
        output.writeString(1, getIp());
      }
      if (!mac_.isEmpty()) {
        output.writeString(2, getMac());
      }
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (!ip_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getIp());
      }
      if (!mac_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(2, getMac());
      }
      memoizedSerializedSize = size;
      return size;
    }

    public static com.networkcollect.NetworkCollect.IpMatchMac parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.networkcollect.NetworkCollect.IpMatchMac parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.networkcollect.NetworkCollect.IpMatchMac parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.networkcollect.NetworkCollect.IpMatchMac parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.networkcollect.NetworkCollect.IpMatchMac parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.networkcollect.NetworkCollect.IpMatchMac parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.networkcollect.NetworkCollect.IpMatchMac parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.networkcollect.NetworkCollect.IpMatchMac parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.networkcollect.NetworkCollect.IpMatchMac parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.networkcollect.NetworkCollect.IpMatchMac parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.networkcollect.NetworkCollect.IpMatchMac parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.networkcollect.NetworkCollect.IpMatchMac parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.networkcollect.NetworkCollect.IpMatchMac prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * <pre>
     *ip-mac
     * </pre>
     *
     * Protobuf type {@code IpMatchMac}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.networkcollect.NetworkCollect.IpMatchMac, Builder> implements
        // @@protoc_insertion_point(builder_implements:IpMatchMac)
        com.networkcollect.NetworkCollect.IpMatchMacOrBuilder {
      // Construct using com.networkcollect.NetworkCollect.IpMatchMac.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       *ip地址
       * </pre>
       *
       * <code>string ip = 1;</code>
       */
      public java.lang.String getIp() {
        return instance.getIp();
      }
      /**
       * <pre>
       *ip地址
       * </pre>
       *
       * <code>string ip = 1;</code>
       */
      public com.google.protobuf.ByteString
          getIpBytes() {
        return instance.getIpBytes();
      }
      /**
       * <pre>
       *ip地址
       * </pre>
       *
       * <code>string ip = 1;</code>
       */
      public Builder setIp(
          java.lang.String value) {
        copyOnWrite();
        instance.setIp(value);
        return this;
      }
      /**
       * <pre>
       *ip地址
       * </pre>
       *
       * <code>string ip = 1;</code>
       */
      public Builder clearIp() {
        copyOnWrite();
        instance.clearIp();
        return this;
      }
      /**
       * <pre>
       *ip地址
       * </pre>
       *
       * <code>string ip = 1;</code>
       */
      public Builder setIpBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setIpBytes(value);
        return this;
      }

      /**
       * <pre>
       *mac地址
       * </pre>
       *
       * <code>string mac = 2;</code>
       */
      public java.lang.String getMac() {
        return instance.getMac();
      }
      /**
       * <pre>
       *mac地址
       * </pre>
       *
       * <code>string mac = 2;</code>
       */
      public com.google.protobuf.ByteString
          getMacBytes() {
        return instance.getMacBytes();
      }
      /**
       * <pre>
       *mac地址
       * </pre>
       *
       * <code>string mac = 2;</code>
       */
      public Builder setMac(
          java.lang.String value) {
        copyOnWrite();
        instance.setMac(value);
        return this;
      }
      /**
       * <pre>
       *mac地址
       * </pre>
       *
       * <code>string mac = 2;</code>
       */
      public Builder clearMac() {
        copyOnWrite();
        instance.clearMac();
        return this;
      }
      /**
       * <pre>
       *mac地址
       * </pre>
       *
       * <code>string mac = 2;</code>
       */
      public Builder setMacBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setMacBytes(value);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:IpMatchMac)
    }
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.networkcollect.NetworkCollect.IpMatchMac();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.networkcollect.NetworkCollect.IpMatchMac other = (com.networkcollect.NetworkCollect.IpMatchMac) arg1;
          ip_ = visitor.visitString(!ip_.isEmpty(), ip_,
              !other.ip_.isEmpty(), other.ip_);
          mac_ = visitor.visitString(!mac_.isEmpty(), mac_,
              !other.mac_.isEmpty(), other.mac_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!input.skipField(tag)) {
                    done = true;
                  }
                  break;
                }
                case 10: {
                  String s = input.readStringRequireUtf8();

                  ip_ = s;
                  break;
                }
                case 18: {
                  String s = input.readStringRequireUtf8();

                  mac_ = s;
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (com.networkcollect.NetworkCollect.IpMatchMac.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:IpMatchMac)
    private static final com.networkcollect.NetworkCollect.IpMatchMac DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new IpMatchMac();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static com.networkcollect.NetworkCollect.IpMatchMac getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<IpMatchMac> PARSER;

    public static com.google.protobuf.Parser<IpMatchMac> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface CommunicationPairOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CommunicationPair)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     *协议
     * </pre>
     *
     * <code>string protocol = 1;</code>
     */
    java.lang.String getProtocol();
    /**
     * <pre>
     *协议
     * </pre>
     *
     * <code>string protocol = 1;</code>
     */
    com.google.protobuf.ByteString
        getProtocolBytes();

    /**
     * <pre>
     *会话开始时间
     * </pre>
     *
     * <code>string startTime = 2;</code>
     */
    java.lang.String getStartTime();
    /**
     * <pre>
     *会话开始时间
     * </pre>
     *
     * <code>string startTime = 2;</code>
     */
    com.google.protobuf.ByteString
        getStartTimeBytes();

    /**
     * <pre>
     *会话结束时间
     * </pre>
     *
     * <code>string endTime = 3;</code>
     */
    java.lang.String getEndTime();
    /**
     * <pre>
     *会话结束时间
     * </pre>
     *
     * <code>string endTime = 3;</code>
     */
    com.google.protobuf.ByteString
        getEndTimeBytes();

    /**
     * <pre>
     *客户端ip地址
     * </pre>
     *
     * <code>string clientIp = 4;</code>
     */
    java.lang.String getClientIp();
    /**
     * <pre>
     *客户端ip地址
     * </pre>
     *
     * <code>string clientIp = 4;</code>
     */
    com.google.protobuf.ByteString
        getClientIpBytes();

    /**
     * <pre>
     *客户端端口
     * </pre>
     *
     * <code>int32 clientPort = 5;</code>
     */
    int getClientPort();

    /**
     * <pre>
     *服务端ip地址
     * </pre>
     *
     * <code>string serverIp = 6;</code>
     */
    java.lang.String getServerIp();
    /**
     * <pre>
     *服务端ip地址
     * </pre>
     *
     * <code>string serverIp = 6;</code>
     */
    com.google.protobuf.ByteString
        getServerIpBytes();

    /**
     * <pre>
     *服务端端口
     * </pre>
     *
     * <code>int32 serverPort = 7;</code>
     */
    int getServerPort();

    /**
     * <pre>
     *装置guid
     * </pre>
     *
     * <code>string deviceId = 8;</code>
     */
    java.lang.String getDeviceId();
    /**
     * <pre>
     *装置guid
     * </pre>
     *
     * <code>string deviceId = 8;</code>
     */
    com.google.protobuf.ByteString
        getDeviceIdBytes();
  }
  /**
   * <pre>
   *通信对
   * </pre>
   *
   * Protobuf type {@code CommunicationPair}
   */
  public  static final class CommunicationPair extends
      com.google.protobuf.GeneratedMessageLite<
          CommunicationPair, CommunicationPair.Builder> implements
      // @@protoc_insertion_point(message_implements:CommunicationPair)
      CommunicationPairOrBuilder {
    private CommunicationPair() {
      protocol_ = "";
      startTime_ = "";
      endTime_ = "";
      clientIp_ = "";
      serverIp_ = "";
      deviceId_ = "";
    }
    public static final int PROTOCOL_FIELD_NUMBER = 1;
    private java.lang.String protocol_;
    /**
     * <pre>
     *协议
     * </pre>
     *
     * <code>string protocol = 1;</code>
     */
    public java.lang.String getProtocol() {
      return protocol_;
    }
    /**
     * <pre>
     *协议
     * </pre>
     *
     * <code>string protocol = 1;</code>
     */
    public com.google.protobuf.ByteString
        getProtocolBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(protocol_);
    }
    /**
     * <pre>
     *协议
     * </pre>
     *
     * <code>string protocol = 1;</code>
     */
    private void setProtocol(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      protocol_ = value;
    }
    /**
     * <pre>
     *协议
     * </pre>
     *
     * <code>string protocol = 1;</code>
     */
    private void clearProtocol() {
      
      protocol_ = getDefaultInstance().getProtocol();
    }
    /**
     * <pre>
     *协议
     * </pre>
     *
     * <code>string protocol = 1;</code>
     */
    private void setProtocolBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      protocol_ = value.toStringUtf8();
    }

    public static final int STARTTIME_FIELD_NUMBER = 2;
    private java.lang.String startTime_;
    /**
     * <pre>
     *会话开始时间
     * </pre>
     *
     * <code>string startTime = 2;</code>
     */
    public java.lang.String getStartTime() {
      return startTime_;
    }
    /**
     * <pre>
     *会话开始时间
     * </pre>
     *
     * <code>string startTime = 2;</code>
     */
    public com.google.protobuf.ByteString
        getStartTimeBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(startTime_);
    }
    /**
     * <pre>
     *会话开始时间
     * </pre>
     *
     * <code>string startTime = 2;</code>
     */
    private void setStartTime(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      startTime_ = value;
    }
    /**
     * <pre>
     *会话开始时间
     * </pre>
     *
     * <code>string startTime = 2;</code>
     */
    private void clearStartTime() {
      
      startTime_ = getDefaultInstance().getStartTime();
    }
    /**
     * <pre>
     *会话开始时间
     * </pre>
     *
     * <code>string startTime = 2;</code>
     */
    private void setStartTimeBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      startTime_ = value.toStringUtf8();
    }

    public static final int ENDTIME_FIELD_NUMBER = 3;
    private java.lang.String endTime_;
    /**
     * <pre>
     *会话结束时间
     * </pre>
     *
     * <code>string endTime = 3;</code>
     */
    public java.lang.String getEndTime() {
      return endTime_;
    }
    /**
     * <pre>
     *会话结束时间
     * </pre>
     *
     * <code>string endTime = 3;</code>
     */
    public com.google.protobuf.ByteString
        getEndTimeBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(endTime_);
    }
    /**
     * <pre>
     *会话结束时间
     * </pre>
     *
     * <code>string endTime = 3;</code>
     */
    private void setEndTime(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      endTime_ = value;
    }
    /**
     * <pre>
     *会话结束时间
     * </pre>
     *
     * <code>string endTime = 3;</code>
     */
    private void clearEndTime() {
      
      endTime_ = getDefaultInstance().getEndTime();
    }
    /**
     * <pre>
     *会话结束时间
     * </pre>
     *
     * <code>string endTime = 3;</code>
     */
    private void setEndTimeBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      endTime_ = value.toStringUtf8();
    }

    public static final int CLIENTIP_FIELD_NUMBER = 4;
    private java.lang.String clientIp_;
    /**
     * <pre>
     *客户端ip地址
     * </pre>
     *
     * <code>string clientIp = 4;</code>
     */
    public java.lang.String getClientIp() {
      return clientIp_;
    }
    /**
     * <pre>
     *客户端ip地址
     * </pre>
     *
     * <code>string clientIp = 4;</code>
     */
    public com.google.protobuf.ByteString
        getClientIpBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(clientIp_);
    }
    /**
     * <pre>
     *客户端ip地址
     * </pre>
     *
     * <code>string clientIp = 4;</code>
     */
    private void setClientIp(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      clientIp_ = value;
    }
    /**
     * <pre>
     *客户端ip地址
     * </pre>
     *
     * <code>string clientIp = 4;</code>
     */
    private void clearClientIp() {
      
      clientIp_ = getDefaultInstance().getClientIp();
    }
    /**
     * <pre>
     *客户端ip地址
     * </pre>
     *
     * <code>string clientIp = 4;</code>
     */
    private void setClientIpBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      clientIp_ = value.toStringUtf8();
    }

    public static final int CLIENTPORT_FIELD_NUMBER = 5;
    private int clientPort_;
    /**
     * <pre>
     *客户端端口
     * </pre>
     *
     * <code>int32 clientPort = 5;</code>
     */
    public int getClientPort() {
      return clientPort_;
    }
    /**
     * <pre>
     *客户端端口
     * </pre>
     *
     * <code>int32 clientPort = 5;</code>
     */
    private void setClientPort(int value) {
      
      clientPort_ = value;
    }
    /**
     * <pre>
     *客户端端口
     * </pre>
     *
     * <code>int32 clientPort = 5;</code>
     */
    private void clearClientPort() {
      
      clientPort_ = 0;
    }

    public static final int SERVERIP_FIELD_NUMBER = 6;
    private java.lang.String serverIp_;
    /**
     * <pre>
     *服务端ip地址
     * </pre>
     *
     * <code>string serverIp = 6;</code>
     */
    public java.lang.String getServerIp() {
      return serverIp_;
    }
    /**
     * <pre>
     *服务端ip地址
     * </pre>
     *
     * <code>string serverIp = 6;</code>
     */
    public com.google.protobuf.ByteString
        getServerIpBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(serverIp_);
    }
    /**
     * <pre>
     *服务端ip地址
     * </pre>
     *
     * <code>string serverIp = 6;</code>
     */
    private void setServerIp(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      serverIp_ = value;
    }
    /**
     * <pre>
     *服务端ip地址
     * </pre>
     *
     * <code>string serverIp = 6;</code>
     */
    private void clearServerIp() {
      
      serverIp_ = getDefaultInstance().getServerIp();
    }
    /**
     * <pre>
     *服务端ip地址
     * </pre>
     *
     * <code>string serverIp = 6;</code>
     */
    private void setServerIpBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      serverIp_ = value.toStringUtf8();
    }

    public static final int SERVERPORT_FIELD_NUMBER = 7;
    private int serverPort_;
    /**
     * <pre>
     *服务端端口
     * </pre>
     *
     * <code>int32 serverPort = 7;</code>
     */
    public int getServerPort() {
      return serverPort_;
    }
    /**
     * <pre>
     *服务端端口
     * </pre>
     *
     * <code>int32 serverPort = 7;</code>
     */
    private void setServerPort(int value) {
      
      serverPort_ = value;
    }
    /**
     * <pre>
     *服务端端口
     * </pre>
     *
     * <code>int32 serverPort = 7;</code>
     */
    private void clearServerPort() {
      
      serverPort_ = 0;
    }

    public static final int DEVICEID_FIELD_NUMBER = 8;
    private java.lang.String deviceId_;
    /**
     * <pre>
     *装置guid
     * </pre>
     *
     * <code>string deviceId = 8;</code>
     */
    public java.lang.String getDeviceId() {
      return deviceId_;
    }
    /**
     * <pre>
     *装置guid
     * </pre>
     *
     * <code>string deviceId = 8;</code>
     */
    public com.google.protobuf.ByteString
        getDeviceIdBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(deviceId_);
    }
    /**
     * <pre>
     *装置guid
     * </pre>
     *
     * <code>string deviceId = 8;</code>
     */
    private void setDeviceId(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      deviceId_ = value;
    }
    /**
     * <pre>
     *装置guid
     * </pre>
     *
     * <code>string deviceId = 8;</code>
     */
    private void clearDeviceId() {
      
      deviceId_ = getDefaultInstance().getDeviceId();
    }
    /**
     * <pre>
     *装置guid
     * </pre>
     *
     * <code>string deviceId = 8;</code>
     */
    private void setDeviceIdBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      deviceId_ = value.toStringUtf8();
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!protocol_.isEmpty()) {
        output.writeString(1, getProtocol());
      }
      if (!startTime_.isEmpty()) {
        output.writeString(2, getStartTime());
      }
      if (!endTime_.isEmpty()) {
        output.writeString(3, getEndTime());
      }
      if (!clientIp_.isEmpty()) {
        output.writeString(4, getClientIp());
      }
      if (clientPort_ != 0) {
        output.writeInt32(5, clientPort_);
      }
      if (!serverIp_.isEmpty()) {
        output.writeString(6, getServerIp());
      }
      if (serverPort_ != 0) {
        output.writeInt32(7, serverPort_);
      }
      if (!deviceId_.isEmpty()) {
        output.writeString(8, getDeviceId());
      }
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (!protocol_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getProtocol());
      }
      if (!startTime_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(2, getStartTime());
      }
      if (!endTime_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(3, getEndTime());
      }
      if (!clientIp_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(4, getClientIp());
      }
      if (clientPort_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, clientPort_);
      }
      if (!serverIp_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(6, getServerIp());
      }
      if (serverPort_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, serverPort_);
      }
      if (!deviceId_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(8, getDeviceId());
      }
      memoizedSerializedSize = size;
      return size;
    }

    public static com.networkcollect.NetworkCollect.CommunicationPair parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.networkcollect.NetworkCollect.CommunicationPair parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.networkcollect.NetworkCollect.CommunicationPair parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.networkcollect.NetworkCollect.CommunicationPair parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.networkcollect.NetworkCollect.CommunicationPair parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.networkcollect.NetworkCollect.CommunicationPair parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.networkcollect.NetworkCollect.CommunicationPair parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.networkcollect.NetworkCollect.CommunicationPair parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.networkcollect.NetworkCollect.CommunicationPair parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.networkcollect.NetworkCollect.CommunicationPair parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.networkcollect.NetworkCollect.CommunicationPair parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.networkcollect.NetworkCollect.CommunicationPair parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.networkcollect.NetworkCollect.CommunicationPair prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * <pre>
     *通信对
     * </pre>
     *
     * Protobuf type {@code CommunicationPair}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.networkcollect.NetworkCollect.CommunicationPair, Builder> implements
        // @@protoc_insertion_point(builder_implements:CommunicationPair)
        com.networkcollect.NetworkCollect.CommunicationPairOrBuilder {
      // Construct using com.networkcollect.NetworkCollect.CommunicationPair.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       *协议
       * </pre>
       *
       * <code>string protocol = 1;</code>
       */
      public java.lang.String getProtocol() {
        return instance.getProtocol();
      }
      /**
       * <pre>
       *协议
       * </pre>
       *
       * <code>string protocol = 1;</code>
       */
      public com.google.protobuf.ByteString
          getProtocolBytes() {
        return instance.getProtocolBytes();
      }
      /**
       * <pre>
       *协议
       * </pre>
       *
       * <code>string protocol = 1;</code>
       */
      public Builder setProtocol(
          java.lang.String value) {
        copyOnWrite();
        instance.setProtocol(value);
        return this;
      }
      /**
       * <pre>
       *协议
       * </pre>
       *
       * <code>string protocol = 1;</code>
       */
      public Builder clearProtocol() {
        copyOnWrite();
        instance.clearProtocol();
        return this;
      }
      /**
       * <pre>
       *协议
       * </pre>
       *
       * <code>string protocol = 1;</code>
       */
      public Builder setProtocolBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setProtocolBytes(value);
        return this;
      }

      /**
       * <pre>
       *会话开始时间
       * </pre>
       *
       * <code>string startTime = 2;</code>
       */
      public java.lang.String getStartTime() {
        return instance.getStartTime();
      }
      /**
       * <pre>
       *会话开始时间
       * </pre>
       *
       * <code>string startTime = 2;</code>
       */
      public com.google.protobuf.ByteString
          getStartTimeBytes() {
        return instance.getStartTimeBytes();
      }
      /**
       * <pre>
       *会话开始时间
       * </pre>
       *
       * <code>string startTime = 2;</code>
       */
      public Builder setStartTime(
          java.lang.String value) {
        copyOnWrite();
        instance.setStartTime(value);
        return this;
      }
      /**
       * <pre>
       *会话开始时间
       * </pre>
       *
       * <code>string startTime = 2;</code>
       */
      public Builder clearStartTime() {
        copyOnWrite();
        instance.clearStartTime();
        return this;
      }
      /**
       * <pre>
       *会话开始时间
       * </pre>
       *
       * <code>string startTime = 2;</code>
       */
      public Builder setStartTimeBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setStartTimeBytes(value);
        return this;
      }

      /**
       * <pre>
       *会话结束时间
       * </pre>
       *
       * <code>string endTime = 3;</code>
       */
      public java.lang.String getEndTime() {
        return instance.getEndTime();
      }
      /**
       * <pre>
       *会话结束时间
       * </pre>
       *
       * <code>string endTime = 3;</code>
       */
      public com.google.protobuf.ByteString
          getEndTimeBytes() {
        return instance.getEndTimeBytes();
      }
      /**
       * <pre>
       *会话结束时间
       * </pre>
       *
       * <code>string endTime = 3;</code>
       */
      public Builder setEndTime(
          java.lang.String value) {
        copyOnWrite();
        instance.setEndTime(value);
        return this;
      }
      /**
       * <pre>
       *会话结束时间
       * </pre>
       *
       * <code>string endTime = 3;</code>
       */
      public Builder clearEndTime() {
        copyOnWrite();
        instance.clearEndTime();
        return this;
      }
      /**
       * <pre>
       *会话结束时间
       * </pre>
       *
       * <code>string endTime = 3;</code>
       */
      public Builder setEndTimeBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setEndTimeBytes(value);
        return this;
      }

      /**
       * <pre>
       *客户端ip地址
       * </pre>
       *
       * <code>string clientIp = 4;</code>
       */
      public java.lang.String getClientIp() {
        return instance.getClientIp();
      }
      /**
       * <pre>
       *客户端ip地址
       * </pre>
       *
       * <code>string clientIp = 4;</code>
       */
      public com.google.protobuf.ByteString
          getClientIpBytes() {
        return instance.getClientIpBytes();
      }
      /**
       * <pre>
       *客户端ip地址
       * </pre>
       *
       * <code>string clientIp = 4;</code>
       */
      public Builder setClientIp(
          java.lang.String value) {
        copyOnWrite();
        instance.setClientIp(value);
        return this;
      }
      /**
       * <pre>
       *客户端ip地址
       * </pre>
       *
       * <code>string clientIp = 4;</code>
       */
      public Builder clearClientIp() {
        copyOnWrite();
        instance.clearClientIp();
        return this;
      }
      /**
       * <pre>
       *客户端ip地址
       * </pre>
       *
       * <code>string clientIp = 4;</code>
       */
      public Builder setClientIpBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setClientIpBytes(value);
        return this;
      }

      /**
       * <pre>
       *客户端端口
       * </pre>
       *
       * <code>int32 clientPort = 5;</code>
       */
      public int getClientPort() {
        return instance.getClientPort();
      }
      /**
       * <pre>
       *客户端端口
       * </pre>
       *
       * <code>int32 clientPort = 5;</code>
       */
      public Builder setClientPort(int value) {
        copyOnWrite();
        instance.setClientPort(value);
        return this;
      }
      /**
       * <pre>
       *客户端端口
       * </pre>
       *
       * <code>int32 clientPort = 5;</code>
       */
      public Builder clearClientPort() {
        copyOnWrite();
        instance.clearClientPort();
        return this;
      }

      /**
       * <pre>
       *服务端ip地址
       * </pre>
       *
       * <code>string serverIp = 6;</code>
       */
      public java.lang.String getServerIp() {
        return instance.getServerIp();
      }
      /**
       * <pre>
       *服务端ip地址
       * </pre>
       *
       * <code>string serverIp = 6;</code>
       */
      public com.google.protobuf.ByteString
          getServerIpBytes() {
        return instance.getServerIpBytes();
      }
      /**
       * <pre>
       *服务端ip地址
       * </pre>
       *
       * <code>string serverIp = 6;</code>
       */
      public Builder setServerIp(
          java.lang.String value) {
        copyOnWrite();
        instance.setServerIp(value);
        return this;
      }
      /**
       * <pre>
       *服务端ip地址
       * </pre>
       *
       * <code>string serverIp = 6;</code>
       */
      public Builder clearServerIp() {
        copyOnWrite();
        instance.clearServerIp();
        return this;
      }
      /**
       * <pre>
       *服务端ip地址
       * </pre>
       *
       * <code>string serverIp = 6;</code>
       */
      public Builder setServerIpBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setServerIpBytes(value);
        return this;
      }

      /**
       * <pre>
       *服务端端口
       * </pre>
       *
       * <code>int32 serverPort = 7;</code>
       */
      public int getServerPort() {
        return instance.getServerPort();
      }
      /**
       * <pre>
       *服务端端口
       * </pre>
       *
       * <code>int32 serverPort = 7;</code>
       */
      public Builder setServerPort(int value) {
        copyOnWrite();
        instance.setServerPort(value);
        return this;
      }
      /**
       * <pre>
       *服务端端口
       * </pre>
       *
       * <code>int32 serverPort = 7;</code>
       */
      public Builder clearServerPort() {
        copyOnWrite();
        instance.clearServerPort();
        return this;
      }

      /**
       * <pre>
       *装置guid
       * </pre>
       *
       * <code>string deviceId = 8;</code>
       */
      public java.lang.String getDeviceId() {
        return instance.getDeviceId();
      }
      /**
       * <pre>
       *装置guid
       * </pre>
       *
       * <code>string deviceId = 8;</code>
       */
      public com.google.protobuf.ByteString
          getDeviceIdBytes() {
        return instance.getDeviceIdBytes();
      }
      /**
       * <pre>
       *装置guid
       * </pre>
       *
       * <code>string deviceId = 8;</code>
       */
      public Builder setDeviceId(
          java.lang.String value) {
        copyOnWrite();
        instance.setDeviceId(value);
        return this;
      }
      /**
       * <pre>
       *装置guid
       * </pre>
       *
       * <code>string deviceId = 8;</code>
       */
      public Builder clearDeviceId() {
        copyOnWrite();
        instance.clearDeviceId();
        return this;
      }
      /**
       * <pre>
       *装置guid
       * </pre>
       *
       * <code>string deviceId = 8;</code>
       */
      public Builder setDeviceIdBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setDeviceIdBytes(value);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CommunicationPair)
    }
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.networkcollect.NetworkCollect.CommunicationPair();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.networkcollect.NetworkCollect.CommunicationPair other = (com.networkcollect.NetworkCollect.CommunicationPair) arg1;
          protocol_ = visitor.visitString(!protocol_.isEmpty(), protocol_,
              !other.protocol_.isEmpty(), other.protocol_);
          startTime_ = visitor.visitString(!startTime_.isEmpty(), startTime_,
              !other.startTime_.isEmpty(), other.startTime_);
          endTime_ = visitor.visitString(!endTime_.isEmpty(), endTime_,
              !other.endTime_.isEmpty(), other.endTime_);
          clientIp_ = visitor.visitString(!clientIp_.isEmpty(), clientIp_,
              !other.clientIp_.isEmpty(), other.clientIp_);
          clientPort_ = visitor.visitInt(clientPort_ != 0, clientPort_,
              other.clientPort_ != 0, other.clientPort_);
          serverIp_ = visitor.visitString(!serverIp_.isEmpty(), serverIp_,
              !other.serverIp_.isEmpty(), other.serverIp_);
          serverPort_ = visitor.visitInt(serverPort_ != 0, serverPort_,
              other.serverPort_ != 0, other.serverPort_);
          deviceId_ = visitor.visitString(!deviceId_.isEmpty(), deviceId_,
              !other.deviceId_.isEmpty(), other.deviceId_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!input.skipField(tag)) {
                    done = true;
                  }
                  break;
                }
                case 10: {
                  String s = input.readStringRequireUtf8();

                  protocol_ = s;
                  break;
                }
                case 18: {
                  String s = input.readStringRequireUtf8();

                  startTime_ = s;
                  break;
                }
                case 26: {
                  String s = input.readStringRequireUtf8();

                  endTime_ = s;
                  break;
                }
                case 34: {
                  String s = input.readStringRequireUtf8();

                  clientIp_ = s;
                  break;
                }
                case 40: {

                  clientPort_ = input.readInt32();
                  break;
                }
                case 50: {
                  String s = input.readStringRequireUtf8();

                  serverIp_ = s;
                  break;
                }
                case 56: {

                  serverPort_ = input.readInt32();
                  break;
                }
                case 66: {
                  String s = input.readStringRequireUtf8();

                  deviceId_ = s;
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (com.networkcollect.NetworkCollect.CommunicationPair.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:CommunicationPair)
    private static final com.networkcollect.NetworkCollect.CommunicationPair DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new CommunicationPair();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static com.networkcollect.NetworkCollect.CommunicationPair getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<CommunicationPair> PARSER;

    public static com.google.protobuf.Parser<CommunicationPair> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface RecvMainStationDataOrBuilder extends
      // @@protoc_insertion_point(interface_extends:RecvMainStationData)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     *消息类型
     * </pre>
     *
     * <code>.MainStationMsgType msgType = 1;</code>
     */
    int getMsgTypeValue();
    /**
     * <pre>
     *消息类型
     * </pre>
     *
     * <code>.MainStationMsgType msgType = 1;</code>
     */
    com.networkcollect.NetworkCollect.MainStationMsgType getMsgType();

    /**
     * <pre>
     *文件路径
     * </pre>
     *
     * <code>string filePath = 2;</code>
     */
    java.lang.String getFilePath();
    /**
     * <pre>
     *文件路径
     * </pre>
     *
     * <code>string filePath = 2;</code>
     */
    com.google.protobuf.ByteString
        getFilePathBytes();

    /**
     * <pre>
     *脚本文件内容
     * </pre>
     *
     * <code>string fileContent = 3;</code>
     */
    java.lang.String getFileContent();
    /**
     * <pre>
     *脚本文件内容
     * </pre>
     *
     * <code>string fileContent = 3;</code>
     */
    com.google.protobuf.ByteString
        getFileContentBytes();

    /**
     * <pre>
     *关键文件列表
     * </pre>
     *
     * <code>repeated string keyFileList = 4;</code>
     */
    java.util.List<String>
        getKeyFileListList();
    /**
     * <pre>
     *关键文件列表
     * </pre>
     *
     * <code>repeated string keyFileList = 4;</code>
     */
    int getKeyFileListCount();
    /**
     * <pre>
     *关键文件列表
     * </pre>
     *
     * <code>repeated string keyFileList = 4;</code>
     */
    java.lang.String getKeyFileList(int index);
    /**
     * <pre>
     *关键文件列表
     * </pre>
     *
     * <code>repeated string keyFileList = 4;</code>
     */
    com.google.protobuf.ByteString
        getKeyFileListBytes(int index);

    /**
     * <pre>
     *ip-mac白名单
     * </pre>
     *
     * <code>repeated .IpMatchMac ipMacList = 5;</code>
     */
    java.util.List<com.networkcollect.NetworkCollect.IpMatchMac> 
        getIpMacListList();
    /**
     * <pre>
     *ip-mac白名单
     * </pre>
     *
     * <code>repeated .IpMatchMac ipMacList = 5;</code>
     */
    com.networkcollect.NetworkCollect.IpMatchMac getIpMacList(int index);
    /**
     * <pre>
     *ip-mac白名单
     * </pre>
     *
     * <code>repeated .IpMatchMac ipMacList = 5;</code>
     */
    int getIpMacListCount();

    /**
     * <pre>
     *通信对白名单
     * </pre>
     *
     * <code>repeated .CommunicationPair pairList = 6;</code>
     */
    java.util.List<com.networkcollect.NetworkCollect.CommunicationPair> 
        getPairListList();
    /**
     * <pre>
     *通信对白名单
     * </pre>
     *
     * <code>repeated .CommunicationPair pairList = 6;</code>
     */
    com.networkcollect.NetworkCollect.CommunicationPair getPairList(int index);
    /**
     * <pre>
     *通信对白名单
     * </pre>
     *
     * <code>repeated .CommunicationPair pairList = 6;</code>
     */
    int getPairListCount();

    /**
     * <pre>
     *采集数据
     * </pre>
     *
     * <code>string collectItem = 7;</code>
     */
    java.lang.String getCollectItem();
    /**
     * <pre>
     *采集数据
     * </pre>
     *
     * <code>string collectItem = 7;</code>
     */
    com.google.protobuf.ByteString
        getCollectItemBytes();

    /**
     * <pre>
     *告警阈值配置
     * </pre>
     *
     * <code>.Alarm_Threshold thresholdList = 8;</code>
     */
    boolean hasThresholdList();
    /**
     * <pre>
     *告警阈值配置
     * </pre>
     *
     * <code>.Alarm_Threshold thresholdList = 8;</code>
     */
    com.networkcollect.NetworkCollect.Alarm_Threshold getThresholdList();
  }
  /**
   * <pre>
   *接收到主站数据
   * </pre>
   *
   * Protobuf type {@code RecvMainStationData}
   */
  public  static final class RecvMainStationData extends
      com.google.protobuf.GeneratedMessageLite<
          RecvMainStationData, RecvMainStationData.Builder> implements
      // @@protoc_insertion_point(message_implements:RecvMainStationData)
      RecvMainStationDataOrBuilder {
    private RecvMainStationData() {
      filePath_ = "";
      fileContent_ = "";
      keyFileList_ = com.google.protobuf.GeneratedMessageLite.emptyProtobufList();
      ipMacList_ = emptyProtobufList();
      pairList_ = emptyProtobufList();
      collectItem_ = "";
    }
    private int bitField0_;
    public static final int MSGTYPE_FIELD_NUMBER = 1;
    private int msgType_;
    /**
     * <pre>
     *消息类型
     * </pre>
     *
     * <code>.MainStationMsgType msgType = 1;</code>
     */
    public int getMsgTypeValue() {
      return msgType_;
    }
    /**
     * <pre>
     *消息类型
     * </pre>
     *
     * <code>.MainStationMsgType msgType = 1;</code>
     */
    public com.networkcollect.NetworkCollect.MainStationMsgType getMsgType() {
      com.networkcollect.NetworkCollect.MainStationMsgType result = com.networkcollect.NetworkCollect.MainStationMsgType.forNumber(msgType_);
      return result == null ? com.networkcollect.NetworkCollect.MainStationMsgType.UNRECOGNIZED : result;
    }
    /**
     * <pre>
     *消息类型
     * </pre>
     *
     * <code>.MainStationMsgType msgType = 1;</code>
     */
    private void setMsgTypeValue(int value) {
        msgType_ = value;
    }
    /**
     * <pre>
     *消息类型
     * </pre>
     *
     * <code>.MainStationMsgType msgType = 1;</code>
     */
    private void setMsgType(com.networkcollect.NetworkCollect.MainStationMsgType value) {
      if (value == null) {
        throw new NullPointerException();
      }
      
      msgType_ = value.getNumber();
    }
    /**
     * <pre>
     *消息类型
     * </pre>
     *
     * <code>.MainStationMsgType msgType = 1;</code>
     */
    private void clearMsgType() {
      
      msgType_ = 0;
    }

    public static final int FILEPATH_FIELD_NUMBER = 2;
    private java.lang.String filePath_;
    /**
     * <pre>
     *文件路径
     * </pre>
     *
     * <code>string filePath = 2;</code>
     */
    public java.lang.String getFilePath() {
      return filePath_;
    }
    /**
     * <pre>
     *文件路径
     * </pre>
     *
     * <code>string filePath = 2;</code>
     */
    public com.google.protobuf.ByteString
        getFilePathBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(filePath_);
    }
    /**
     * <pre>
     *文件路径
     * </pre>
     *
     * <code>string filePath = 2;</code>
     */
    private void setFilePath(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      filePath_ = value;
    }
    /**
     * <pre>
     *文件路径
     * </pre>
     *
     * <code>string filePath = 2;</code>
     */
    private void clearFilePath() {
      
      filePath_ = getDefaultInstance().getFilePath();
    }
    /**
     * <pre>
     *文件路径
     * </pre>
     *
     * <code>string filePath = 2;</code>
     */
    private void setFilePathBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      filePath_ = value.toStringUtf8();
    }

    public static final int FILECONTENT_FIELD_NUMBER = 3;
    private java.lang.String fileContent_;
    /**
     * <pre>
     *脚本文件内容
     * </pre>
     *
     * <code>string fileContent = 3;</code>
     */
    public java.lang.String getFileContent() {
      return fileContent_;
    }
    /**
     * <pre>
     *脚本文件内容
     * </pre>
     *
     * <code>string fileContent = 3;</code>
     */
    public com.google.protobuf.ByteString
        getFileContentBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(fileContent_);
    }
    /**
     * <pre>
     *脚本文件内容
     * </pre>
     *
     * <code>string fileContent = 3;</code>
     */
    private void setFileContent(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      fileContent_ = value;
    }
    /**
     * <pre>
     *脚本文件内容
     * </pre>
     *
     * <code>string fileContent = 3;</code>
     */
    private void clearFileContent() {
      
      fileContent_ = getDefaultInstance().getFileContent();
    }
    /**
     * <pre>
     *脚本文件内容
     * </pre>
     *
     * <code>string fileContent = 3;</code>
     */
    private void setFileContentBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      fileContent_ = value.toStringUtf8();
    }

    public static final int KEYFILELIST_FIELD_NUMBER = 4;
    private com.google.protobuf.Internal.ProtobufList<String> keyFileList_;
    /**
     * <pre>
     *关键文件列表
     * </pre>
     *
     * <code>repeated string keyFileList = 4;</code>
     */
    public java.util.List<String> getKeyFileListList() {
      return keyFileList_;
    }
    /**
     * <pre>
     *关键文件列表
     * </pre>
     *
     * <code>repeated string keyFileList = 4;</code>
     */
    public int getKeyFileListCount() {
      return keyFileList_.size();
    }
    /**
     * <pre>
     *关键文件列表
     * </pre>
     *
     * <code>repeated string keyFileList = 4;</code>
     */
    public java.lang.String getKeyFileList(int index) {
      return keyFileList_.get(index);
    }
    /**
     * <pre>
     *关键文件列表
     * </pre>
     *
     * <code>repeated string keyFileList = 4;</code>
     */
    public com.google.protobuf.ByteString
        getKeyFileListBytes(int index) {
      return com.google.protobuf.ByteString.copyFromUtf8(
          keyFileList_.get(index));
    }
    private void ensureKeyFileListIsMutable() {
      if (!keyFileList_.isModifiable()) {
        keyFileList_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(keyFileList_);
       }
    }
    /**
     * <pre>
     *关键文件列表
     * </pre>
     *
     * <code>repeated string keyFileList = 4;</code>
     */
    private void setKeyFileList(
        int index, java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  ensureKeyFileListIsMutable();
      keyFileList_.set(index, value);
    }
    /**
     * <pre>
     *关键文件列表
     * </pre>
     *
     * <code>repeated string keyFileList = 4;</code>
     */
    private void addKeyFileList(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  ensureKeyFileListIsMutable();
      keyFileList_.add(value);
    }
    /**
     * <pre>
     *关键文件列表
     * </pre>
     *
     * <code>repeated string keyFileList = 4;</code>
     */
    private void addAllKeyFileList(
        java.lang.Iterable<java.lang.String> values) {
      ensureKeyFileListIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, keyFileList_);
    }
    /**
     * <pre>
     *关键文件列表
     * </pre>
     *
     * <code>repeated string keyFileList = 4;</code>
     */
    private void clearKeyFileList() {
      keyFileList_ = com.google.protobuf.GeneratedMessageLite.emptyProtobufList();
    }
    /**
     * <pre>
     *关键文件列表
     * </pre>
     *
     * <code>repeated string keyFileList = 4;</code>
     */
    private void addKeyFileListBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      ensureKeyFileListIsMutable();
      keyFileList_.add(value.toStringUtf8());
    }

    public static final int IPMACLIST_FIELD_NUMBER = 5;
    private com.google.protobuf.Internal.ProtobufList<com.networkcollect.NetworkCollect.IpMatchMac> ipMacList_;
    /**
     * <pre>
     *ip-mac白名单
     * </pre>
     *
     * <code>repeated .IpMatchMac ipMacList = 5;</code>
     */
    public java.util.List<com.networkcollect.NetworkCollect.IpMatchMac> getIpMacListList() {
      return ipMacList_;
    }
    /**
     * <pre>
     *ip-mac白名单
     * </pre>
     *
     * <code>repeated .IpMatchMac ipMacList = 5;</code>
     */
    public java.util.List<? extends com.networkcollect.NetworkCollect.IpMatchMacOrBuilder> 
        getIpMacListOrBuilderList() {
      return ipMacList_;
    }
    /**
     * <pre>
     *ip-mac白名单
     * </pre>
     *
     * <code>repeated .IpMatchMac ipMacList = 5;</code>
     */
    public int getIpMacListCount() {
      return ipMacList_.size();
    }
    /**
     * <pre>
     *ip-mac白名单
     * </pre>
     *
     * <code>repeated .IpMatchMac ipMacList = 5;</code>
     */
    public com.networkcollect.NetworkCollect.IpMatchMac getIpMacList(int index) {
      return ipMacList_.get(index);
    }
    /**
     * <pre>
     *ip-mac白名单
     * </pre>
     *
     * <code>repeated .IpMatchMac ipMacList = 5;</code>
     */
    public com.networkcollect.NetworkCollect.IpMatchMacOrBuilder getIpMacListOrBuilder(
        int index) {
      return ipMacList_.get(index);
    }
    private void ensureIpMacListIsMutable() {
      if (!ipMacList_.isModifiable()) {
        ipMacList_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(ipMacList_);
       }
    }

    /**
     * <pre>
     *ip-mac白名单
     * </pre>
     *
     * <code>repeated .IpMatchMac ipMacList = 5;</code>
     */
    private void setIpMacList(
        int index, com.networkcollect.NetworkCollect.IpMatchMac value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureIpMacListIsMutable();
      ipMacList_.set(index, value);
    }
    /**
     * <pre>
     *ip-mac白名单
     * </pre>
     *
     * <code>repeated .IpMatchMac ipMacList = 5;</code>
     */
    private void setIpMacList(
        int index, com.networkcollect.NetworkCollect.IpMatchMac.Builder builderForValue) {
      ensureIpMacListIsMutable();
      ipMacList_.set(index, builderForValue.build());
    }
    /**
     * <pre>
     *ip-mac白名单
     * </pre>
     *
     * <code>repeated .IpMatchMac ipMacList = 5;</code>
     */
    private void addIpMacList(com.networkcollect.NetworkCollect.IpMatchMac value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureIpMacListIsMutable();
      ipMacList_.add(value);
    }
    /**
     * <pre>
     *ip-mac白名单
     * </pre>
     *
     * <code>repeated .IpMatchMac ipMacList = 5;</code>
     */
    private void addIpMacList(
        int index, com.networkcollect.NetworkCollect.IpMatchMac value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureIpMacListIsMutable();
      ipMacList_.add(index, value);
    }
    /**
     * <pre>
     *ip-mac白名单
     * </pre>
     *
     * <code>repeated .IpMatchMac ipMacList = 5;</code>
     */
    private void addIpMacList(
        com.networkcollect.NetworkCollect.IpMatchMac.Builder builderForValue) {
      ensureIpMacListIsMutable();
      ipMacList_.add(builderForValue.build());
    }
    /**
     * <pre>
     *ip-mac白名单
     * </pre>
     *
     * <code>repeated .IpMatchMac ipMacList = 5;</code>
     */
    private void addIpMacList(
        int index, com.networkcollect.NetworkCollect.IpMatchMac.Builder builderForValue) {
      ensureIpMacListIsMutable();
      ipMacList_.add(index, builderForValue.build());
    }
    /**
     * <pre>
     *ip-mac白名单
     * </pre>
     *
     * <code>repeated .IpMatchMac ipMacList = 5;</code>
     */
    private void addAllIpMacList(
        java.lang.Iterable<? extends com.networkcollect.NetworkCollect.IpMatchMac> values) {
      ensureIpMacListIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, ipMacList_);
    }
    /**
     * <pre>
     *ip-mac白名单
     * </pre>
     *
     * <code>repeated .IpMatchMac ipMacList = 5;</code>
     */
    private void clearIpMacList() {
      ipMacList_ = emptyProtobufList();
    }
    /**
     * <pre>
     *ip-mac白名单
     * </pre>
     *
     * <code>repeated .IpMatchMac ipMacList = 5;</code>
     */
    private void removeIpMacList(int index) {
      ensureIpMacListIsMutable();
      ipMacList_.remove(index);
    }

    public static final int PAIRLIST_FIELD_NUMBER = 6;
    private com.google.protobuf.Internal.ProtobufList<com.networkcollect.NetworkCollect.CommunicationPair> pairList_;
    /**
     * <pre>
     *通信对白名单
     * </pre>
     *
     * <code>repeated .CommunicationPair pairList = 6;</code>
     */
    public java.util.List<com.networkcollect.NetworkCollect.CommunicationPair> getPairListList() {
      return pairList_;
    }
    /**
     * <pre>
     *通信对白名单
     * </pre>
     *
     * <code>repeated .CommunicationPair pairList = 6;</code>
     */
    public java.util.List<? extends com.networkcollect.NetworkCollect.CommunicationPairOrBuilder> 
        getPairListOrBuilderList() {
      return pairList_;
    }
    /**
     * <pre>
     *通信对白名单
     * </pre>
     *
     * <code>repeated .CommunicationPair pairList = 6;</code>
     */
    public int getPairListCount() {
      return pairList_.size();
    }
    /**
     * <pre>
     *通信对白名单
     * </pre>
     *
     * <code>repeated .CommunicationPair pairList = 6;</code>
     */
    public com.networkcollect.NetworkCollect.CommunicationPair getPairList(int index) {
      return pairList_.get(index);
    }
    /**
     * <pre>
     *通信对白名单
     * </pre>
     *
     * <code>repeated .CommunicationPair pairList = 6;</code>
     */
    public com.networkcollect.NetworkCollect.CommunicationPairOrBuilder getPairListOrBuilder(
        int index) {
      return pairList_.get(index);
    }
    private void ensurePairListIsMutable() {
      if (!pairList_.isModifiable()) {
        pairList_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(pairList_);
       }
    }

    /**
     * <pre>
     *通信对白名单
     * </pre>
     *
     * <code>repeated .CommunicationPair pairList = 6;</code>
     */
    private void setPairList(
        int index, com.networkcollect.NetworkCollect.CommunicationPair value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensurePairListIsMutable();
      pairList_.set(index, value);
    }
    /**
     * <pre>
     *通信对白名单
     * </pre>
     *
     * <code>repeated .CommunicationPair pairList = 6;</code>
     */
    private void setPairList(
        int index, com.networkcollect.NetworkCollect.CommunicationPair.Builder builderForValue) {
      ensurePairListIsMutable();
      pairList_.set(index, builderForValue.build());
    }
    /**
     * <pre>
     *通信对白名单
     * </pre>
     *
     * <code>repeated .CommunicationPair pairList = 6;</code>
     */
    private void addPairList(com.networkcollect.NetworkCollect.CommunicationPair value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensurePairListIsMutable();
      pairList_.add(value);
    }
    /**
     * <pre>
     *通信对白名单
     * </pre>
     *
     * <code>repeated .CommunicationPair pairList = 6;</code>
     */
    private void addPairList(
        int index, com.networkcollect.NetworkCollect.CommunicationPair value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensurePairListIsMutable();
      pairList_.add(index, value);
    }
    /**
     * <pre>
     *通信对白名单
     * </pre>
     *
     * <code>repeated .CommunicationPair pairList = 6;</code>
     */
    private void addPairList(
        com.networkcollect.NetworkCollect.CommunicationPair.Builder builderForValue) {
      ensurePairListIsMutable();
      pairList_.add(builderForValue.build());
    }
    /**
     * <pre>
     *通信对白名单
     * </pre>
     *
     * <code>repeated .CommunicationPair pairList = 6;</code>
     */
    private void addPairList(
        int index, com.networkcollect.NetworkCollect.CommunicationPair.Builder builderForValue) {
      ensurePairListIsMutable();
      pairList_.add(index, builderForValue.build());
    }
    /**
     * <pre>
     *通信对白名单
     * </pre>
     *
     * <code>repeated .CommunicationPair pairList = 6;</code>
     */
    private void addAllPairList(
        java.lang.Iterable<? extends com.networkcollect.NetworkCollect.CommunicationPair> values) {
      ensurePairListIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, pairList_);
    }
    /**
     * <pre>
     *通信对白名单
     * </pre>
     *
     * <code>repeated .CommunicationPair pairList = 6;</code>
     */
    private void clearPairList() {
      pairList_ = emptyProtobufList();
    }
    /**
     * <pre>
     *通信对白名单
     * </pre>
     *
     * <code>repeated .CommunicationPair pairList = 6;</code>
     */
    private void removePairList(int index) {
      ensurePairListIsMutable();
      pairList_.remove(index);
    }

    public static final int COLLECTITEM_FIELD_NUMBER = 7;
    private java.lang.String collectItem_;
    /**
     * <pre>
     *采集数据
     * </pre>
     *
     * <code>string collectItem = 7;</code>
     */
    public java.lang.String getCollectItem() {
      return collectItem_;
    }
    /**
     * <pre>
     *采集数据
     * </pre>
     *
     * <code>string collectItem = 7;</code>
     */
    public com.google.protobuf.ByteString
        getCollectItemBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(collectItem_);
    }
    /**
     * <pre>
     *采集数据
     * </pre>
     *
     * <code>string collectItem = 7;</code>
     */
    private void setCollectItem(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      collectItem_ = value;
    }
    /**
     * <pre>
     *采集数据
     * </pre>
     *
     * <code>string collectItem = 7;</code>
     */
    private void clearCollectItem() {
      
      collectItem_ = getDefaultInstance().getCollectItem();
    }
    /**
     * <pre>
     *采集数据
     * </pre>
     *
     * <code>string collectItem = 7;</code>
     */
    private void setCollectItemBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      collectItem_ = value.toStringUtf8();
    }

    public static final int THRESHOLDLIST_FIELD_NUMBER = 8;
    private com.networkcollect.NetworkCollect.Alarm_Threshold thresholdList_;
    /**
     * <pre>
     *告警阈值配置
     * </pre>
     *
     * <code>.Alarm_Threshold thresholdList = 8;</code>
     */
    public boolean hasThresholdList() {
      return thresholdList_ != null;
    }
    /**
     * <pre>
     *告警阈值配置
     * </pre>
     *
     * <code>.Alarm_Threshold thresholdList = 8;</code>
     */
    public com.networkcollect.NetworkCollect.Alarm_Threshold getThresholdList() {
      return thresholdList_ == null ? com.networkcollect.NetworkCollect.Alarm_Threshold.getDefaultInstance() : thresholdList_;
    }
    /**
     * <pre>
     *告警阈值配置
     * </pre>
     *
     * <code>.Alarm_Threshold thresholdList = 8;</code>
     */
    private void setThresholdList(com.networkcollect.NetworkCollect.Alarm_Threshold value) {
      if (value == null) {
        throw new NullPointerException();
      }
      thresholdList_ = value;
      
      }
    /**
     * <pre>
     *告警阈值配置
     * </pre>
     *
     * <code>.Alarm_Threshold thresholdList = 8;</code>
     */
    private void setThresholdList(
        com.networkcollect.NetworkCollect.Alarm_Threshold.Builder builderForValue) {
      thresholdList_ = builderForValue.build();
      
    }
    /**
     * <pre>
     *告警阈值配置
     * </pre>
     *
     * <code>.Alarm_Threshold thresholdList = 8;</code>
     */
    private void mergeThresholdList(com.networkcollect.NetworkCollect.Alarm_Threshold value) {
      if (thresholdList_ != null &&
          thresholdList_ != com.networkcollect.NetworkCollect.Alarm_Threshold.getDefaultInstance()) {
        thresholdList_ =
          com.networkcollect.NetworkCollect.Alarm_Threshold.newBuilder(thresholdList_).mergeFrom(value).buildPartial();
      } else {
        thresholdList_ = value;
      }
      
    }
    /**
     * <pre>
     *告警阈值配置
     * </pre>
     *
     * <code>.Alarm_Threshold thresholdList = 8;</code>
     */
    private void clearThresholdList() {  thresholdList_ = null;
      
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (msgType_ != com.networkcollect.NetworkCollect.MainStationMsgType.MAIN_INVALID.getNumber()) {
        output.writeEnum(1, msgType_);
      }
      if (!filePath_.isEmpty()) {
        output.writeString(2, getFilePath());
      }
      if (!fileContent_.isEmpty()) {
        output.writeString(3, getFileContent());
      }
      for (int i = 0; i < keyFileList_.size(); i++) {
        output.writeString(4, keyFileList_.get(i));
      }
      for (int i = 0; i < ipMacList_.size(); i++) {
        output.writeMessage(5, ipMacList_.get(i));
      }
      for (int i = 0; i < pairList_.size(); i++) {
        output.writeMessage(6, pairList_.get(i));
      }
      if (!collectItem_.isEmpty()) {
        output.writeString(7, getCollectItem());
      }
      if (thresholdList_ != null) {
        output.writeMessage(8, getThresholdList());
      }
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (msgType_ != com.networkcollect.NetworkCollect.MainStationMsgType.MAIN_INVALID.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, msgType_);
      }
      if (!filePath_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(2, getFilePath());
      }
      if (!fileContent_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(3, getFileContent());
      }
      {
        int dataSize = 0;
        for (int i = 0; i < keyFileList_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeStringSizeNoTag(keyFileList_.get(i));
        }
        size += dataSize;
        size += 1 * getKeyFileListList().size();
      }
      for (int i = 0; i < ipMacList_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, ipMacList_.get(i));
      }
      for (int i = 0; i < pairList_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, pairList_.get(i));
      }
      if (!collectItem_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(7, getCollectItem());
      }
      if (thresholdList_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(8, getThresholdList());
      }
      memoizedSerializedSize = size;
      return size;
    }

    public static com.networkcollect.NetworkCollect.RecvMainStationData parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.networkcollect.NetworkCollect.RecvMainStationData parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.networkcollect.NetworkCollect.RecvMainStationData parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.networkcollect.NetworkCollect.RecvMainStationData parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.networkcollect.NetworkCollect.RecvMainStationData parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.networkcollect.NetworkCollect.RecvMainStationData parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.networkcollect.NetworkCollect.RecvMainStationData parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.networkcollect.NetworkCollect.RecvMainStationData parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.networkcollect.NetworkCollect.RecvMainStationData parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.networkcollect.NetworkCollect.RecvMainStationData parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.networkcollect.NetworkCollect.RecvMainStationData parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.networkcollect.NetworkCollect.RecvMainStationData parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.networkcollect.NetworkCollect.RecvMainStationData prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * <pre>
     *接收到主站数据
     * </pre>
     *
     * Protobuf type {@code RecvMainStationData}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.networkcollect.NetworkCollect.RecvMainStationData, Builder> implements
        // @@protoc_insertion_point(builder_implements:RecvMainStationData)
        com.networkcollect.NetworkCollect.RecvMainStationDataOrBuilder {
      // Construct using com.networkcollect.NetworkCollect.RecvMainStationData.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       *消息类型
       * </pre>
       *
       * <code>.MainStationMsgType msgType = 1;</code>
       */
      public int getMsgTypeValue() {
        return instance.getMsgTypeValue();
      }
      /**
       * <pre>
       *消息类型
       * </pre>
       *
       * <code>.MainStationMsgType msgType = 1;</code>
       */
      public Builder setMsgTypeValue(int value) {
        copyOnWrite();
        instance.setMsgTypeValue(value);
        return this;
      }
      /**
       * <pre>
       *消息类型
       * </pre>
       *
       * <code>.MainStationMsgType msgType = 1;</code>
       */
      public com.networkcollect.NetworkCollect.MainStationMsgType getMsgType() {
        return instance.getMsgType();
      }
      /**
       * <pre>
       *消息类型
       * </pre>
       *
       * <code>.MainStationMsgType msgType = 1;</code>
       */
      public Builder setMsgType(com.networkcollect.NetworkCollect.MainStationMsgType value) {
        copyOnWrite();
        instance.setMsgType(value);
        return this;
      }
      /**
       * <pre>
       *消息类型
       * </pre>
       *
       * <code>.MainStationMsgType msgType = 1;</code>
       */
      public Builder clearMsgType() {
        copyOnWrite();
        instance.clearMsgType();
        return this;
      }

      /**
       * <pre>
       *文件路径
       * </pre>
       *
       * <code>string filePath = 2;</code>
       */
      public java.lang.String getFilePath() {
        return instance.getFilePath();
      }
      /**
       * <pre>
       *文件路径
       * </pre>
       *
       * <code>string filePath = 2;</code>
       */
      public com.google.protobuf.ByteString
          getFilePathBytes() {
        return instance.getFilePathBytes();
      }
      /**
       * <pre>
       *文件路径
       * </pre>
       *
       * <code>string filePath = 2;</code>
       */
      public Builder setFilePath(
          java.lang.String value) {
        copyOnWrite();
        instance.setFilePath(value);
        return this;
      }
      /**
       * <pre>
       *文件路径
       * </pre>
       *
       * <code>string filePath = 2;</code>
       */
      public Builder clearFilePath() {
        copyOnWrite();
        instance.clearFilePath();
        return this;
      }
      /**
       * <pre>
       *文件路径
       * </pre>
       *
       * <code>string filePath = 2;</code>
       */
      public Builder setFilePathBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setFilePathBytes(value);
        return this;
      }

      /**
       * <pre>
       *脚本文件内容
       * </pre>
       *
       * <code>string fileContent = 3;</code>
       */
      public java.lang.String getFileContent() {
        return instance.getFileContent();
      }
      /**
       * <pre>
       *脚本文件内容
       * </pre>
       *
       * <code>string fileContent = 3;</code>
       */
      public com.google.protobuf.ByteString
          getFileContentBytes() {
        return instance.getFileContentBytes();
      }
      /**
       * <pre>
       *脚本文件内容
       * </pre>
       *
       * <code>string fileContent = 3;</code>
       */
      public Builder setFileContent(
          java.lang.String value) {
        copyOnWrite();
        instance.setFileContent(value);
        return this;
      }
      /**
       * <pre>
       *脚本文件内容
       * </pre>
       *
       * <code>string fileContent = 3;</code>
       */
      public Builder clearFileContent() {
        copyOnWrite();
        instance.clearFileContent();
        return this;
      }
      /**
       * <pre>
       *脚本文件内容
       * </pre>
       *
       * <code>string fileContent = 3;</code>
       */
      public Builder setFileContentBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setFileContentBytes(value);
        return this;
      }

      /**
       * <pre>
       *关键文件列表
       * </pre>
       *
       * <code>repeated string keyFileList = 4;</code>
       */
      public java.util.List<String>
          getKeyFileListList() {
        return java.util.Collections.unmodifiableList(
            instance.getKeyFileListList());
      }
      /**
       * <pre>
       *关键文件列表
       * </pre>
       *
       * <code>repeated string keyFileList = 4;</code>
       */
      public int getKeyFileListCount() {
        return instance.getKeyFileListCount();
      }
      /**
       * <pre>
       *关键文件列表
       * </pre>
       *
       * <code>repeated string keyFileList = 4;</code>
       */
      public java.lang.String getKeyFileList(int index) {
        return instance.getKeyFileList(index);
      }
      /**
       * <pre>
       *关键文件列表
       * </pre>
       *
       * <code>repeated string keyFileList = 4;</code>
       */
      public com.google.protobuf.ByteString
          getKeyFileListBytes(int index) {
        return instance.getKeyFileListBytes(index);
      }
      /**
       * <pre>
       *关键文件列表
       * </pre>
       *
       * <code>repeated string keyFileList = 4;</code>
       */
      public Builder setKeyFileList(
          int index, java.lang.String value) {
        copyOnWrite();
        instance.setKeyFileList(index, value);
        return this;
      }
      /**
       * <pre>
       *关键文件列表
       * </pre>
       *
       * <code>repeated string keyFileList = 4;</code>
       */
      public Builder addKeyFileList(
          java.lang.String value) {
        copyOnWrite();
        instance.addKeyFileList(value);
        return this;
      }
      /**
       * <pre>
       *关键文件列表
       * </pre>
       *
       * <code>repeated string keyFileList = 4;</code>
       */
      public Builder addAllKeyFileList(
          java.lang.Iterable<java.lang.String> values) {
        copyOnWrite();
        instance.addAllKeyFileList(values);
        return this;
      }
      /**
       * <pre>
       *关键文件列表
       * </pre>
       *
       * <code>repeated string keyFileList = 4;</code>
       */
      public Builder clearKeyFileList() {
        copyOnWrite();
        instance.clearKeyFileList();
        return this;
      }
      /**
       * <pre>
       *关键文件列表
       * </pre>
       *
       * <code>repeated string keyFileList = 4;</code>
       */
      public Builder addKeyFileListBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.addKeyFileListBytes(value);
        return this;
      }

      /**
       * <pre>
       *ip-mac白名单
       * </pre>
       *
       * <code>repeated .IpMatchMac ipMacList = 5;</code>
       */
      public java.util.List<com.networkcollect.NetworkCollect.IpMatchMac> getIpMacListList() {
        return java.util.Collections.unmodifiableList(
            instance.getIpMacListList());
      }
      /**
       * <pre>
       *ip-mac白名单
       * </pre>
       *
       * <code>repeated .IpMatchMac ipMacList = 5;</code>
       */
      public int getIpMacListCount() {
        return instance.getIpMacListCount();
      }/**
       * <pre>
       *ip-mac白名单
       * </pre>
       *
       * <code>repeated .IpMatchMac ipMacList = 5;</code>
       */
      public com.networkcollect.NetworkCollect.IpMatchMac getIpMacList(int index) {
        return instance.getIpMacList(index);
      }
      /**
       * <pre>
       *ip-mac白名单
       * </pre>
       *
       * <code>repeated .IpMatchMac ipMacList = 5;</code>
       */
      public Builder setIpMacList(
          int index, com.networkcollect.NetworkCollect.IpMatchMac value) {
        copyOnWrite();
        instance.setIpMacList(index, value);
        return this;
      }
      /**
       * <pre>
       *ip-mac白名单
       * </pre>
       *
       * <code>repeated .IpMatchMac ipMacList = 5;</code>
       */
      public Builder setIpMacList(
          int index, com.networkcollect.NetworkCollect.IpMatchMac.Builder builderForValue) {
        copyOnWrite();
        instance.setIpMacList(index, builderForValue);
        return this;
      }
      /**
       * <pre>
       *ip-mac白名单
       * </pre>
       *
       * <code>repeated .IpMatchMac ipMacList = 5;</code>
       */
      public Builder addIpMacList(com.networkcollect.NetworkCollect.IpMatchMac value) {
        copyOnWrite();
        instance.addIpMacList(value);
        return this;
      }
      /**
       * <pre>
       *ip-mac白名单
       * </pre>
       *
       * <code>repeated .IpMatchMac ipMacList = 5;</code>
       */
      public Builder addIpMacList(
          int index, com.networkcollect.NetworkCollect.IpMatchMac value) {
        copyOnWrite();
        instance.addIpMacList(index, value);
        return this;
      }
      /**
       * <pre>
       *ip-mac白名单
       * </pre>
       *
       * <code>repeated .IpMatchMac ipMacList = 5;</code>
       */
      public Builder addIpMacList(
          com.networkcollect.NetworkCollect.IpMatchMac.Builder builderForValue) {
        copyOnWrite();
        instance.addIpMacList(builderForValue);
        return this;
      }
      /**
       * <pre>
       *ip-mac白名单
       * </pre>
       *
       * <code>repeated .IpMatchMac ipMacList = 5;</code>
       */
      public Builder addIpMacList(
          int index, com.networkcollect.NetworkCollect.IpMatchMac.Builder builderForValue) {
        copyOnWrite();
        instance.addIpMacList(index, builderForValue);
        return this;
      }
      /**
       * <pre>
       *ip-mac白名单
       * </pre>
       *
       * <code>repeated .IpMatchMac ipMacList = 5;</code>
       */
      public Builder addAllIpMacList(
          java.lang.Iterable<? extends com.networkcollect.NetworkCollect.IpMatchMac> values) {
        copyOnWrite();
        instance.addAllIpMacList(values);
        return this;
      }
      /**
       * <pre>
       *ip-mac白名单
       * </pre>
       *
       * <code>repeated .IpMatchMac ipMacList = 5;</code>
       */
      public Builder clearIpMacList() {
        copyOnWrite();
        instance.clearIpMacList();
        return this;
      }
      /**
       * <pre>
       *ip-mac白名单
       * </pre>
       *
       * <code>repeated .IpMatchMac ipMacList = 5;</code>
       */
      public Builder removeIpMacList(int index) {
        copyOnWrite();
        instance.removeIpMacList(index);
        return this;
      }

      /**
       * <pre>
       *通信对白名单
       * </pre>
       *
       * <code>repeated .CommunicationPair pairList = 6;</code>
       */
      public java.util.List<com.networkcollect.NetworkCollect.CommunicationPair> getPairListList() {
        return java.util.Collections.unmodifiableList(
            instance.getPairListList());
      }
      /**
       * <pre>
       *通信对白名单
       * </pre>
       *
       * <code>repeated .CommunicationPair pairList = 6;</code>
       */
      public int getPairListCount() {
        return instance.getPairListCount();
      }/**
       * <pre>
       *通信对白名单
       * </pre>
       *
       * <code>repeated .CommunicationPair pairList = 6;</code>
       */
      public com.networkcollect.NetworkCollect.CommunicationPair getPairList(int index) {
        return instance.getPairList(index);
      }
      /**
       * <pre>
       *通信对白名单
       * </pre>
       *
       * <code>repeated .CommunicationPair pairList = 6;</code>
       */
      public Builder setPairList(
          int index, com.networkcollect.NetworkCollect.CommunicationPair value) {
        copyOnWrite();
        instance.setPairList(index, value);
        return this;
      }
      /**
       * <pre>
       *通信对白名单
       * </pre>
       *
       * <code>repeated .CommunicationPair pairList = 6;</code>
       */
      public Builder setPairList(
          int index, com.networkcollect.NetworkCollect.CommunicationPair.Builder builderForValue) {
        copyOnWrite();
        instance.setPairList(index, builderForValue);
        return this;
      }
      /**
       * <pre>
       *通信对白名单
       * </pre>
       *
       * <code>repeated .CommunicationPair pairList = 6;</code>
       */
      public Builder addPairList(com.networkcollect.NetworkCollect.CommunicationPair value) {
        copyOnWrite();
        instance.addPairList(value);
        return this;
      }
      /**
       * <pre>
       *通信对白名单
       * </pre>
       *
       * <code>repeated .CommunicationPair pairList = 6;</code>
       */
      public Builder addPairList(
          int index, com.networkcollect.NetworkCollect.CommunicationPair value) {
        copyOnWrite();
        instance.addPairList(index, value);
        return this;
      }
      /**
       * <pre>
       *通信对白名单
       * </pre>
       *
       * <code>repeated .CommunicationPair pairList = 6;</code>
       */
      public Builder addPairList(
          com.networkcollect.NetworkCollect.CommunicationPair.Builder builderForValue) {
        copyOnWrite();
        instance.addPairList(builderForValue);
        return this;
      }
      /**
       * <pre>
       *通信对白名单
       * </pre>
       *
       * <code>repeated .CommunicationPair pairList = 6;</code>
       */
      public Builder addPairList(
          int index, com.networkcollect.NetworkCollect.CommunicationPair.Builder builderForValue) {
        copyOnWrite();
        instance.addPairList(index, builderForValue);
        return this;
      }
      /**
       * <pre>
       *通信对白名单
       * </pre>
       *
       * <code>repeated .CommunicationPair pairList = 6;</code>
       */
      public Builder addAllPairList(
          java.lang.Iterable<? extends com.networkcollect.NetworkCollect.CommunicationPair> values) {
        copyOnWrite();
        instance.addAllPairList(values);
        return this;
      }
      /**
       * <pre>
       *通信对白名单
       * </pre>
       *
       * <code>repeated .CommunicationPair pairList = 6;</code>
       */
      public Builder clearPairList() {
        copyOnWrite();
        instance.clearPairList();
        return this;
      }
      /**
       * <pre>
       *通信对白名单
       * </pre>
       *
       * <code>repeated .CommunicationPair pairList = 6;</code>
       */
      public Builder removePairList(int index) {
        copyOnWrite();
        instance.removePairList(index);
        return this;
      }

      /**
       * <pre>
       *采集数据
       * </pre>
       *
       * <code>string collectItem = 7;</code>
       */
      public java.lang.String getCollectItem() {
        return instance.getCollectItem();
      }
      /**
       * <pre>
       *采集数据
       * </pre>
       *
       * <code>string collectItem = 7;</code>
       */
      public com.google.protobuf.ByteString
          getCollectItemBytes() {
        return instance.getCollectItemBytes();
      }
      /**
       * <pre>
       *采集数据
       * </pre>
       *
       * <code>string collectItem = 7;</code>
       */
      public Builder setCollectItem(
          java.lang.String value) {
        copyOnWrite();
        instance.setCollectItem(value);
        return this;
      }
      /**
       * <pre>
       *采集数据
       * </pre>
       *
       * <code>string collectItem = 7;</code>
       */
      public Builder clearCollectItem() {
        copyOnWrite();
        instance.clearCollectItem();
        return this;
      }
      /**
       * <pre>
       *采集数据
       * </pre>
       *
       * <code>string collectItem = 7;</code>
       */
      public Builder setCollectItemBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setCollectItemBytes(value);
        return this;
      }

      /**
       * <pre>
       *告警阈值配置
       * </pre>
       *
       * <code>.Alarm_Threshold thresholdList = 8;</code>
       */
      public boolean hasThresholdList() {
        return instance.hasThresholdList();
      }
      /**
       * <pre>
       *告警阈值配置
       * </pre>
       *
       * <code>.Alarm_Threshold thresholdList = 8;</code>
       */
      public com.networkcollect.NetworkCollect.Alarm_Threshold getThresholdList() {
        return instance.getThresholdList();
      }
      /**
       * <pre>
       *告警阈值配置
       * </pre>
       *
       * <code>.Alarm_Threshold thresholdList = 8;</code>
       */
      public Builder setThresholdList(com.networkcollect.NetworkCollect.Alarm_Threshold value) {
        copyOnWrite();
        instance.setThresholdList(value);
        return this;
        }
      /**
       * <pre>
       *告警阈值配置
       * </pre>
       *
       * <code>.Alarm_Threshold thresholdList = 8;</code>
       */
      public Builder setThresholdList(
          com.networkcollect.NetworkCollect.Alarm_Threshold.Builder builderForValue) {
        copyOnWrite();
        instance.setThresholdList(builderForValue);
        return this;
      }
      /**
       * <pre>
       *告警阈值配置
       * </pre>
       *
       * <code>.Alarm_Threshold thresholdList = 8;</code>
       */
      public Builder mergeThresholdList(com.networkcollect.NetworkCollect.Alarm_Threshold value) {
        copyOnWrite();
        instance.mergeThresholdList(value);
        return this;
      }
      /**
       * <pre>
       *告警阈值配置
       * </pre>
       *
       * <code>.Alarm_Threshold thresholdList = 8;</code>
       */
      public Builder clearThresholdList() {  copyOnWrite();
        instance.clearThresholdList();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:RecvMainStationData)
    }
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.networkcollect.NetworkCollect.RecvMainStationData();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          keyFileList_.makeImmutable();
          ipMacList_.makeImmutable();
          pairList_.makeImmutable();
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.networkcollect.NetworkCollect.RecvMainStationData other = (com.networkcollect.NetworkCollect.RecvMainStationData) arg1;
          msgType_ = visitor.visitInt(msgType_ != 0, msgType_,    other.msgType_ != 0, other.msgType_);
          filePath_ = visitor.visitString(!filePath_.isEmpty(), filePath_,
              !other.filePath_.isEmpty(), other.filePath_);
          fileContent_ = visitor.visitString(!fileContent_.isEmpty(), fileContent_,
              !other.fileContent_.isEmpty(), other.fileContent_);
          keyFileList_= visitor.visitList(keyFileList_, other.keyFileList_);
          ipMacList_= visitor.visitList(ipMacList_, other.ipMacList_);
          pairList_= visitor.visitList(pairList_, other.pairList_);
          collectItem_ = visitor.visitString(!collectItem_.isEmpty(), collectItem_,
              !other.collectItem_.isEmpty(), other.collectItem_);
          thresholdList_ = visitor.visitMessage(thresholdList_, other.thresholdList_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!input.skipField(tag)) {
                    done = true;
                  }
                  break;
                }
                case 8: {
                  int rawValue = input.readEnum();

                  msgType_ = rawValue;
                  break;
                }
                case 18: {
                  String s = input.readStringRequireUtf8();

                  filePath_ = s;
                  break;
                }
                case 26: {
                  String s = input.readStringRequireUtf8();

                  fileContent_ = s;
                  break;
                }
                case 34: {
                  String s = input.readStringRequireUtf8();
                  if (!keyFileList_.isModifiable()) {
                    keyFileList_ =
                        com.google.protobuf.GeneratedMessageLite.mutableCopy(keyFileList_);
                  }
                  keyFileList_.add(s);
                  break;
                }
                case 42: {
                  if (!ipMacList_.isModifiable()) {
                    ipMacList_ =
                        com.google.protobuf.GeneratedMessageLite.mutableCopy(ipMacList_);
                  }
                  ipMacList_.add(
                      input.readMessage(com.networkcollect.NetworkCollect.IpMatchMac.parser(), extensionRegistry));
                  break;
                }
                case 50: {
                  if (!pairList_.isModifiable()) {
                    pairList_ =
                        com.google.protobuf.GeneratedMessageLite.mutableCopy(pairList_);
                  }
                  pairList_.add(
                      input.readMessage(com.networkcollect.NetworkCollect.CommunicationPair.parser(), extensionRegistry));
                  break;
                }
                case 58: {
                  String s = input.readStringRequireUtf8();

                  collectItem_ = s;
                  break;
                }
                case 66: {
                  com.networkcollect.NetworkCollect.Alarm_Threshold.Builder subBuilder = null;
                  if (thresholdList_ != null) {
                    subBuilder = thresholdList_.toBuilder();
                  }
                  thresholdList_ = input.readMessage(com.networkcollect.NetworkCollect.Alarm_Threshold.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(thresholdList_);
                    thresholdList_ = subBuilder.buildPartial();
                  }

                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (com.networkcollect.NetworkCollect.RecvMainStationData.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:RecvMainStationData)
    private static final com.networkcollect.NetworkCollect.RecvMainStationData DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new RecvMainStationData();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static com.networkcollect.NetworkCollect.RecvMainStationData getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<RecvMainStationData> PARSER;

    public static com.google.protobuf.Parser<RecvMainStationData> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface HeartBeatMessageOrBuilder extends
      // @@protoc_insertion_point(interface_extends:HeartBeatMessage)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     *通道名称
     * </pre>
     *
     * <code>string channelName = 1;</code>
     */
    java.lang.String getChannelName();
    /**
     * <pre>
     *通道名称
     * </pre>
     *
     * <code>string channelName = 1;</code>
     */
    com.google.protobuf.ByteString
        getChannelNameBytes();

    /**
     * <pre>
     *心跳时间(秒)              
     * </pre>
     *
     * <code>int32 time = 2;</code>
     */
    int getTime();
  }
  /**
   * <pre>
   *心跳消息
   * </pre>
   *
   * Protobuf type {@code HeartBeatMessage}
   */
  public  static final class HeartBeatMessage extends
      com.google.protobuf.GeneratedMessageLite<
          HeartBeatMessage, HeartBeatMessage.Builder> implements
      // @@protoc_insertion_point(message_implements:HeartBeatMessage)
      HeartBeatMessageOrBuilder {
    private HeartBeatMessage() {
      channelName_ = "";
    }
    public static final int CHANNELNAME_FIELD_NUMBER = 1;
    private java.lang.String channelName_;
    /**
     * <pre>
     *通道名称
     * </pre>
     *
     * <code>string channelName = 1;</code>
     */
    public java.lang.String getChannelName() {
      return channelName_;
    }
    /**
     * <pre>
     *通道名称
     * </pre>
     *
     * <code>string channelName = 1;</code>
     */
    public com.google.protobuf.ByteString
        getChannelNameBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(channelName_);
    }
    /**
     * <pre>
     *通道名称
     * </pre>
     *
     * <code>string channelName = 1;</code>
     */
    private void setChannelName(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      channelName_ = value;
    }
    /**
     * <pre>
     *通道名称
     * </pre>
     *
     * <code>string channelName = 1;</code>
     */
    private void clearChannelName() {
      
      channelName_ = getDefaultInstance().getChannelName();
    }
    /**
     * <pre>
     *通道名称
     * </pre>
     *
     * <code>string channelName = 1;</code>
     */
    private void setChannelNameBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      channelName_ = value.toStringUtf8();
    }

    public static final int TIME_FIELD_NUMBER = 2;
    private int time_;
    /**
     * <pre>
     *心跳时间(秒)              
     * </pre>
     *
     * <code>int32 time = 2;</code>
     */
    public int getTime() {
      return time_;
    }
    /**
     * <pre>
     *心跳时间(秒)              
     * </pre>
     *
     * <code>int32 time = 2;</code>
     */
    private void setTime(int value) {
      
      time_ = value;
    }
    /**
     * <pre>
     *心跳时间(秒)              
     * </pre>
     *
     * <code>int32 time = 2;</code>
     */
    private void clearTime() {
      
      time_ = 0;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!channelName_.isEmpty()) {
        output.writeString(1, getChannelName());
      }
      if (time_ != 0) {
        output.writeInt32(2, time_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (!channelName_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getChannelName());
      }
      if (time_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, time_);
      }
      memoizedSerializedSize = size;
      return size;
    }

    public static com.networkcollect.NetworkCollect.HeartBeatMessage parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.networkcollect.NetworkCollect.HeartBeatMessage parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.networkcollect.NetworkCollect.HeartBeatMessage parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.networkcollect.NetworkCollect.HeartBeatMessage parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.networkcollect.NetworkCollect.HeartBeatMessage parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.networkcollect.NetworkCollect.HeartBeatMessage parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.networkcollect.NetworkCollect.HeartBeatMessage parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.networkcollect.NetworkCollect.HeartBeatMessage parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.networkcollect.NetworkCollect.HeartBeatMessage parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.networkcollect.NetworkCollect.HeartBeatMessage parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.networkcollect.NetworkCollect.HeartBeatMessage parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.networkcollect.NetworkCollect.HeartBeatMessage parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.networkcollect.NetworkCollect.HeartBeatMessage prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * <pre>
     *心跳消息
     * </pre>
     *
     * Protobuf type {@code HeartBeatMessage}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.networkcollect.NetworkCollect.HeartBeatMessage, Builder> implements
        // @@protoc_insertion_point(builder_implements:HeartBeatMessage)
        com.networkcollect.NetworkCollect.HeartBeatMessageOrBuilder {
      // Construct using com.networkcollect.NetworkCollect.HeartBeatMessage.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       *通道名称
       * </pre>
       *
       * <code>string channelName = 1;</code>
       */
      public java.lang.String getChannelName() {
        return instance.getChannelName();
      }
      /**
       * <pre>
       *通道名称
       * </pre>
       *
       * <code>string channelName = 1;</code>
       */
      public com.google.protobuf.ByteString
          getChannelNameBytes() {
        return instance.getChannelNameBytes();
      }
      /**
       * <pre>
       *通道名称
       * </pre>
       *
       * <code>string channelName = 1;</code>
       */
      public Builder setChannelName(
          java.lang.String value) {
        copyOnWrite();
        instance.setChannelName(value);
        return this;
      }
      /**
       * <pre>
       *通道名称
       * </pre>
       *
       * <code>string channelName = 1;</code>
       */
      public Builder clearChannelName() {
        copyOnWrite();
        instance.clearChannelName();
        return this;
      }
      /**
       * <pre>
       *通道名称
       * </pre>
       *
       * <code>string channelName = 1;</code>
       */
      public Builder setChannelNameBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setChannelNameBytes(value);
        return this;
      }

      /**
       * <pre>
       *心跳时间(秒)              
       * </pre>
       *
       * <code>int32 time = 2;</code>
       */
      public int getTime() {
        return instance.getTime();
      }
      /**
       * <pre>
       *心跳时间(秒)              
       * </pre>
       *
       * <code>int32 time = 2;</code>
       */
      public Builder setTime(int value) {
        copyOnWrite();
        instance.setTime(value);
        return this;
      }
      /**
       * <pre>
       *心跳时间(秒)              
       * </pre>
       *
       * <code>int32 time = 2;</code>
       */
      public Builder clearTime() {
        copyOnWrite();
        instance.clearTime();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:HeartBeatMessage)
    }
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.networkcollect.NetworkCollect.HeartBeatMessage();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.networkcollect.NetworkCollect.HeartBeatMessage other = (com.networkcollect.NetworkCollect.HeartBeatMessage) arg1;
          channelName_ = visitor.visitString(!channelName_.isEmpty(), channelName_,
              !other.channelName_.isEmpty(), other.channelName_);
          time_ = visitor.visitInt(time_ != 0, time_,
              other.time_ != 0, other.time_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!input.skipField(tag)) {
                    done = true;
                  }
                  break;
                }
                case 10: {
                  String s = input.readStringRequireUtf8();

                  channelName_ = s;
                  break;
                }
                case 16: {

                  time_ = input.readInt32();
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (com.networkcollect.NetworkCollect.HeartBeatMessage.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:HeartBeatMessage)
    private static final com.networkcollect.NetworkCollect.HeartBeatMessage DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new HeartBeatMessage();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static com.networkcollect.NetworkCollect.HeartBeatMessage getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<HeartBeatMessage> PARSER;

    public static com.google.protobuf.Parser<HeartBeatMessage> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface ProcessCtrlOrBuilder extends
      // @@protoc_insertion_point(interface_extends:ProcessCtrl)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     *通道名称(AllProcess--所有的采集程序)
     * </pre>
     *
     * <code>string channelName = 1;</code>
     */
    java.lang.String getChannelName();
    /**
     * <pre>
     *通道名称(AllProcess--所有的采集程序)
     * </pre>
     *
     * <code>string channelName = 1;</code>
     */
    com.google.protobuf.ByteString
        getChannelNameBytes();

    /**
     * <pre>
     *控制命令
     * </pre>
     *
     * <code>.ProcessCmdType command = 2;</code>
     */
    int getCommandValue();
    /**
     * <pre>
     *控制命令
     * </pre>
     *
     * <code>.ProcessCmdType command = 2;</code>
     */
    com.networkcollect.NetworkCollect.ProcessCmdType getCommand();
  }
  /**
   * <pre>
   *进程控制
   * </pre>
   *
   * Protobuf type {@code ProcessCtrl}
   */
  public  static final class ProcessCtrl extends
      com.google.protobuf.GeneratedMessageLite<
          ProcessCtrl, ProcessCtrl.Builder> implements
      // @@protoc_insertion_point(message_implements:ProcessCtrl)
      ProcessCtrlOrBuilder {
    private ProcessCtrl() {
      channelName_ = "";
    }
    public static final int CHANNELNAME_FIELD_NUMBER = 1;
    private java.lang.String channelName_;
    /**
     * <pre>
     *通道名称(AllProcess--所有的采集程序)
     * </pre>
     *
     * <code>string channelName = 1;</code>
     */
    public java.lang.String getChannelName() {
      return channelName_;
    }
    /**
     * <pre>
     *通道名称(AllProcess--所有的采集程序)
     * </pre>
     *
     * <code>string channelName = 1;</code>
     */
    public com.google.protobuf.ByteString
        getChannelNameBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(channelName_);
    }
    /**
     * <pre>
     *通道名称(AllProcess--所有的采集程序)
     * </pre>
     *
     * <code>string channelName = 1;</code>
     */
    private void setChannelName(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      channelName_ = value;
    }
    /**
     * <pre>
     *通道名称(AllProcess--所有的采集程序)
     * </pre>
     *
     * <code>string channelName = 1;</code>
     */
    private void clearChannelName() {
      
      channelName_ = getDefaultInstance().getChannelName();
    }
    /**
     * <pre>
     *通道名称(AllProcess--所有的采集程序)
     * </pre>
     *
     * <code>string channelName = 1;</code>
     */
    private void setChannelNameBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      channelName_ = value.toStringUtf8();
    }

    public static final int COMMAND_FIELD_NUMBER = 2;
    private int command_;
    /**
     * <pre>
     *控制命令
     * </pre>
     *
     * <code>.ProcessCmdType command = 2;</code>
     */
    public int getCommandValue() {
      return command_;
    }
    /**
     * <pre>
     *控制命令
     * </pre>
     *
     * <code>.ProcessCmdType command = 2;</code>
     */
    public com.networkcollect.NetworkCollect.ProcessCmdType getCommand() {
      com.networkcollect.NetworkCollect.ProcessCmdType result = com.networkcollect.NetworkCollect.ProcessCmdType.forNumber(command_);
      return result == null ? com.networkcollect.NetworkCollect.ProcessCmdType.UNRECOGNIZED : result;
    }
    /**
     * <pre>
     *控制命令
     * </pre>
     *
     * <code>.ProcessCmdType command = 2;</code>
     */
    private void setCommandValue(int value) {
        command_ = value;
    }
    /**
     * <pre>
     *控制命令
     * </pre>
     *
     * <code>.ProcessCmdType command = 2;</code>
     */
    private void setCommand(com.networkcollect.NetworkCollect.ProcessCmdType value) {
      if (value == null) {
        throw new NullPointerException();
      }
      
      command_ = value.getNumber();
    }
    /**
     * <pre>
     *控制命令
     * </pre>
     *
     * <code>.ProcessCmdType command = 2;</code>
     */
    private void clearCommand() {
      
      command_ = 0;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!channelName_.isEmpty()) {
        output.writeString(1, getChannelName());
      }
      if (command_ != com.networkcollect.NetworkCollect.ProcessCmdType.PROCESS_INVALID.getNumber()) {
        output.writeEnum(2, command_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (!channelName_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getChannelName());
      }
      if (command_ != com.networkcollect.NetworkCollect.ProcessCmdType.PROCESS_INVALID.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, command_);
      }
      memoizedSerializedSize = size;
      return size;
    }

    public static com.networkcollect.NetworkCollect.ProcessCtrl parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.networkcollect.NetworkCollect.ProcessCtrl parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.networkcollect.NetworkCollect.ProcessCtrl parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.networkcollect.NetworkCollect.ProcessCtrl parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.networkcollect.NetworkCollect.ProcessCtrl parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.networkcollect.NetworkCollect.ProcessCtrl parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.networkcollect.NetworkCollect.ProcessCtrl parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.networkcollect.NetworkCollect.ProcessCtrl parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.networkcollect.NetworkCollect.ProcessCtrl parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.networkcollect.NetworkCollect.ProcessCtrl parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.networkcollect.NetworkCollect.ProcessCtrl parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.networkcollect.NetworkCollect.ProcessCtrl parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.networkcollect.NetworkCollect.ProcessCtrl prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * <pre>
     *进程控制
     * </pre>
     *
     * Protobuf type {@code ProcessCtrl}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.networkcollect.NetworkCollect.ProcessCtrl, Builder> implements
        // @@protoc_insertion_point(builder_implements:ProcessCtrl)
        com.networkcollect.NetworkCollect.ProcessCtrlOrBuilder {
      // Construct using com.networkcollect.NetworkCollect.ProcessCtrl.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       *通道名称(AllProcess--所有的采集程序)
       * </pre>
       *
       * <code>string channelName = 1;</code>
       */
      public java.lang.String getChannelName() {
        return instance.getChannelName();
      }
      /**
       * <pre>
       *通道名称(AllProcess--所有的采集程序)
       * </pre>
       *
       * <code>string channelName = 1;</code>
       */
      public com.google.protobuf.ByteString
          getChannelNameBytes() {
        return instance.getChannelNameBytes();
      }
      /**
       * <pre>
       *通道名称(AllProcess--所有的采集程序)
       * </pre>
       *
       * <code>string channelName = 1;</code>
       */
      public Builder setChannelName(
          java.lang.String value) {
        copyOnWrite();
        instance.setChannelName(value);
        return this;
      }
      /**
       * <pre>
       *通道名称(AllProcess--所有的采集程序)
       * </pre>
       *
       * <code>string channelName = 1;</code>
       */
      public Builder clearChannelName() {
        copyOnWrite();
        instance.clearChannelName();
        return this;
      }
      /**
       * <pre>
       *通道名称(AllProcess--所有的采集程序)
       * </pre>
       *
       * <code>string channelName = 1;</code>
       */
      public Builder setChannelNameBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setChannelNameBytes(value);
        return this;
      }

      /**
       * <pre>
       *控制命令
       * </pre>
       *
       * <code>.ProcessCmdType command = 2;</code>
       */
      public int getCommandValue() {
        return instance.getCommandValue();
      }
      /**
       * <pre>
       *控制命令
       * </pre>
       *
       * <code>.ProcessCmdType command = 2;</code>
       */
      public Builder setCommandValue(int value) {
        copyOnWrite();
        instance.setCommandValue(value);
        return this;
      }
      /**
       * <pre>
       *控制命令
       * </pre>
       *
       * <code>.ProcessCmdType command = 2;</code>
       */
      public com.networkcollect.NetworkCollect.ProcessCmdType getCommand() {
        return instance.getCommand();
      }
      /**
       * <pre>
       *控制命令
       * </pre>
       *
       * <code>.ProcessCmdType command = 2;</code>
       */
      public Builder setCommand(com.networkcollect.NetworkCollect.ProcessCmdType value) {
        copyOnWrite();
        instance.setCommand(value);
        return this;
      }
      /**
       * <pre>
       *控制命令
       * </pre>
       *
       * <code>.ProcessCmdType command = 2;</code>
       */
      public Builder clearCommand() {
        copyOnWrite();
        instance.clearCommand();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:ProcessCtrl)
    }
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.networkcollect.NetworkCollect.ProcessCtrl();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.networkcollect.NetworkCollect.ProcessCtrl other = (com.networkcollect.NetworkCollect.ProcessCtrl) arg1;
          channelName_ = visitor.visitString(!channelName_.isEmpty(), channelName_,
              !other.channelName_.isEmpty(), other.channelName_);
          command_ = visitor.visitInt(command_ != 0, command_,    other.command_ != 0, other.command_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!input.skipField(tag)) {
                    done = true;
                  }
                  break;
                }
                case 10: {
                  String s = input.readStringRequireUtf8();

                  channelName_ = s;
                  break;
                }
                case 16: {
                  int rawValue = input.readEnum();

                  command_ = rawValue;
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (com.networkcollect.NetworkCollect.ProcessCtrl.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:ProcessCtrl)
    private static final com.networkcollect.NetworkCollect.ProcessCtrl DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new ProcessCtrl();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static com.networkcollect.NetworkCollect.ProcessCtrl getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<ProcessCtrl> PARSER;

    public static com.google.protobuf.Parser<ProcessCtrl> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface UnknownAssetOrBuilder extends
      // @@protoc_insertion_point(interface_extends:UnknownAsset)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     *资产信息LID
     * </pre>
     *
     * <code>string lid = 1;</code>
     */
    java.lang.String getLid();
    /**
     * <pre>
     *资产信息LID
     * </pre>
     *
     * <code>string lid = 1;</code>
     */
    com.google.protobuf.ByteString
        getLidBytes();

    /**
     * <pre>
     *ip地址
     * </pre>
     *
     * <code>string ipAddr = 2;</code>
     */
    java.lang.String getIpAddr();
    /**
     * <pre>
     *ip地址
     * </pre>
     *
     * <code>string ipAddr = 2;</code>
     */
    com.google.protobuf.ByteString
        getIpAddrBytes();

    /**
     * <pre>
     *设备来源
     * </pre>
     *
     * <code>.DeviceSource source = 3;</code>
     */
    int getSourceValue();
    /**
     * <pre>
     *设备来源
     * </pre>
     *
     * <code>.DeviceSource source = 3;</code>
     */
    com.networkcollect.NetworkCollect.DeviceSource getSource();
  }
  /**
   * Protobuf type {@code UnknownAsset}
   */
  public  static final class UnknownAsset extends
      com.google.protobuf.GeneratedMessageLite<
          UnknownAsset, UnknownAsset.Builder> implements
      // @@protoc_insertion_point(message_implements:UnknownAsset)
      UnknownAssetOrBuilder {
    private UnknownAsset() {
      lid_ = "";
      ipAddr_ = "";
    }
    public static final int LID_FIELD_NUMBER = 1;
    private java.lang.String lid_;
    /**
     * <pre>
     *资产信息LID
     * </pre>
     *
     * <code>string lid = 1;</code>
     */
    public java.lang.String getLid() {
      return lid_;
    }
    /**
     * <pre>
     *资产信息LID
     * </pre>
     *
     * <code>string lid = 1;</code>
     */
    public com.google.protobuf.ByteString
        getLidBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(lid_);
    }
    /**
     * <pre>
     *资产信息LID
     * </pre>
     *
     * <code>string lid = 1;</code>
     */
    private void setLid(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      lid_ = value;
    }
    /**
     * <pre>
     *资产信息LID
     * </pre>
     *
     * <code>string lid = 1;</code>
     */
    private void clearLid() {
      
      lid_ = getDefaultInstance().getLid();
    }
    /**
     * <pre>
     *资产信息LID
     * </pre>
     *
     * <code>string lid = 1;</code>
     */
    private void setLidBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      lid_ = value.toStringUtf8();
    }

    public static final int IPADDR_FIELD_NUMBER = 2;
    private java.lang.String ipAddr_;
    /**
     * <pre>
     *ip地址
     * </pre>
     *
     * <code>string ipAddr = 2;</code>
     */
    public java.lang.String getIpAddr() {
      return ipAddr_;
    }
    /**
     * <pre>
     *ip地址
     * </pre>
     *
     * <code>string ipAddr = 2;</code>
     */
    public com.google.protobuf.ByteString
        getIpAddrBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(ipAddr_);
    }
    /**
     * <pre>
     *ip地址
     * </pre>
     *
     * <code>string ipAddr = 2;</code>
     */
    private void setIpAddr(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      ipAddr_ = value;
    }
    /**
     * <pre>
     *ip地址
     * </pre>
     *
     * <code>string ipAddr = 2;</code>
     */
    private void clearIpAddr() {
      
      ipAddr_ = getDefaultInstance().getIpAddr();
    }
    /**
     * <pre>
     *ip地址
     * </pre>
     *
     * <code>string ipAddr = 2;</code>
     */
    private void setIpAddrBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      ipAddr_ = value.toStringUtf8();
    }

    public static final int SOURCE_FIELD_NUMBER = 3;
    private int source_;
    /**
     * <pre>
     *设备来源
     * </pre>
     *
     * <code>.DeviceSource source = 3;</code>
     */
    public int getSourceValue() {
      return source_;
    }
    /**
     * <pre>
     *设备来源
     * </pre>
     *
     * <code>.DeviceSource source = 3;</code>
     */
    public com.networkcollect.NetworkCollect.DeviceSource getSource() {
      com.networkcollect.NetworkCollect.DeviceSource result = com.networkcollect.NetworkCollect.DeviceSource.forNumber(source_);
      return result == null ? com.networkcollect.NetworkCollect.DeviceSource.UNRECOGNIZED : result;
    }
    /**
     * <pre>
     *设备来源
     * </pre>
     *
     * <code>.DeviceSource source = 3;</code>
     */
    private void setSourceValue(int value) {
        source_ = value;
    }
    /**
     * <pre>
     *设备来源
     * </pre>
     *
     * <code>.DeviceSource source = 3;</code>
     */
    private void setSource(com.networkcollect.NetworkCollect.DeviceSource value) {
      if (value == null) {
        throw new NullPointerException();
      }
      
      source_ = value.getNumber();
    }
    /**
     * <pre>
     *设备来源
     * </pre>
     *
     * <code>.DeviceSource source = 3;</code>
     */
    private void clearSource() {
      
      source_ = 0;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!lid_.isEmpty()) {
        output.writeString(1, getLid());
      }
      if (!ipAddr_.isEmpty()) {
        output.writeString(2, getIpAddr());
      }
      if (source_ != com.networkcollect.NetworkCollect.DeviceSource.DS_INVALID.getNumber()) {
        output.writeEnum(3, source_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (!lid_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getLid());
      }
      if (!ipAddr_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(2, getIpAddr());
      }
      if (source_ != com.networkcollect.NetworkCollect.DeviceSource.DS_INVALID.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(3, source_);
      }
      memoizedSerializedSize = size;
      return size;
    }

    public static com.networkcollect.NetworkCollect.UnknownAsset parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.networkcollect.NetworkCollect.UnknownAsset parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.networkcollect.NetworkCollect.UnknownAsset parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.networkcollect.NetworkCollect.UnknownAsset parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.networkcollect.NetworkCollect.UnknownAsset parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.networkcollect.NetworkCollect.UnknownAsset parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.networkcollect.NetworkCollect.UnknownAsset parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.networkcollect.NetworkCollect.UnknownAsset parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.networkcollect.NetworkCollect.UnknownAsset parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.networkcollect.NetworkCollect.UnknownAsset parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.networkcollect.NetworkCollect.UnknownAsset parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.networkcollect.NetworkCollect.UnknownAsset parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.networkcollect.NetworkCollect.UnknownAsset prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code UnknownAsset}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.networkcollect.NetworkCollect.UnknownAsset, Builder> implements
        // @@protoc_insertion_point(builder_implements:UnknownAsset)
        com.networkcollect.NetworkCollect.UnknownAssetOrBuilder {
      // Construct using com.networkcollect.NetworkCollect.UnknownAsset.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       *资产信息LID
       * </pre>
       *
       * <code>string lid = 1;</code>
       */
      public java.lang.String getLid() {
        return instance.getLid();
      }
      /**
       * <pre>
       *资产信息LID
       * </pre>
       *
       * <code>string lid = 1;</code>
       */
      public com.google.protobuf.ByteString
          getLidBytes() {
        return instance.getLidBytes();
      }
      /**
       * <pre>
       *资产信息LID
       * </pre>
       *
       * <code>string lid = 1;</code>
       */
      public Builder setLid(
          java.lang.String value) {
        copyOnWrite();
        instance.setLid(value);
        return this;
      }
      /**
       * <pre>
       *资产信息LID
       * </pre>
       *
       * <code>string lid = 1;</code>
       */
      public Builder clearLid() {
        copyOnWrite();
        instance.clearLid();
        return this;
      }
      /**
       * <pre>
       *资产信息LID
       * </pre>
       *
       * <code>string lid = 1;</code>
       */
      public Builder setLidBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setLidBytes(value);
        return this;
      }

      /**
       * <pre>
       *ip地址
       * </pre>
       *
       * <code>string ipAddr = 2;</code>
       */
      public java.lang.String getIpAddr() {
        return instance.getIpAddr();
      }
      /**
       * <pre>
       *ip地址
       * </pre>
       *
       * <code>string ipAddr = 2;</code>
       */
      public com.google.protobuf.ByteString
          getIpAddrBytes() {
        return instance.getIpAddrBytes();
      }
      /**
       * <pre>
       *ip地址
       * </pre>
       *
       * <code>string ipAddr = 2;</code>
       */
      public Builder setIpAddr(
          java.lang.String value) {
        copyOnWrite();
        instance.setIpAddr(value);
        return this;
      }
      /**
       * <pre>
       *ip地址
       * </pre>
       *
       * <code>string ipAddr = 2;</code>
       */
      public Builder clearIpAddr() {
        copyOnWrite();
        instance.clearIpAddr();
        return this;
      }
      /**
       * <pre>
       *ip地址
       * </pre>
       *
       * <code>string ipAddr = 2;</code>
       */
      public Builder setIpAddrBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setIpAddrBytes(value);
        return this;
      }

      /**
       * <pre>
       *设备来源
       * </pre>
       *
       * <code>.DeviceSource source = 3;</code>
       */
      public int getSourceValue() {
        return instance.getSourceValue();
      }
      /**
       * <pre>
       *设备来源
       * </pre>
       *
       * <code>.DeviceSource source = 3;</code>
       */
      public Builder setSourceValue(int value) {
        copyOnWrite();
        instance.setSourceValue(value);
        return this;
      }
      /**
       * <pre>
       *设备来源
       * </pre>
       *
       * <code>.DeviceSource source = 3;</code>
       */
      public com.networkcollect.NetworkCollect.DeviceSource getSource() {
        return instance.getSource();
      }
      /**
       * <pre>
       *设备来源
       * </pre>
       *
       * <code>.DeviceSource source = 3;</code>
       */
      public Builder setSource(com.networkcollect.NetworkCollect.DeviceSource value) {
        copyOnWrite();
        instance.setSource(value);
        return this;
      }
      /**
       * <pre>
       *设备来源
       * </pre>
       *
       * <code>.DeviceSource source = 3;</code>
       */
      public Builder clearSource() {
        copyOnWrite();
        instance.clearSource();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:UnknownAsset)
    }
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.networkcollect.NetworkCollect.UnknownAsset();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.networkcollect.NetworkCollect.UnknownAsset other = (com.networkcollect.NetworkCollect.UnknownAsset) arg1;
          lid_ = visitor.visitString(!lid_.isEmpty(), lid_,
              !other.lid_.isEmpty(), other.lid_);
          ipAddr_ = visitor.visitString(!ipAddr_.isEmpty(), ipAddr_,
              !other.ipAddr_.isEmpty(), other.ipAddr_);
          source_ = visitor.visitInt(source_ != 0, source_,    other.source_ != 0, other.source_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!input.skipField(tag)) {
                    done = true;
                  }
                  break;
                }
                case 10: {
                  String s = input.readStringRequireUtf8();

                  lid_ = s;
                  break;
                }
                case 18: {
                  String s = input.readStringRequireUtf8();

                  ipAddr_ = s;
                  break;
                }
                case 24: {
                  int rawValue = input.readEnum();

                  source_ = rawValue;
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (com.networkcollect.NetworkCollect.UnknownAsset.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:UnknownAsset)
    private static final com.networkcollect.NetworkCollect.UnknownAsset DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new UnknownAsset();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static com.networkcollect.NetworkCollect.UnknownAsset getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<UnknownAsset> PARSER;

    public static com.google.protobuf.Parser<UnknownAsset> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface IpInfoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:IpInfo)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     *ip地址
     * </pre>
     *
     * <code>string ipAddr = 1;</code>
     */
    java.lang.String getIpAddr();
    /**
     * <pre>
     *ip地址
     * </pre>
     *
     * <code>string ipAddr = 1;</code>
     */
    com.google.protobuf.ByteString
        getIpAddrBytes();

    /**
     * <pre>
     *子网掩码
     * </pre>
     *
     * <code>string netMask = 2;</code>
     */
    java.lang.String getNetMask();
    /**
     * <pre>
     *子网掩码
     * </pre>
     *
     * <code>string netMask = 2;</code>
     */
    com.google.protobuf.ByteString
        getNetMaskBytes();

    /**
     * <pre>
     *默认网关
     * </pre>
     *
     * <code>string gateway = 3;</code>
     */
    java.lang.String getGateway();
    /**
     * <pre>
     *默认网关
     * </pre>
     *
     * <code>string gateway = 3;</code>
     */
    com.google.protobuf.ByteString
        getGatewayBytes();

    /**
     * <pre>
     *编号
     * </pre>
     *
     * <code>string orderNo = 4;</code>
     */
    java.lang.String getOrderNo();
    /**
     * <pre>
     *编号
     * </pre>
     *
     * <code>string orderNo = 4;</code>
     */
    com.google.protobuf.ByteString
        getOrderNoBytes();
  }
  /**
   * <pre>
   *ip地址信息
   * </pre>
   *
   * Protobuf type {@code IpInfo}
   */
  public  static final class IpInfo extends
      com.google.protobuf.GeneratedMessageLite<
          IpInfo, IpInfo.Builder> implements
      // @@protoc_insertion_point(message_implements:IpInfo)
      IpInfoOrBuilder {
    private IpInfo() {
      ipAddr_ = "";
      netMask_ = "";
      gateway_ = "";
      orderNo_ = "";
    }
    public static final int IPADDR_FIELD_NUMBER = 1;
    private java.lang.String ipAddr_;
    /**
     * <pre>
     *ip地址
     * </pre>
     *
     * <code>string ipAddr = 1;</code>
     */
    public java.lang.String getIpAddr() {
      return ipAddr_;
    }
    /**
     * <pre>
     *ip地址
     * </pre>
     *
     * <code>string ipAddr = 1;</code>
     */
    public com.google.protobuf.ByteString
        getIpAddrBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(ipAddr_);
    }
    /**
     * <pre>
     *ip地址
     * </pre>
     *
     * <code>string ipAddr = 1;</code>
     */
    private void setIpAddr(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      ipAddr_ = value;
    }
    /**
     * <pre>
     *ip地址
     * </pre>
     *
     * <code>string ipAddr = 1;</code>
     */
    private void clearIpAddr() {
      
      ipAddr_ = getDefaultInstance().getIpAddr();
    }
    /**
     * <pre>
     *ip地址
     * </pre>
     *
     * <code>string ipAddr = 1;</code>
     */
    private void setIpAddrBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      ipAddr_ = value.toStringUtf8();
    }

    public static final int NETMASK_FIELD_NUMBER = 2;
    private java.lang.String netMask_;
    /**
     * <pre>
     *子网掩码
     * </pre>
     *
     * <code>string netMask = 2;</code>
     */
    public java.lang.String getNetMask() {
      return netMask_;
    }
    /**
     * <pre>
     *子网掩码
     * </pre>
     *
     * <code>string netMask = 2;</code>
     */
    public com.google.protobuf.ByteString
        getNetMaskBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(netMask_);
    }
    /**
     * <pre>
     *子网掩码
     * </pre>
     *
     * <code>string netMask = 2;</code>
     */
    private void setNetMask(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      netMask_ = value;
    }
    /**
     * <pre>
     *子网掩码
     * </pre>
     *
     * <code>string netMask = 2;</code>
     */
    private void clearNetMask() {
      
      netMask_ = getDefaultInstance().getNetMask();
    }
    /**
     * <pre>
     *子网掩码
     * </pre>
     *
     * <code>string netMask = 2;</code>
     */
    private void setNetMaskBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      netMask_ = value.toStringUtf8();
    }

    public static final int GATEWAY_FIELD_NUMBER = 3;
    private java.lang.String gateway_;
    /**
     * <pre>
     *默认网关
     * </pre>
     *
     * <code>string gateway = 3;</code>
     */
    public java.lang.String getGateway() {
      return gateway_;
    }
    /**
     * <pre>
     *默认网关
     * </pre>
     *
     * <code>string gateway = 3;</code>
     */
    public com.google.protobuf.ByteString
        getGatewayBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(gateway_);
    }
    /**
     * <pre>
     *默认网关
     * </pre>
     *
     * <code>string gateway = 3;</code>
     */
    private void setGateway(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      gateway_ = value;
    }
    /**
     * <pre>
     *默认网关
     * </pre>
     *
     * <code>string gateway = 3;</code>
     */
    private void clearGateway() {
      
      gateway_ = getDefaultInstance().getGateway();
    }
    /**
     * <pre>
     *默认网关
     * </pre>
     *
     * <code>string gateway = 3;</code>
     */
    private void setGatewayBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      gateway_ = value.toStringUtf8();
    }

    public static final int ORDERNO_FIELD_NUMBER = 4;
    private java.lang.String orderNo_;
    /**
     * <pre>
     *编号
     * </pre>
     *
     * <code>string orderNo = 4;</code>
     */
    public java.lang.String getOrderNo() {
      return orderNo_;
    }
    /**
     * <pre>
     *编号
     * </pre>
     *
     * <code>string orderNo = 4;</code>
     */
    public com.google.protobuf.ByteString
        getOrderNoBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(orderNo_);
    }
    /**
     * <pre>
     *编号
     * </pre>
     *
     * <code>string orderNo = 4;</code>
     */
    private void setOrderNo(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      orderNo_ = value;
    }
    /**
     * <pre>
     *编号
     * </pre>
     *
     * <code>string orderNo = 4;</code>
     */
    private void clearOrderNo() {
      
      orderNo_ = getDefaultInstance().getOrderNo();
    }
    /**
     * <pre>
     *编号
     * </pre>
     *
     * <code>string orderNo = 4;</code>
     */
    private void setOrderNoBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      orderNo_ = value.toStringUtf8();
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!ipAddr_.isEmpty()) {
        output.writeString(1, getIpAddr());
      }
      if (!netMask_.isEmpty()) {
        output.writeString(2, getNetMask());
      }
      if (!gateway_.isEmpty()) {
        output.writeString(3, getGateway());
      }
      if (!orderNo_.isEmpty()) {
        output.writeString(4, getOrderNo());
      }
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (!ipAddr_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getIpAddr());
      }
      if (!netMask_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(2, getNetMask());
      }
      if (!gateway_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(3, getGateway());
      }
      if (!orderNo_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(4, getOrderNo());
      }
      memoizedSerializedSize = size;
      return size;
    }

    public static com.networkcollect.NetworkCollect.IpInfo parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.networkcollect.NetworkCollect.IpInfo parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.networkcollect.NetworkCollect.IpInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.networkcollect.NetworkCollect.IpInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.networkcollect.NetworkCollect.IpInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.networkcollect.NetworkCollect.IpInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.networkcollect.NetworkCollect.IpInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.networkcollect.NetworkCollect.IpInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.networkcollect.NetworkCollect.IpInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.networkcollect.NetworkCollect.IpInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.networkcollect.NetworkCollect.IpInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.networkcollect.NetworkCollect.IpInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.networkcollect.NetworkCollect.IpInfo prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * <pre>
     *ip地址信息
     * </pre>
     *
     * Protobuf type {@code IpInfo}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.networkcollect.NetworkCollect.IpInfo, Builder> implements
        // @@protoc_insertion_point(builder_implements:IpInfo)
        com.networkcollect.NetworkCollect.IpInfoOrBuilder {
      // Construct using com.networkcollect.NetworkCollect.IpInfo.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       *ip地址
       * </pre>
       *
       * <code>string ipAddr = 1;</code>
       */
      public java.lang.String getIpAddr() {
        return instance.getIpAddr();
      }
      /**
       * <pre>
       *ip地址
       * </pre>
       *
       * <code>string ipAddr = 1;</code>
       */
      public com.google.protobuf.ByteString
          getIpAddrBytes() {
        return instance.getIpAddrBytes();
      }
      /**
       * <pre>
       *ip地址
       * </pre>
       *
       * <code>string ipAddr = 1;</code>
       */
      public Builder setIpAddr(
          java.lang.String value) {
        copyOnWrite();
        instance.setIpAddr(value);
        return this;
      }
      /**
       * <pre>
       *ip地址
       * </pre>
       *
       * <code>string ipAddr = 1;</code>
       */
      public Builder clearIpAddr() {
        copyOnWrite();
        instance.clearIpAddr();
        return this;
      }
      /**
       * <pre>
       *ip地址
       * </pre>
       *
       * <code>string ipAddr = 1;</code>
       */
      public Builder setIpAddrBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setIpAddrBytes(value);
        return this;
      }

      /**
       * <pre>
       *子网掩码
       * </pre>
       *
       * <code>string netMask = 2;</code>
       */
      public java.lang.String getNetMask() {
        return instance.getNetMask();
      }
      /**
       * <pre>
       *子网掩码
       * </pre>
       *
       * <code>string netMask = 2;</code>
       */
      public com.google.protobuf.ByteString
          getNetMaskBytes() {
        return instance.getNetMaskBytes();
      }
      /**
       * <pre>
       *子网掩码
       * </pre>
       *
       * <code>string netMask = 2;</code>
       */
      public Builder setNetMask(
          java.lang.String value) {
        copyOnWrite();
        instance.setNetMask(value);
        return this;
      }
      /**
       * <pre>
       *子网掩码
       * </pre>
       *
       * <code>string netMask = 2;</code>
       */
      public Builder clearNetMask() {
        copyOnWrite();
        instance.clearNetMask();
        return this;
      }
      /**
       * <pre>
       *子网掩码
       * </pre>
       *
       * <code>string netMask = 2;</code>
       */
      public Builder setNetMaskBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setNetMaskBytes(value);
        return this;
      }

      /**
       * <pre>
       *默认网关
       * </pre>
       *
       * <code>string gateway = 3;</code>
       */
      public java.lang.String getGateway() {
        return instance.getGateway();
      }
      /**
       * <pre>
       *默认网关
       * </pre>
       *
       * <code>string gateway = 3;</code>
       */
      public com.google.protobuf.ByteString
          getGatewayBytes() {
        return instance.getGatewayBytes();
      }
      /**
       * <pre>
       *默认网关
       * </pre>
       *
       * <code>string gateway = 3;</code>
       */
      public Builder setGateway(
          java.lang.String value) {
        copyOnWrite();
        instance.setGateway(value);
        return this;
      }
      /**
       * <pre>
       *默认网关
       * </pre>
       *
       * <code>string gateway = 3;</code>
       */
      public Builder clearGateway() {
        copyOnWrite();
        instance.clearGateway();
        return this;
      }
      /**
       * <pre>
       *默认网关
       * </pre>
       *
       * <code>string gateway = 3;</code>
       */
      public Builder setGatewayBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setGatewayBytes(value);
        return this;
      }

      /**
       * <pre>
       *编号
       * </pre>
       *
       * <code>string orderNo = 4;</code>
       */
      public java.lang.String getOrderNo() {
        return instance.getOrderNo();
      }
      /**
       * <pre>
       *编号
       * </pre>
       *
       * <code>string orderNo = 4;</code>
       */
      public com.google.protobuf.ByteString
          getOrderNoBytes() {
        return instance.getOrderNoBytes();
      }
      /**
       * <pre>
       *编号
       * </pre>
       *
       * <code>string orderNo = 4;</code>
       */
      public Builder setOrderNo(
          java.lang.String value) {
        copyOnWrite();
        instance.setOrderNo(value);
        return this;
      }
      /**
       * <pre>
       *编号
       * </pre>
       *
       * <code>string orderNo = 4;</code>
       */
      public Builder clearOrderNo() {
        copyOnWrite();
        instance.clearOrderNo();
        return this;
      }
      /**
       * <pre>
       *编号
       * </pre>
       *
       * <code>string orderNo = 4;</code>
       */
      public Builder setOrderNoBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setOrderNoBytes(value);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:IpInfo)
    }
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.networkcollect.NetworkCollect.IpInfo();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.networkcollect.NetworkCollect.IpInfo other = (com.networkcollect.NetworkCollect.IpInfo) arg1;
          ipAddr_ = visitor.visitString(!ipAddr_.isEmpty(), ipAddr_,
              !other.ipAddr_.isEmpty(), other.ipAddr_);
          netMask_ = visitor.visitString(!netMask_.isEmpty(), netMask_,
              !other.netMask_.isEmpty(), other.netMask_);
          gateway_ = visitor.visitString(!gateway_.isEmpty(), gateway_,
              !other.gateway_.isEmpty(), other.gateway_);
          orderNo_ = visitor.visitString(!orderNo_.isEmpty(), orderNo_,
              !other.orderNo_.isEmpty(), other.orderNo_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!input.skipField(tag)) {
                    done = true;
                  }
                  break;
                }
                case 10: {
                  String s = input.readStringRequireUtf8();

                  ipAddr_ = s;
                  break;
                }
                case 18: {
                  String s = input.readStringRequireUtf8();

                  netMask_ = s;
                  break;
                }
                case 26: {
                  String s = input.readStringRequireUtf8();

                  gateway_ = s;
                  break;
                }
                case 34: {
                  String s = input.readStringRequireUtf8();

                  orderNo_ = s;
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (com.networkcollect.NetworkCollect.IpInfo.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:IpInfo)
    private static final com.networkcollect.NetworkCollect.IpInfo DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new IpInfo();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static com.networkcollect.NetworkCollect.IpInfo getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<IpInfo> PARSER;

    public static com.google.protobuf.Parser<IpInfo> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface NetworkInfoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:NetworkInfo)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     *网卡名称
     * </pre>
     *
     * <code>string name = 1;</code>
     */
    java.lang.String getName();
    /**
     * <pre>
     *网卡名称
     * </pre>
     *
     * <code>string name = 1;</code>
     */
    com.google.protobuf.ByteString
        getNameBytes();

    /**
     * <pre>
     *mac地址
     * </pre>
     *
     * <code>string hwAddr = 2;</code>
     */
    java.lang.String getHwAddr();
    /**
     * <pre>
     *mac地址
     * </pre>
     *
     * <code>string hwAddr = 2;</code>
     */
    com.google.protobuf.ByteString
        getHwAddrBytes();

    /**
     * <pre>
     *获取ip的类型，dhcp/static
     * </pre>
     *
     * <code>string ipGetType = 3;</code>
     */
    java.lang.String getIpGetType();
    /**
     * <pre>
     *获取ip的类型，dhcp/static
     * </pre>
     *
     * <code>string ipGetType = 3;</code>
     */
    com.google.protobuf.ByteString
        getIpGetTypeBytes();

    /**
     * <pre>
     *ip地址信息
     * </pre>
     *
     * <code>repeated .IpInfo ipList = 4;</code>
     */
    java.util.List<com.networkcollect.NetworkCollect.IpInfo> 
        getIpListList();
    /**
     * <pre>
     *ip地址信息
     * </pre>
     *
     * <code>repeated .IpInfo ipList = 4;</code>
     */
    com.networkcollect.NetworkCollect.IpInfo getIpList(int index);
    /**
     * <pre>
     *ip地址信息
     * </pre>
     *
     * <code>repeated .IpInfo ipList = 4;</code>
     */
    int getIpListCount();

    /**
     * <pre>
     *安全分区
     * </pre>
     *
     * <code>string safePart = 5;</code>
     */
    java.lang.String getSafePart();
    /**
     * <pre>
     *安全分区
     * </pre>
     *
     * <code>string safePart = 5;</code>
     */
    com.google.protobuf.ByteString
        getSafePartBytes();

    /**
     * <pre>
     *分网标识
     * </pre>
     *
     * <code>string subNetFlag = 6;</code>
     */
    java.lang.String getSubNetFlag();
    /**
     * <pre>
     *分网标识
     * </pre>
     *
     * <code>string subNetFlag = 6;</code>
     */
    com.google.protobuf.ByteString
        getSubNetFlagBytes();
  }
  /**
   * <pre>
   *网卡信息
   * </pre>
   *
   * Protobuf type {@code NetworkInfo}
   */
  public  static final class NetworkInfo extends
      com.google.protobuf.GeneratedMessageLite<
          NetworkInfo, NetworkInfo.Builder> implements
      // @@protoc_insertion_point(message_implements:NetworkInfo)
      NetworkInfoOrBuilder {
    private NetworkInfo() {
      name_ = "";
      hwAddr_ = "";
      ipGetType_ = "";
      ipList_ = emptyProtobufList();
      safePart_ = "";
      subNetFlag_ = "";
    }
    private int bitField0_;
    public static final int NAME_FIELD_NUMBER = 1;
    private java.lang.String name_;
    /**
     * <pre>
     *网卡名称
     * </pre>
     *
     * <code>string name = 1;</code>
     */
    public java.lang.String getName() {
      return name_;
    }
    /**
     * <pre>
     *网卡名称
     * </pre>
     *
     * <code>string name = 1;</code>
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(name_);
    }
    /**
     * <pre>
     *网卡名称
     * </pre>
     *
     * <code>string name = 1;</code>
     */
    private void setName(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      name_ = value;
    }
    /**
     * <pre>
     *网卡名称
     * </pre>
     *
     * <code>string name = 1;</code>
     */
    private void clearName() {
      
      name_ = getDefaultInstance().getName();
    }
    /**
     * <pre>
     *网卡名称
     * </pre>
     *
     * <code>string name = 1;</code>
     */
    private void setNameBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      name_ = value.toStringUtf8();
    }

    public static final int HWADDR_FIELD_NUMBER = 2;
    private java.lang.String hwAddr_;
    /**
     * <pre>
     *mac地址
     * </pre>
     *
     * <code>string hwAddr = 2;</code>
     */
    public java.lang.String getHwAddr() {
      return hwAddr_;
    }
    /**
     * <pre>
     *mac地址
     * </pre>
     *
     * <code>string hwAddr = 2;</code>
     */
    public com.google.protobuf.ByteString
        getHwAddrBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(hwAddr_);
    }
    /**
     * <pre>
     *mac地址
     * </pre>
     *
     * <code>string hwAddr = 2;</code>
     */
    private void setHwAddr(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      hwAddr_ = value;
    }
    /**
     * <pre>
     *mac地址
     * </pre>
     *
     * <code>string hwAddr = 2;</code>
     */
    private void clearHwAddr() {
      
      hwAddr_ = getDefaultInstance().getHwAddr();
    }
    /**
     * <pre>
     *mac地址
     * </pre>
     *
     * <code>string hwAddr = 2;</code>
     */
    private void setHwAddrBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      hwAddr_ = value.toStringUtf8();
    }

    public static final int IPGETTYPE_FIELD_NUMBER = 3;
    private java.lang.String ipGetType_;
    /**
     * <pre>
     *获取ip的类型，dhcp/static
     * </pre>
     *
     * <code>string ipGetType = 3;</code>
     */
    public java.lang.String getIpGetType() {
      return ipGetType_;
    }
    /**
     * <pre>
     *获取ip的类型，dhcp/static
     * </pre>
     *
     * <code>string ipGetType = 3;</code>
     */
    public com.google.protobuf.ByteString
        getIpGetTypeBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(ipGetType_);
    }
    /**
     * <pre>
     *获取ip的类型，dhcp/static
     * </pre>
     *
     * <code>string ipGetType = 3;</code>
     */
    private void setIpGetType(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      ipGetType_ = value;
    }
    /**
     * <pre>
     *获取ip的类型，dhcp/static
     * </pre>
     *
     * <code>string ipGetType = 3;</code>
     */
    private void clearIpGetType() {
      
      ipGetType_ = getDefaultInstance().getIpGetType();
    }
    /**
     * <pre>
     *获取ip的类型，dhcp/static
     * </pre>
     *
     * <code>string ipGetType = 3;</code>
     */
    private void setIpGetTypeBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      ipGetType_ = value.toStringUtf8();
    }

    public static final int IPLIST_FIELD_NUMBER = 4;
    private com.google.protobuf.Internal.ProtobufList<com.networkcollect.NetworkCollect.IpInfo> ipList_;
    /**
     * <pre>
     *ip地址信息
     * </pre>
     *
     * <code>repeated .IpInfo ipList = 4;</code>
     */
    public java.util.List<com.networkcollect.NetworkCollect.IpInfo> getIpListList() {
      return ipList_;
    }
    /**
     * <pre>
     *ip地址信息
     * </pre>
     *
     * <code>repeated .IpInfo ipList = 4;</code>
     */
    public java.util.List<? extends com.networkcollect.NetworkCollect.IpInfoOrBuilder> 
        getIpListOrBuilderList() {
      return ipList_;
    }
    /**
     * <pre>
     *ip地址信息
     * </pre>
     *
     * <code>repeated .IpInfo ipList = 4;</code>
     */
    public int getIpListCount() {
      return ipList_.size();
    }
    /**
     * <pre>
     *ip地址信息
     * </pre>
     *
     * <code>repeated .IpInfo ipList = 4;</code>
     */
    public com.networkcollect.NetworkCollect.IpInfo getIpList(int index) {
      return ipList_.get(index);
    }
    /**
     * <pre>
     *ip地址信息
     * </pre>
     *
     * <code>repeated .IpInfo ipList = 4;</code>
     */
    public com.networkcollect.NetworkCollect.IpInfoOrBuilder getIpListOrBuilder(
        int index) {
      return ipList_.get(index);
    }
    private void ensureIpListIsMutable() {
      if (!ipList_.isModifiable()) {
        ipList_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(ipList_);
       }
    }

    /**
     * <pre>
     *ip地址信息
     * </pre>
     *
     * <code>repeated .IpInfo ipList = 4;</code>
     */
    private void setIpList(
        int index, com.networkcollect.NetworkCollect.IpInfo value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureIpListIsMutable();
      ipList_.set(index, value);
    }
    /**
     * <pre>
     *ip地址信息
     * </pre>
     *
     * <code>repeated .IpInfo ipList = 4;</code>
     */
    private void setIpList(
        int index, com.networkcollect.NetworkCollect.IpInfo.Builder builderForValue) {
      ensureIpListIsMutable();
      ipList_.set(index, builderForValue.build());
    }
    /**
     * <pre>
     *ip地址信息
     * </pre>
     *
     * <code>repeated .IpInfo ipList = 4;</code>
     */
    private void addIpList(com.networkcollect.NetworkCollect.IpInfo value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureIpListIsMutable();
      ipList_.add(value);
    }
    /**
     * <pre>
     *ip地址信息
     * </pre>
     *
     * <code>repeated .IpInfo ipList = 4;</code>
     */
    private void addIpList(
        int index, com.networkcollect.NetworkCollect.IpInfo value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureIpListIsMutable();
      ipList_.add(index, value);
    }
    /**
     * <pre>
     *ip地址信息
     * </pre>
     *
     * <code>repeated .IpInfo ipList = 4;</code>
     */
    private void addIpList(
        com.networkcollect.NetworkCollect.IpInfo.Builder builderForValue) {
      ensureIpListIsMutable();
      ipList_.add(builderForValue.build());
    }
    /**
     * <pre>
     *ip地址信息
     * </pre>
     *
     * <code>repeated .IpInfo ipList = 4;</code>
     */
    private void addIpList(
        int index, com.networkcollect.NetworkCollect.IpInfo.Builder builderForValue) {
      ensureIpListIsMutable();
      ipList_.add(index, builderForValue.build());
    }
    /**
     * <pre>
     *ip地址信息
     * </pre>
     *
     * <code>repeated .IpInfo ipList = 4;</code>
     */
    private void addAllIpList(
        java.lang.Iterable<? extends com.networkcollect.NetworkCollect.IpInfo> values) {
      ensureIpListIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, ipList_);
    }
    /**
     * <pre>
     *ip地址信息
     * </pre>
     *
     * <code>repeated .IpInfo ipList = 4;</code>
     */
    private void clearIpList() {
      ipList_ = emptyProtobufList();
    }
    /**
     * <pre>
     *ip地址信息
     * </pre>
     *
     * <code>repeated .IpInfo ipList = 4;</code>
     */
    private void removeIpList(int index) {
      ensureIpListIsMutable();
      ipList_.remove(index);
    }

    public static final int SAFEPART_FIELD_NUMBER = 5;
    private java.lang.String safePart_;
    /**
     * <pre>
     *安全分区
     * </pre>
     *
     * <code>string safePart = 5;</code>
     */
    public java.lang.String getSafePart() {
      return safePart_;
    }
    /**
     * <pre>
     *安全分区
     * </pre>
     *
     * <code>string safePart = 5;</code>
     */
    public com.google.protobuf.ByteString
        getSafePartBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(safePart_);
    }
    /**
     * <pre>
     *安全分区
     * </pre>
     *
     * <code>string safePart = 5;</code>
     */
    private void setSafePart(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      safePart_ = value;
    }
    /**
     * <pre>
     *安全分区
     * </pre>
     *
     * <code>string safePart = 5;</code>
     */
    private void clearSafePart() {
      
      safePart_ = getDefaultInstance().getSafePart();
    }
    /**
     * <pre>
     *安全分区
     * </pre>
     *
     * <code>string safePart = 5;</code>
     */
    private void setSafePartBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      safePart_ = value.toStringUtf8();
    }

    public static final int SUBNETFLAG_FIELD_NUMBER = 6;
    private java.lang.String subNetFlag_;
    /**
     * <pre>
     *分网标识
     * </pre>
     *
     * <code>string subNetFlag = 6;</code>
     */
    public java.lang.String getSubNetFlag() {
      return subNetFlag_;
    }
    /**
     * <pre>
     *分网标识
     * </pre>
     *
     * <code>string subNetFlag = 6;</code>
     */
    public com.google.protobuf.ByteString
        getSubNetFlagBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(subNetFlag_);
    }
    /**
     * <pre>
     *分网标识
     * </pre>
     *
     * <code>string subNetFlag = 6;</code>
     */
    private void setSubNetFlag(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      subNetFlag_ = value;
    }
    /**
     * <pre>
     *分网标识
     * </pre>
     *
     * <code>string subNetFlag = 6;</code>
     */
    private void clearSubNetFlag() {
      
      subNetFlag_ = getDefaultInstance().getSubNetFlag();
    }
    /**
     * <pre>
     *分网标识
     * </pre>
     *
     * <code>string subNetFlag = 6;</code>
     */
    private void setSubNetFlagBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      subNetFlag_ = value.toStringUtf8();
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!name_.isEmpty()) {
        output.writeString(1, getName());
      }
      if (!hwAddr_.isEmpty()) {
        output.writeString(2, getHwAddr());
      }
      if (!ipGetType_.isEmpty()) {
        output.writeString(3, getIpGetType());
      }
      for (int i = 0; i < ipList_.size(); i++) {
        output.writeMessage(4, ipList_.get(i));
      }
      if (!safePart_.isEmpty()) {
        output.writeString(5, getSafePart());
      }
      if (!subNetFlag_.isEmpty()) {
        output.writeString(6, getSubNetFlag());
      }
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (!name_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getName());
      }
      if (!hwAddr_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(2, getHwAddr());
      }
      if (!ipGetType_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(3, getIpGetType());
      }
      for (int i = 0; i < ipList_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, ipList_.get(i));
      }
      if (!safePart_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(5, getSafePart());
      }
      if (!subNetFlag_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(6, getSubNetFlag());
      }
      memoizedSerializedSize = size;
      return size;
    }

    public static com.networkcollect.NetworkCollect.NetworkInfo parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.networkcollect.NetworkCollect.NetworkInfo parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.networkcollect.NetworkCollect.NetworkInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.networkcollect.NetworkCollect.NetworkInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.networkcollect.NetworkCollect.NetworkInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.networkcollect.NetworkCollect.NetworkInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.networkcollect.NetworkCollect.NetworkInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.networkcollect.NetworkCollect.NetworkInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.networkcollect.NetworkCollect.NetworkInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.networkcollect.NetworkCollect.NetworkInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.networkcollect.NetworkCollect.NetworkInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.networkcollect.NetworkCollect.NetworkInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.networkcollect.NetworkCollect.NetworkInfo prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * <pre>
     *网卡信息
     * </pre>
     *
     * Protobuf type {@code NetworkInfo}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.networkcollect.NetworkCollect.NetworkInfo, Builder> implements
        // @@protoc_insertion_point(builder_implements:NetworkInfo)
        com.networkcollect.NetworkCollect.NetworkInfoOrBuilder {
      // Construct using com.networkcollect.NetworkCollect.NetworkInfo.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       *网卡名称
       * </pre>
       *
       * <code>string name = 1;</code>
       */
      public java.lang.String getName() {
        return instance.getName();
      }
      /**
       * <pre>
       *网卡名称
       * </pre>
       *
       * <code>string name = 1;</code>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        return instance.getNameBytes();
      }
      /**
       * <pre>
       *网卡名称
       * </pre>
       *
       * <code>string name = 1;</code>
       */
      public Builder setName(
          java.lang.String value) {
        copyOnWrite();
        instance.setName(value);
        return this;
      }
      /**
       * <pre>
       *网卡名称
       * </pre>
       *
       * <code>string name = 1;</code>
       */
      public Builder clearName() {
        copyOnWrite();
        instance.clearName();
        return this;
      }
      /**
       * <pre>
       *网卡名称
       * </pre>
       *
       * <code>string name = 1;</code>
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setNameBytes(value);
        return this;
      }

      /**
       * <pre>
       *mac地址
       * </pre>
       *
       * <code>string hwAddr = 2;</code>
       */
      public java.lang.String getHwAddr() {
        return instance.getHwAddr();
      }
      /**
       * <pre>
       *mac地址
       * </pre>
       *
       * <code>string hwAddr = 2;</code>
       */
      public com.google.protobuf.ByteString
          getHwAddrBytes() {
        return instance.getHwAddrBytes();
      }
      /**
       * <pre>
       *mac地址
       * </pre>
       *
       * <code>string hwAddr = 2;</code>
       */
      public Builder setHwAddr(
          java.lang.String value) {
        copyOnWrite();
        instance.setHwAddr(value);
        return this;
      }
      /**
       * <pre>
       *mac地址
       * </pre>
       *
       * <code>string hwAddr = 2;</code>
       */
      public Builder clearHwAddr() {
        copyOnWrite();
        instance.clearHwAddr();
        return this;
      }
      /**
       * <pre>
       *mac地址
       * </pre>
       *
       * <code>string hwAddr = 2;</code>
       */
      public Builder setHwAddrBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setHwAddrBytes(value);
        return this;
      }

      /**
       * <pre>
       *获取ip的类型，dhcp/static
       * </pre>
       *
       * <code>string ipGetType = 3;</code>
       */
      public java.lang.String getIpGetType() {
        return instance.getIpGetType();
      }
      /**
       * <pre>
       *获取ip的类型，dhcp/static
       * </pre>
       *
       * <code>string ipGetType = 3;</code>
       */
      public com.google.protobuf.ByteString
          getIpGetTypeBytes() {
        return instance.getIpGetTypeBytes();
      }
      /**
       * <pre>
       *获取ip的类型，dhcp/static
       * </pre>
       *
       * <code>string ipGetType = 3;</code>
       */
      public Builder setIpGetType(
          java.lang.String value) {
        copyOnWrite();
        instance.setIpGetType(value);
        return this;
      }
      /**
       * <pre>
       *获取ip的类型，dhcp/static
       * </pre>
       *
       * <code>string ipGetType = 3;</code>
       */
      public Builder clearIpGetType() {
        copyOnWrite();
        instance.clearIpGetType();
        return this;
      }
      /**
       * <pre>
       *获取ip的类型，dhcp/static
       * </pre>
       *
       * <code>string ipGetType = 3;</code>
       */
      public Builder setIpGetTypeBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setIpGetTypeBytes(value);
        return this;
      }

      /**
       * <pre>
       *ip地址信息
       * </pre>
       *
       * <code>repeated .IpInfo ipList = 4;</code>
       */
      public java.util.List<com.networkcollect.NetworkCollect.IpInfo> getIpListList() {
        return java.util.Collections.unmodifiableList(
            instance.getIpListList());
      }
      /**
       * <pre>
       *ip地址信息
       * </pre>
       *
       * <code>repeated .IpInfo ipList = 4;</code>
       */
      public int getIpListCount() {
        return instance.getIpListCount();
      }/**
       * <pre>
       *ip地址信息
       * </pre>
       *
       * <code>repeated .IpInfo ipList = 4;</code>
       */
      public com.networkcollect.NetworkCollect.IpInfo getIpList(int index) {
        return instance.getIpList(index);
      }
      /**
       * <pre>
       *ip地址信息
       * </pre>
       *
       * <code>repeated .IpInfo ipList = 4;</code>
       */
      public Builder setIpList(
          int index, com.networkcollect.NetworkCollect.IpInfo value) {
        copyOnWrite();
        instance.setIpList(index, value);
        return this;
      }
      /**
       * <pre>
       *ip地址信息
       * </pre>
       *
       * <code>repeated .IpInfo ipList = 4;</code>
       */
      public Builder setIpList(
          int index, com.networkcollect.NetworkCollect.IpInfo.Builder builderForValue) {
        copyOnWrite();
        instance.setIpList(index, builderForValue);
        return this;
      }
      /**
       * <pre>
       *ip地址信息
       * </pre>
       *
       * <code>repeated .IpInfo ipList = 4;</code>
       */
      public Builder addIpList(com.networkcollect.NetworkCollect.IpInfo value) {
        copyOnWrite();
        instance.addIpList(value);
        return this;
      }
      /**
       * <pre>
       *ip地址信息
       * </pre>
       *
       * <code>repeated .IpInfo ipList = 4;</code>
       */
      public Builder addIpList(
          int index, com.networkcollect.NetworkCollect.IpInfo value) {
        copyOnWrite();
        instance.addIpList(index, value);
        return this;
      }
      /**
       * <pre>
       *ip地址信息
       * </pre>
       *
       * <code>repeated .IpInfo ipList = 4;</code>
       */
      public Builder addIpList(
          com.networkcollect.NetworkCollect.IpInfo.Builder builderForValue) {
        copyOnWrite();
        instance.addIpList(builderForValue);
        return this;
      }
      /**
       * <pre>
       *ip地址信息
       * </pre>
       *
       * <code>repeated .IpInfo ipList = 4;</code>
       */
      public Builder addIpList(
          int index, com.networkcollect.NetworkCollect.IpInfo.Builder builderForValue) {
        copyOnWrite();
        instance.addIpList(index, builderForValue);
        return this;
      }
      /**
       * <pre>
       *ip地址信息
       * </pre>
       *
       * <code>repeated .IpInfo ipList = 4;</code>
       */
      public Builder addAllIpList(
          java.lang.Iterable<? extends com.networkcollect.NetworkCollect.IpInfo> values) {
        copyOnWrite();
        instance.addAllIpList(values);
        return this;
      }
      /**
       * <pre>
       *ip地址信息
       * </pre>
       *
       * <code>repeated .IpInfo ipList = 4;</code>
       */
      public Builder clearIpList() {
        copyOnWrite();
        instance.clearIpList();
        return this;
      }
      /**
       * <pre>
       *ip地址信息
       * </pre>
       *
       * <code>repeated .IpInfo ipList = 4;</code>
       */
      public Builder removeIpList(int index) {
        copyOnWrite();
        instance.removeIpList(index);
        return this;
      }

      /**
       * <pre>
       *安全分区
       * </pre>
       *
       * <code>string safePart = 5;</code>
       */
      public java.lang.String getSafePart() {
        return instance.getSafePart();
      }
      /**
       * <pre>
       *安全分区
       * </pre>
       *
       * <code>string safePart = 5;</code>
       */
      public com.google.protobuf.ByteString
          getSafePartBytes() {
        return instance.getSafePartBytes();
      }
      /**
       * <pre>
       *安全分区
       * </pre>
       *
       * <code>string safePart = 5;</code>
       */
      public Builder setSafePart(
          java.lang.String value) {
        copyOnWrite();
        instance.setSafePart(value);
        return this;
      }
      /**
       * <pre>
       *安全分区
       * </pre>
       *
       * <code>string safePart = 5;</code>
       */
      public Builder clearSafePart() {
        copyOnWrite();
        instance.clearSafePart();
        return this;
      }
      /**
       * <pre>
       *安全分区
       * </pre>
       *
       * <code>string safePart = 5;</code>
       */
      public Builder setSafePartBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setSafePartBytes(value);
        return this;
      }

      /**
       * <pre>
       *分网标识
       * </pre>
       *
       * <code>string subNetFlag = 6;</code>
       */
      public java.lang.String getSubNetFlag() {
        return instance.getSubNetFlag();
      }
      /**
       * <pre>
       *分网标识
       * </pre>
       *
       * <code>string subNetFlag = 6;</code>
       */
      public com.google.protobuf.ByteString
          getSubNetFlagBytes() {
        return instance.getSubNetFlagBytes();
      }
      /**
       * <pre>
       *分网标识
       * </pre>
       *
       * <code>string subNetFlag = 6;</code>
       */
      public Builder setSubNetFlag(
          java.lang.String value) {
        copyOnWrite();
        instance.setSubNetFlag(value);
        return this;
      }
      /**
       * <pre>
       *分网标识
       * </pre>
       *
       * <code>string subNetFlag = 6;</code>
       */
      public Builder clearSubNetFlag() {
        copyOnWrite();
        instance.clearSubNetFlag();
        return this;
      }
      /**
       * <pre>
       *分网标识
       * </pre>
       *
       * <code>string subNetFlag = 6;</code>
       */
      public Builder setSubNetFlagBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setSubNetFlagBytes(value);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:NetworkInfo)
    }
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.networkcollect.NetworkCollect.NetworkInfo();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          ipList_.makeImmutable();
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.networkcollect.NetworkCollect.NetworkInfo other = (com.networkcollect.NetworkCollect.NetworkInfo) arg1;
          name_ = visitor.visitString(!name_.isEmpty(), name_,
              !other.name_.isEmpty(), other.name_);
          hwAddr_ = visitor.visitString(!hwAddr_.isEmpty(), hwAddr_,
              !other.hwAddr_.isEmpty(), other.hwAddr_);
          ipGetType_ = visitor.visitString(!ipGetType_.isEmpty(), ipGetType_,
              !other.ipGetType_.isEmpty(), other.ipGetType_);
          ipList_= visitor.visitList(ipList_, other.ipList_);
          safePart_ = visitor.visitString(!safePart_.isEmpty(), safePart_,
              !other.safePart_.isEmpty(), other.safePart_);
          subNetFlag_ = visitor.visitString(!subNetFlag_.isEmpty(), subNetFlag_,
              !other.subNetFlag_.isEmpty(), other.subNetFlag_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!input.skipField(tag)) {
                    done = true;
                  }
                  break;
                }
                case 10: {
                  String s = input.readStringRequireUtf8();

                  name_ = s;
                  break;
                }
                case 18: {
                  String s = input.readStringRequireUtf8();

                  hwAddr_ = s;
                  break;
                }
                case 26: {
                  String s = input.readStringRequireUtf8();

                  ipGetType_ = s;
                  break;
                }
                case 34: {
                  if (!ipList_.isModifiable()) {
                    ipList_ =
                        com.google.protobuf.GeneratedMessageLite.mutableCopy(ipList_);
                  }
                  ipList_.add(
                      input.readMessage(com.networkcollect.NetworkCollect.IpInfo.parser(), extensionRegistry));
                  break;
                }
                case 42: {
                  String s = input.readStringRequireUtf8();

                  safePart_ = s;
                  break;
                }
                case 50: {
                  String s = input.readStringRequireUtf8();

                  subNetFlag_ = s;
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (com.networkcollect.NetworkCollect.NetworkInfo.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:NetworkInfo)
    private static final com.networkcollect.NetworkCollect.NetworkInfo DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new NetworkInfo();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static com.networkcollect.NetworkCollect.NetworkInfo getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<NetworkInfo> PARSER;

    public static com.google.protobuf.Parser<NetworkInfo> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface AllNetInfoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:AllNetInfo)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>repeated .NetworkInfo infoList = 1;</code>
     */
    java.util.List<com.networkcollect.NetworkCollect.NetworkInfo> 
        getInfoListList();
    /**
     * <code>repeated .NetworkInfo infoList = 1;</code>
     */
    com.networkcollect.NetworkCollect.NetworkInfo getInfoList(int index);
    /**
     * <code>repeated .NetworkInfo infoList = 1;</code>
     */
    int getInfoListCount();
  }
  /**
   * Protobuf type {@code AllNetInfo}
   */
  public  static final class AllNetInfo extends
      com.google.protobuf.GeneratedMessageLite<
          AllNetInfo, AllNetInfo.Builder> implements
      // @@protoc_insertion_point(message_implements:AllNetInfo)
      AllNetInfoOrBuilder {
    private AllNetInfo() {
      infoList_ = emptyProtobufList();
    }
    public static final int INFOLIST_FIELD_NUMBER = 1;
    private com.google.protobuf.Internal.ProtobufList<com.networkcollect.NetworkCollect.NetworkInfo> infoList_;
    /**
     * <code>repeated .NetworkInfo infoList = 1;</code>
     */
    public java.util.List<com.networkcollect.NetworkCollect.NetworkInfo> getInfoListList() {
      return infoList_;
    }
    /**
     * <code>repeated .NetworkInfo infoList = 1;</code>
     */
    public java.util.List<? extends com.networkcollect.NetworkCollect.NetworkInfoOrBuilder> 
        getInfoListOrBuilderList() {
      return infoList_;
    }
    /**
     * <code>repeated .NetworkInfo infoList = 1;</code>
     */
    public int getInfoListCount() {
      return infoList_.size();
    }
    /**
     * <code>repeated .NetworkInfo infoList = 1;</code>
     */
    public com.networkcollect.NetworkCollect.NetworkInfo getInfoList(int index) {
      return infoList_.get(index);
    }
    /**
     * <code>repeated .NetworkInfo infoList = 1;</code>
     */
    public com.networkcollect.NetworkCollect.NetworkInfoOrBuilder getInfoListOrBuilder(
        int index) {
      return infoList_.get(index);
    }
    private void ensureInfoListIsMutable() {
      if (!infoList_.isModifiable()) {
        infoList_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(infoList_);
       }
    }

    /**
     * <code>repeated .NetworkInfo infoList = 1;</code>
     */
    private void setInfoList(
        int index, com.networkcollect.NetworkCollect.NetworkInfo value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureInfoListIsMutable();
      infoList_.set(index, value);
    }
    /**
     * <code>repeated .NetworkInfo infoList = 1;</code>
     */
    private void setInfoList(
        int index, com.networkcollect.NetworkCollect.NetworkInfo.Builder builderForValue) {
      ensureInfoListIsMutable();
      infoList_.set(index, builderForValue.build());
    }
    /**
     * <code>repeated .NetworkInfo infoList = 1;</code>
     */
    private void addInfoList(com.networkcollect.NetworkCollect.NetworkInfo value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureInfoListIsMutable();
      infoList_.add(value);
    }
    /**
     * <code>repeated .NetworkInfo infoList = 1;</code>
     */
    private void addInfoList(
        int index, com.networkcollect.NetworkCollect.NetworkInfo value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureInfoListIsMutable();
      infoList_.add(index, value);
    }
    /**
     * <code>repeated .NetworkInfo infoList = 1;</code>
     */
    private void addInfoList(
        com.networkcollect.NetworkCollect.NetworkInfo.Builder builderForValue) {
      ensureInfoListIsMutable();
      infoList_.add(builderForValue.build());
    }
    /**
     * <code>repeated .NetworkInfo infoList = 1;</code>
     */
    private void addInfoList(
        int index, com.networkcollect.NetworkCollect.NetworkInfo.Builder builderForValue) {
      ensureInfoListIsMutable();
      infoList_.add(index, builderForValue.build());
    }
    /**
     * <code>repeated .NetworkInfo infoList = 1;</code>
     */
    private void addAllInfoList(
        java.lang.Iterable<? extends com.networkcollect.NetworkCollect.NetworkInfo> values) {
      ensureInfoListIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, infoList_);
    }
    /**
     * <code>repeated .NetworkInfo infoList = 1;</code>
     */
    private void clearInfoList() {
      infoList_ = emptyProtobufList();
    }
    /**
     * <code>repeated .NetworkInfo infoList = 1;</code>
     */
    private void removeInfoList(int index) {
      ensureInfoListIsMutable();
      infoList_.remove(index);
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < infoList_.size(); i++) {
        output.writeMessage(1, infoList_.get(i));
      }
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < infoList_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, infoList_.get(i));
      }
      memoizedSerializedSize = size;
      return size;
    }

    public static com.networkcollect.NetworkCollect.AllNetInfo parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.networkcollect.NetworkCollect.AllNetInfo parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.networkcollect.NetworkCollect.AllNetInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.networkcollect.NetworkCollect.AllNetInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.networkcollect.NetworkCollect.AllNetInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.networkcollect.NetworkCollect.AllNetInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.networkcollect.NetworkCollect.AllNetInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.networkcollect.NetworkCollect.AllNetInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.networkcollect.NetworkCollect.AllNetInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.networkcollect.NetworkCollect.AllNetInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.networkcollect.NetworkCollect.AllNetInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.networkcollect.NetworkCollect.AllNetInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.networkcollect.NetworkCollect.AllNetInfo prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code AllNetInfo}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.networkcollect.NetworkCollect.AllNetInfo, Builder> implements
        // @@protoc_insertion_point(builder_implements:AllNetInfo)
        com.networkcollect.NetworkCollect.AllNetInfoOrBuilder {
      // Construct using com.networkcollect.NetworkCollect.AllNetInfo.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>repeated .NetworkInfo infoList = 1;</code>
       */
      public java.util.List<com.networkcollect.NetworkCollect.NetworkInfo> getInfoListList() {
        return java.util.Collections.unmodifiableList(
            instance.getInfoListList());
      }
      /**
       * <code>repeated .NetworkInfo infoList = 1;</code>
       */
      public int getInfoListCount() {
        return instance.getInfoListCount();
      }/**
       * <code>repeated .NetworkInfo infoList = 1;</code>
       */
      public com.networkcollect.NetworkCollect.NetworkInfo getInfoList(int index) {
        return instance.getInfoList(index);
      }
      /**
       * <code>repeated .NetworkInfo infoList = 1;</code>
       */
      public Builder setInfoList(
          int index, com.networkcollect.NetworkCollect.NetworkInfo value) {
        copyOnWrite();
        instance.setInfoList(index, value);
        return this;
      }
      /**
       * <code>repeated .NetworkInfo infoList = 1;</code>
       */
      public Builder setInfoList(
          int index, com.networkcollect.NetworkCollect.NetworkInfo.Builder builderForValue) {
        copyOnWrite();
        instance.setInfoList(index, builderForValue);
        return this;
      }
      /**
       * <code>repeated .NetworkInfo infoList = 1;</code>
       */
      public Builder addInfoList(com.networkcollect.NetworkCollect.NetworkInfo value) {
        copyOnWrite();
        instance.addInfoList(value);
        return this;
      }
      /**
       * <code>repeated .NetworkInfo infoList = 1;</code>
       */
      public Builder addInfoList(
          int index, com.networkcollect.NetworkCollect.NetworkInfo value) {
        copyOnWrite();
        instance.addInfoList(index, value);
        return this;
      }
      /**
       * <code>repeated .NetworkInfo infoList = 1;</code>
       */
      public Builder addInfoList(
          com.networkcollect.NetworkCollect.NetworkInfo.Builder builderForValue) {
        copyOnWrite();
        instance.addInfoList(builderForValue);
        return this;
      }
      /**
       * <code>repeated .NetworkInfo infoList = 1;</code>
       */
      public Builder addInfoList(
          int index, com.networkcollect.NetworkCollect.NetworkInfo.Builder builderForValue) {
        copyOnWrite();
        instance.addInfoList(index, builderForValue);
        return this;
      }
      /**
       * <code>repeated .NetworkInfo infoList = 1;</code>
       */
      public Builder addAllInfoList(
          java.lang.Iterable<? extends com.networkcollect.NetworkCollect.NetworkInfo> values) {
        copyOnWrite();
        instance.addAllInfoList(values);
        return this;
      }
      /**
       * <code>repeated .NetworkInfo infoList = 1;</code>
       */
      public Builder clearInfoList() {
        copyOnWrite();
        instance.clearInfoList();
        return this;
      }
      /**
       * <code>repeated .NetworkInfo infoList = 1;</code>
       */
      public Builder removeInfoList(int index) {
        copyOnWrite();
        instance.removeInfoList(index);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:AllNetInfo)
    }
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.networkcollect.NetworkCollect.AllNetInfo();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          infoList_.makeImmutable();
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.networkcollect.NetworkCollect.AllNetInfo other = (com.networkcollect.NetworkCollect.AllNetInfo) arg1;
          infoList_= visitor.visitList(infoList_, other.infoList_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!input.skipField(tag)) {
                    done = true;
                  }
                  break;
                }
                case 10: {
                  if (!infoList_.isModifiable()) {
                    infoList_ =
                        com.google.protobuf.GeneratedMessageLite.mutableCopy(infoList_);
                  }
                  infoList_.add(
                      input.readMessage(com.networkcollect.NetworkCollect.NetworkInfo.parser(), extensionRegistry));
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (com.networkcollect.NetworkCollect.AllNetInfo.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:AllNetInfo)
    private static final com.networkcollect.NetworkCollect.AllNetInfo DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new AllNetInfo();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static com.networkcollect.NetworkCollect.AllNetInfo getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<AllNetInfo> PARSER;

    public static com.google.protobuf.Parser<AllNetInfo> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface RouteInfoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:RouteInfo)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     *目标网段
     * </pre>
     *
     * <code>string netSegment = 1;</code>
     */
    java.lang.String getNetSegment();
    /**
     * <pre>
     *目标网段
     * </pre>
     *
     * <code>string netSegment = 1;</code>
     */
    com.google.protobuf.ByteString
        getNetSegmentBytes();

    /**
     * <pre>
     *掩码
     * </pre>
     *
     * <code>string netMask = 2;</code>
     */
    java.lang.String getNetMask();
    /**
     * <pre>
     *掩码
     * </pre>
     *
     * <code>string netMask = 2;</code>
     */
    com.google.protobuf.ByteString
        getNetMaskBytes();

    /**
     * <pre>
     *下一跳
     * </pre>
     *
     * <code>string nextHop = 3;</code>
     */
    java.lang.String getNextHop();
    /**
     * <pre>
     *下一跳
     * </pre>
     *
     * <code>string nextHop = 3;</code>
     */
    com.google.protobuf.ByteString
        getNextHopBytes();

    /**
     * <pre>
     *网卡名称
     * </pre>
     *
     * <code>string netcardName = 4;</code>
     */
    java.lang.String getNetcardName();
    /**
     * <pre>
     *网卡名称
     * </pre>
     *
     * <code>string netcardName = 4;</code>
     */
    com.google.protobuf.ByteString
        getNetcardNameBytes();
  }
  /**
   * <pre>
   *路由信息
   * </pre>
   *
   * Protobuf type {@code RouteInfo}
   */
  public  static final class RouteInfo extends
      com.google.protobuf.GeneratedMessageLite<
          RouteInfo, RouteInfo.Builder> implements
      // @@protoc_insertion_point(message_implements:RouteInfo)
      RouteInfoOrBuilder {
    private RouteInfo() {
      netSegment_ = "";
      netMask_ = "";
      nextHop_ = "";
      netcardName_ = "";
    }
    public static final int NETSEGMENT_FIELD_NUMBER = 1;
    private java.lang.String netSegment_;
    /**
     * <pre>
     *目标网段
     * </pre>
     *
     * <code>string netSegment = 1;</code>
     */
    public java.lang.String getNetSegment() {
      return netSegment_;
    }
    /**
     * <pre>
     *目标网段
     * </pre>
     *
     * <code>string netSegment = 1;</code>
     */
    public com.google.protobuf.ByteString
        getNetSegmentBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(netSegment_);
    }
    /**
     * <pre>
     *目标网段
     * </pre>
     *
     * <code>string netSegment = 1;</code>
     */
    private void setNetSegment(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      netSegment_ = value;
    }
    /**
     * <pre>
     *目标网段
     * </pre>
     *
     * <code>string netSegment = 1;</code>
     */
    private void clearNetSegment() {
      
      netSegment_ = getDefaultInstance().getNetSegment();
    }
    /**
     * <pre>
     *目标网段
     * </pre>
     *
     * <code>string netSegment = 1;</code>
     */
    private void setNetSegmentBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      netSegment_ = value.toStringUtf8();
    }

    public static final int NETMASK_FIELD_NUMBER = 2;
    private java.lang.String netMask_;
    /**
     * <pre>
     *掩码
     * </pre>
     *
     * <code>string netMask = 2;</code>
     */
    public java.lang.String getNetMask() {
      return netMask_;
    }
    /**
     * <pre>
     *掩码
     * </pre>
     *
     * <code>string netMask = 2;</code>
     */
    public com.google.protobuf.ByteString
        getNetMaskBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(netMask_);
    }
    /**
     * <pre>
     *掩码
     * </pre>
     *
     * <code>string netMask = 2;</code>
     */
    private void setNetMask(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      netMask_ = value;
    }
    /**
     * <pre>
     *掩码
     * </pre>
     *
     * <code>string netMask = 2;</code>
     */
    private void clearNetMask() {
      
      netMask_ = getDefaultInstance().getNetMask();
    }
    /**
     * <pre>
     *掩码
     * </pre>
     *
     * <code>string netMask = 2;</code>
     */
    private void setNetMaskBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      netMask_ = value.toStringUtf8();
    }

    public static final int NEXTHOP_FIELD_NUMBER = 3;
    private java.lang.String nextHop_;
    /**
     * <pre>
     *下一跳
     * </pre>
     *
     * <code>string nextHop = 3;</code>
     */
    public java.lang.String getNextHop() {
      return nextHop_;
    }
    /**
     * <pre>
     *下一跳
     * </pre>
     *
     * <code>string nextHop = 3;</code>
     */
    public com.google.protobuf.ByteString
        getNextHopBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(nextHop_);
    }
    /**
     * <pre>
     *下一跳
     * </pre>
     *
     * <code>string nextHop = 3;</code>
     */
    private void setNextHop(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      nextHop_ = value;
    }
    /**
     * <pre>
     *下一跳
     * </pre>
     *
     * <code>string nextHop = 3;</code>
     */
    private void clearNextHop() {
      
      nextHop_ = getDefaultInstance().getNextHop();
    }
    /**
     * <pre>
     *下一跳
     * </pre>
     *
     * <code>string nextHop = 3;</code>
     */
    private void setNextHopBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      nextHop_ = value.toStringUtf8();
    }

    public static final int NETCARDNAME_FIELD_NUMBER = 4;
    private java.lang.String netcardName_;
    /**
     * <pre>
     *网卡名称
     * </pre>
     *
     * <code>string netcardName = 4;</code>
     */
    public java.lang.String getNetcardName() {
      return netcardName_;
    }
    /**
     * <pre>
     *网卡名称
     * </pre>
     *
     * <code>string netcardName = 4;</code>
     */
    public com.google.protobuf.ByteString
        getNetcardNameBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(netcardName_);
    }
    /**
     * <pre>
     *网卡名称
     * </pre>
     *
     * <code>string netcardName = 4;</code>
     */
    private void setNetcardName(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      netcardName_ = value;
    }
    /**
     * <pre>
     *网卡名称
     * </pre>
     *
     * <code>string netcardName = 4;</code>
     */
    private void clearNetcardName() {
      
      netcardName_ = getDefaultInstance().getNetcardName();
    }
    /**
     * <pre>
     *网卡名称
     * </pre>
     *
     * <code>string netcardName = 4;</code>
     */
    private void setNetcardNameBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      netcardName_ = value.toStringUtf8();
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!netSegment_.isEmpty()) {
        output.writeString(1, getNetSegment());
      }
      if (!netMask_.isEmpty()) {
        output.writeString(2, getNetMask());
      }
      if (!nextHop_.isEmpty()) {
        output.writeString(3, getNextHop());
      }
      if (!netcardName_.isEmpty()) {
        output.writeString(4, getNetcardName());
      }
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (!netSegment_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getNetSegment());
      }
      if (!netMask_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(2, getNetMask());
      }
      if (!nextHop_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(3, getNextHop());
      }
      if (!netcardName_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(4, getNetcardName());
      }
      memoizedSerializedSize = size;
      return size;
    }

    public static com.networkcollect.NetworkCollect.RouteInfo parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.networkcollect.NetworkCollect.RouteInfo parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.networkcollect.NetworkCollect.RouteInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.networkcollect.NetworkCollect.RouteInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.networkcollect.NetworkCollect.RouteInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.networkcollect.NetworkCollect.RouteInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.networkcollect.NetworkCollect.RouteInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.networkcollect.NetworkCollect.RouteInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.networkcollect.NetworkCollect.RouteInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.networkcollect.NetworkCollect.RouteInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.networkcollect.NetworkCollect.RouteInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.networkcollect.NetworkCollect.RouteInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.networkcollect.NetworkCollect.RouteInfo prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * <pre>
     *路由信息
     * </pre>
     *
     * Protobuf type {@code RouteInfo}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.networkcollect.NetworkCollect.RouteInfo, Builder> implements
        // @@protoc_insertion_point(builder_implements:RouteInfo)
        com.networkcollect.NetworkCollect.RouteInfoOrBuilder {
      // Construct using com.networkcollect.NetworkCollect.RouteInfo.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       *目标网段
       * </pre>
       *
       * <code>string netSegment = 1;</code>
       */
      public java.lang.String getNetSegment() {
        return instance.getNetSegment();
      }
      /**
       * <pre>
       *目标网段
       * </pre>
       *
       * <code>string netSegment = 1;</code>
       */
      public com.google.protobuf.ByteString
          getNetSegmentBytes() {
        return instance.getNetSegmentBytes();
      }
      /**
       * <pre>
       *目标网段
       * </pre>
       *
       * <code>string netSegment = 1;</code>
       */
      public Builder setNetSegment(
          java.lang.String value) {
        copyOnWrite();
        instance.setNetSegment(value);
        return this;
      }
      /**
       * <pre>
       *目标网段
       * </pre>
       *
       * <code>string netSegment = 1;</code>
       */
      public Builder clearNetSegment() {
        copyOnWrite();
        instance.clearNetSegment();
        return this;
      }
      /**
       * <pre>
       *目标网段
       * </pre>
       *
       * <code>string netSegment = 1;</code>
       */
      public Builder setNetSegmentBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setNetSegmentBytes(value);
        return this;
      }

      /**
       * <pre>
       *掩码
       * </pre>
       *
       * <code>string netMask = 2;</code>
       */
      public java.lang.String getNetMask() {
        return instance.getNetMask();
      }
      /**
       * <pre>
       *掩码
       * </pre>
       *
       * <code>string netMask = 2;</code>
       */
      public com.google.protobuf.ByteString
          getNetMaskBytes() {
        return instance.getNetMaskBytes();
      }
      /**
       * <pre>
       *掩码
       * </pre>
       *
       * <code>string netMask = 2;</code>
       */
      public Builder setNetMask(
          java.lang.String value) {
        copyOnWrite();
        instance.setNetMask(value);
        return this;
      }
      /**
       * <pre>
       *掩码
       * </pre>
       *
       * <code>string netMask = 2;</code>
       */
      public Builder clearNetMask() {
        copyOnWrite();
        instance.clearNetMask();
        return this;
      }
      /**
       * <pre>
       *掩码
       * </pre>
       *
       * <code>string netMask = 2;</code>
       */
      public Builder setNetMaskBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setNetMaskBytes(value);
        return this;
      }

      /**
       * <pre>
       *下一跳
       * </pre>
       *
       * <code>string nextHop = 3;</code>
       */
      public java.lang.String getNextHop() {
        return instance.getNextHop();
      }
      /**
       * <pre>
       *下一跳
       * </pre>
       *
       * <code>string nextHop = 3;</code>
       */
      public com.google.protobuf.ByteString
          getNextHopBytes() {
        return instance.getNextHopBytes();
      }
      /**
       * <pre>
       *下一跳
       * </pre>
       *
       * <code>string nextHop = 3;</code>
       */
      public Builder setNextHop(
          java.lang.String value) {
        copyOnWrite();
        instance.setNextHop(value);
        return this;
      }
      /**
       * <pre>
       *下一跳
       * </pre>
       *
       * <code>string nextHop = 3;</code>
       */
      public Builder clearNextHop() {
        copyOnWrite();
        instance.clearNextHop();
        return this;
      }
      /**
       * <pre>
       *下一跳
       * </pre>
       *
       * <code>string nextHop = 3;</code>
       */
      public Builder setNextHopBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setNextHopBytes(value);
        return this;
      }

      /**
       * <pre>
       *网卡名称
       * </pre>
       *
       * <code>string netcardName = 4;</code>
       */
      public java.lang.String getNetcardName() {
        return instance.getNetcardName();
      }
      /**
       * <pre>
       *网卡名称
       * </pre>
       *
       * <code>string netcardName = 4;</code>
       */
      public com.google.protobuf.ByteString
          getNetcardNameBytes() {
        return instance.getNetcardNameBytes();
      }
      /**
       * <pre>
       *网卡名称
       * </pre>
       *
       * <code>string netcardName = 4;</code>
       */
      public Builder setNetcardName(
          java.lang.String value) {
        copyOnWrite();
        instance.setNetcardName(value);
        return this;
      }
      /**
       * <pre>
       *网卡名称
       * </pre>
       *
       * <code>string netcardName = 4;</code>
       */
      public Builder clearNetcardName() {
        copyOnWrite();
        instance.clearNetcardName();
        return this;
      }
      /**
       * <pre>
       *网卡名称
       * </pre>
       *
       * <code>string netcardName = 4;</code>
       */
      public Builder setNetcardNameBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setNetcardNameBytes(value);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:RouteInfo)
    }
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.networkcollect.NetworkCollect.RouteInfo();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.networkcollect.NetworkCollect.RouteInfo other = (com.networkcollect.NetworkCollect.RouteInfo) arg1;
          netSegment_ = visitor.visitString(!netSegment_.isEmpty(), netSegment_,
              !other.netSegment_.isEmpty(), other.netSegment_);
          netMask_ = visitor.visitString(!netMask_.isEmpty(), netMask_,
              !other.netMask_.isEmpty(), other.netMask_);
          nextHop_ = visitor.visitString(!nextHop_.isEmpty(), nextHop_,
              !other.nextHop_.isEmpty(), other.nextHop_);
          netcardName_ = visitor.visitString(!netcardName_.isEmpty(), netcardName_,
              !other.netcardName_.isEmpty(), other.netcardName_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!input.skipField(tag)) {
                    done = true;
                  }
                  break;
                }
                case 10: {
                  String s = input.readStringRequireUtf8();

                  netSegment_ = s;
                  break;
                }
                case 18: {
                  String s = input.readStringRequireUtf8();

                  netMask_ = s;
                  break;
                }
                case 26: {
                  String s = input.readStringRequireUtf8();

                  nextHop_ = s;
                  break;
                }
                case 34: {
                  String s = input.readStringRequireUtf8();

                  netcardName_ = s;
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (com.networkcollect.NetworkCollect.RouteInfo.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:RouteInfo)
    private static final com.networkcollect.NetworkCollect.RouteInfo DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new RouteInfo();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static com.networkcollect.NetworkCollect.RouteInfo getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<RouteInfo> PARSER;

    public static com.google.protobuf.Parser<RouteInfo> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface SubNetworkInfoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:SubNetworkInfo)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     *网卡名称
     * </pre>
     *
     * <code>string name = 1;</code>
     */
    java.lang.String getName();
    /**
     * <pre>
     *网卡名称
     * </pre>
     *
     * <code>string name = 1;</code>
     */
    com.google.protobuf.ByteString
        getNameBytes();

    /**
     * <pre>
     *vlan号
     * </pre>
     *
     * <code>string vlanId = 2;</code>
     */
    java.lang.String getVlanId();
    /**
     * <pre>
     *vlan号
     * </pre>
     *
     * <code>string vlanId = 2;</code>
     */
    com.google.protobuf.ByteString
        getVlanIdBytes();

    /**
     * <pre>
     *ip地址
     * </pre>
     *
     * <code>string ipAddr = 3;</code>
     */
    java.lang.String getIpAddr();
    /**
     * <pre>
     *ip地址
     * </pre>
     *
     * <code>string ipAddr = 3;</code>
     */
    com.google.protobuf.ByteString
        getIpAddrBytes();

    /**
     * <pre>
     *子网掩码
     * </pre>
     *
     * <code>string netmask = 4;</code>
     */
    java.lang.String getNetmask();
    /**
     * <pre>
     *子网掩码
     * </pre>
     *
     * <code>string netmask = 4;</code>
     */
    com.google.protobuf.ByteString
        getNetmaskBytes();
  }
  /**
   * <pre>
   *子网卡参数信息
   * </pre>
   *
   * Protobuf type {@code SubNetworkInfo}
   */
  public  static final class SubNetworkInfo extends
      com.google.protobuf.GeneratedMessageLite<
          SubNetworkInfo, SubNetworkInfo.Builder> implements
      // @@protoc_insertion_point(message_implements:SubNetworkInfo)
      SubNetworkInfoOrBuilder {
    private SubNetworkInfo() {
      name_ = "";
      vlanId_ = "";
      ipAddr_ = "";
      netmask_ = "";
    }
    public static final int NAME_FIELD_NUMBER = 1;
    private java.lang.String name_;
    /**
     * <pre>
     *网卡名称
     * </pre>
     *
     * <code>string name = 1;</code>
     */
    public java.lang.String getName() {
      return name_;
    }
    /**
     * <pre>
     *网卡名称
     * </pre>
     *
     * <code>string name = 1;</code>
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(name_);
    }
    /**
     * <pre>
     *网卡名称
     * </pre>
     *
     * <code>string name = 1;</code>
     */
    private void setName(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      name_ = value;
    }
    /**
     * <pre>
     *网卡名称
     * </pre>
     *
     * <code>string name = 1;</code>
     */
    private void clearName() {
      
      name_ = getDefaultInstance().getName();
    }
    /**
     * <pre>
     *网卡名称
     * </pre>
     *
     * <code>string name = 1;</code>
     */
    private void setNameBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      name_ = value.toStringUtf8();
    }

    public static final int VLANID_FIELD_NUMBER = 2;
    private java.lang.String vlanId_;
    /**
     * <pre>
     *vlan号
     * </pre>
     *
     * <code>string vlanId = 2;</code>
     */
    public java.lang.String getVlanId() {
      return vlanId_;
    }
    /**
     * <pre>
     *vlan号
     * </pre>
     *
     * <code>string vlanId = 2;</code>
     */
    public com.google.protobuf.ByteString
        getVlanIdBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(vlanId_);
    }
    /**
     * <pre>
     *vlan号
     * </pre>
     *
     * <code>string vlanId = 2;</code>
     */
    private void setVlanId(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      vlanId_ = value;
    }
    /**
     * <pre>
     *vlan号
     * </pre>
     *
     * <code>string vlanId = 2;</code>
     */
    private void clearVlanId() {
      
      vlanId_ = getDefaultInstance().getVlanId();
    }
    /**
     * <pre>
     *vlan号
     * </pre>
     *
     * <code>string vlanId = 2;</code>
     */
    private void setVlanIdBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      vlanId_ = value.toStringUtf8();
    }

    public static final int IPADDR_FIELD_NUMBER = 3;
    private java.lang.String ipAddr_;
    /**
     * <pre>
     *ip地址
     * </pre>
     *
     * <code>string ipAddr = 3;</code>
     */
    public java.lang.String getIpAddr() {
      return ipAddr_;
    }
    /**
     * <pre>
     *ip地址
     * </pre>
     *
     * <code>string ipAddr = 3;</code>
     */
    public com.google.protobuf.ByteString
        getIpAddrBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(ipAddr_);
    }
    /**
     * <pre>
     *ip地址
     * </pre>
     *
     * <code>string ipAddr = 3;</code>
     */
    private void setIpAddr(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      ipAddr_ = value;
    }
    /**
     * <pre>
     *ip地址
     * </pre>
     *
     * <code>string ipAddr = 3;</code>
     */
    private void clearIpAddr() {
      
      ipAddr_ = getDefaultInstance().getIpAddr();
    }
    /**
     * <pre>
     *ip地址
     * </pre>
     *
     * <code>string ipAddr = 3;</code>
     */
    private void setIpAddrBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      ipAddr_ = value.toStringUtf8();
    }

    public static final int NETMASK_FIELD_NUMBER = 4;
    private java.lang.String netmask_;
    /**
     * <pre>
     *子网掩码
     * </pre>
     *
     * <code>string netmask = 4;</code>
     */
    public java.lang.String getNetmask() {
      return netmask_;
    }
    /**
     * <pre>
     *子网掩码
     * </pre>
     *
     * <code>string netmask = 4;</code>
     */
    public com.google.protobuf.ByteString
        getNetmaskBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(netmask_);
    }
    /**
     * <pre>
     *子网掩码
     * </pre>
     *
     * <code>string netmask = 4;</code>
     */
    private void setNetmask(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      netmask_ = value;
    }
    /**
     * <pre>
     *子网掩码
     * </pre>
     *
     * <code>string netmask = 4;</code>
     */
    private void clearNetmask() {
      
      netmask_ = getDefaultInstance().getNetmask();
    }
    /**
     * <pre>
     *子网掩码
     * </pre>
     *
     * <code>string netmask = 4;</code>
     */
    private void setNetmaskBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      netmask_ = value.toStringUtf8();
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!name_.isEmpty()) {
        output.writeString(1, getName());
      }
      if (!vlanId_.isEmpty()) {
        output.writeString(2, getVlanId());
      }
      if (!ipAddr_.isEmpty()) {
        output.writeString(3, getIpAddr());
      }
      if (!netmask_.isEmpty()) {
        output.writeString(4, getNetmask());
      }
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (!name_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getName());
      }
      if (!vlanId_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(2, getVlanId());
      }
      if (!ipAddr_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(3, getIpAddr());
      }
      if (!netmask_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(4, getNetmask());
      }
      memoizedSerializedSize = size;
      return size;
    }

    public static com.networkcollect.NetworkCollect.SubNetworkInfo parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.networkcollect.NetworkCollect.SubNetworkInfo parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.networkcollect.NetworkCollect.SubNetworkInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.networkcollect.NetworkCollect.SubNetworkInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.networkcollect.NetworkCollect.SubNetworkInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.networkcollect.NetworkCollect.SubNetworkInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.networkcollect.NetworkCollect.SubNetworkInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.networkcollect.NetworkCollect.SubNetworkInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.networkcollect.NetworkCollect.SubNetworkInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.networkcollect.NetworkCollect.SubNetworkInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.networkcollect.NetworkCollect.SubNetworkInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.networkcollect.NetworkCollect.SubNetworkInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.networkcollect.NetworkCollect.SubNetworkInfo prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * <pre>
     *子网卡参数信息
     * </pre>
     *
     * Protobuf type {@code SubNetworkInfo}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.networkcollect.NetworkCollect.SubNetworkInfo, Builder> implements
        // @@protoc_insertion_point(builder_implements:SubNetworkInfo)
        com.networkcollect.NetworkCollect.SubNetworkInfoOrBuilder {
      // Construct using com.networkcollect.NetworkCollect.SubNetworkInfo.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       *网卡名称
       * </pre>
       *
       * <code>string name = 1;</code>
       */
      public java.lang.String getName() {
        return instance.getName();
      }
      /**
       * <pre>
       *网卡名称
       * </pre>
       *
       * <code>string name = 1;</code>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        return instance.getNameBytes();
      }
      /**
       * <pre>
       *网卡名称
       * </pre>
       *
       * <code>string name = 1;</code>
       */
      public Builder setName(
          java.lang.String value) {
        copyOnWrite();
        instance.setName(value);
        return this;
      }
      /**
       * <pre>
       *网卡名称
       * </pre>
       *
       * <code>string name = 1;</code>
       */
      public Builder clearName() {
        copyOnWrite();
        instance.clearName();
        return this;
      }
      /**
       * <pre>
       *网卡名称
       * </pre>
       *
       * <code>string name = 1;</code>
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setNameBytes(value);
        return this;
      }

      /**
       * <pre>
       *vlan号
       * </pre>
       *
       * <code>string vlanId = 2;</code>
       */
      public java.lang.String getVlanId() {
        return instance.getVlanId();
      }
      /**
       * <pre>
       *vlan号
       * </pre>
       *
       * <code>string vlanId = 2;</code>
       */
      public com.google.protobuf.ByteString
          getVlanIdBytes() {
        return instance.getVlanIdBytes();
      }
      /**
       * <pre>
       *vlan号
       * </pre>
       *
       * <code>string vlanId = 2;</code>
       */
      public Builder setVlanId(
          java.lang.String value) {
        copyOnWrite();
        instance.setVlanId(value);
        return this;
      }
      /**
       * <pre>
       *vlan号
       * </pre>
       *
       * <code>string vlanId = 2;</code>
       */
      public Builder clearVlanId() {
        copyOnWrite();
        instance.clearVlanId();
        return this;
      }
      /**
       * <pre>
       *vlan号
       * </pre>
       *
       * <code>string vlanId = 2;</code>
       */
      public Builder setVlanIdBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setVlanIdBytes(value);
        return this;
      }

      /**
       * <pre>
       *ip地址
       * </pre>
       *
       * <code>string ipAddr = 3;</code>
       */
      public java.lang.String getIpAddr() {
        return instance.getIpAddr();
      }
      /**
       * <pre>
       *ip地址
       * </pre>
       *
       * <code>string ipAddr = 3;</code>
       */
      public com.google.protobuf.ByteString
          getIpAddrBytes() {
        return instance.getIpAddrBytes();
      }
      /**
       * <pre>
       *ip地址
       * </pre>
       *
       * <code>string ipAddr = 3;</code>
       */
      public Builder setIpAddr(
          java.lang.String value) {
        copyOnWrite();
        instance.setIpAddr(value);
        return this;
      }
      /**
       * <pre>
       *ip地址
       * </pre>
       *
       * <code>string ipAddr = 3;</code>
       */
      public Builder clearIpAddr() {
        copyOnWrite();
        instance.clearIpAddr();
        return this;
      }
      /**
       * <pre>
       *ip地址
       * </pre>
       *
       * <code>string ipAddr = 3;</code>
       */
      public Builder setIpAddrBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setIpAddrBytes(value);
        return this;
      }

      /**
       * <pre>
       *子网掩码
       * </pre>
       *
       * <code>string netmask = 4;</code>
       */
      public java.lang.String getNetmask() {
        return instance.getNetmask();
      }
      /**
       * <pre>
       *子网掩码
       * </pre>
       *
       * <code>string netmask = 4;</code>
       */
      public com.google.protobuf.ByteString
          getNetmaskBytes() {
        return instance.getNetmaskBytes();
      }
      /**
       * <pre>
       *子网掩码
       * </pre>
       *
       * <code>string netmask = 4;</code>
       */
      public Builder setNetmask(
          java.lang.String value) {
        copyOnWrite();
        instance.setNetmask(value);
        return this;
      }
      /**
       * <pre>
       *子网掩码
       * </pre>
       *
       * <code>string netmask = 4;</code>
       */
      public Builder clearNetmask() {
        copyOnWrite();
        instance.clearNetmask();
        return this;
      }
      /**
       * <pre>
       *子网掩码
       * </pre>
       *
       * <code>string netmask = 4;</code>
       */
      public Builder setNetmaskBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setNetmaskBytes(value);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:SubNetworkInfo)
    }
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.networkcollect.NetworkCollect.SubNetworkInfo();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.networkcollect.NetworkCollect.SubNetworkInfo other = (com.networkcollect.NetworkCollect.SubNetworkInfo) arg1;
          name_ = visitor.visitString(!name_.isEmpty(), name_,
              !other.name_.isEmpty(), other.name_);
          vlanId_ = visitor.visitString(!vlanId_.isEmpty(), vlanId_,
              !other.vlanId_.isEmpty(), other.vlanId_);
          ipAddr_ = visitor.visitString(!ipAddr_.isEmpty(), ipAddr_,
              !other.ipAddr_.isEmpty(), other.ipAddr_);
          netmask_ = visitor.visitString(!netmask_.isEmpty(), netmask_,
              !other.netmask_.isEmpty(), other.netmask_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!input.skipField(tag)) {
                    done = true;
                  }
                  break;
                }
                case 10: {
                  String s = input.readStringRequireUtf8();

                  name_ = s;
                  break;
                }
                case 18: {
                  String s = input.readStringRequireUtf8();

                  vlanId_ = s;
                  break;
                }
                case 26: {
                  String s = input.readStringRequireUtf8();

                  ipAddr_ = s;
                  break;
                }
                case 34: {
                  String s = input.readStringRequireUtf8();

                  netmask_ = s;
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (com.networkcollect.NetworkCollect.SubNetworkInfo.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:SubNetworkInfo)
    private static final com.networkcollect.NetworkCollect.SubNetworkInfo DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new SubNetworkInfo();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static com.networkcollect.NetworkCollect.SubNetworkInfo getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<SubNetworkInfo> PARSER;

    public static com.google.protobuf.Parser<SubNetworkInfo> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface RemoteCmdInfoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:RemoteCmdInfo)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     *命令类型
     * </pre>
     *
     * <code>.RemoteCmdType CmdType = 1;</code>
     */
    int getCmdTypeValue();
    /**
     * <pre>
     *命令类型
     * </pre>
     *
     * <code>.RemoteCmdType CmdType = 1;</code>
     */
    com.networkcollect.NetworkCollect.RemoteCmdType getCmdType();

    /**
     * <pre>
     *文件名称
     * </pre>
     *
     * <code>string fileName = 2;</code>
     */
    java.lang.String getFileName();
    /**
     * <pre>
     *文件名称
     * </pre>
     *
     * <code>string fileName = 2;</code>
     */
    com.google.protobuf.ByteString
        getFileNameBytes();

    /**
     * <pre>
     *网卡信息
     * </pre>
     *
     * <code>.AllNetInfo netInfo = 3;</code>
     */
    boolean hasNetInfo();
    /**
     * <pre>
     *网卡信息
     * </pre>
     *
     * <code>.AllNetInfo netInfo = 3;</code>
     */
    com.networkcollect.NetworkCollect.AllNetInfo getNetInfo();

    /**
     * <pre>
     *路由信息
     * </pre>
     *
     * <code>repeated .RouteInfo routeInfo = 4;</code>
     */
    java.util.List<com.networkcollect.NetworkCollect.RouteInfo> 
        getRouteInfoList();
    /**
     * <pre>
     *路由信息
     * </pre>
     *
     * <code>repeated .RouteInfo routeInfo = 4;</code>
     */
    com.networkcollect.NetworkCollect.RouteInfo getRouteInfo(int index);
    /**
     * <pre>
     *路由信息
     * </pre>
     *
     * <code>repeated .RouteInfo routeInfo = 4;</code>
     */
    int getRouteInfoCount();

    /**
     * <pre>
     *命令字符串
     * </pre>
     *
     * <code>string cmdDetail = 5;</code>
     */
    java.lang.String getCmdDetail();
    /**
     * <pre>
     *命令字符串
     * </pre>
     *
     * <code>string cmdDetail = 5;</code>
     */
    com.google.protobuf.ByteString
        getCmdDetailBytes();

    /**
     * <pre>
     *子接口参数信息
     * </pre>
     *
     * <code>.SubNetworkInfo subNetInfo = 6;</code>
     */
    boolean hasSubNetInfo();
    /**
     * <pre>
     *子接口参数信息
     * </pre>
     *
     * <code>.SubNetworkInfo subNetInfo = 6;</code>
     */
    com.networkcollect.NetworkCollect.SubNetworkInfo getSubNetInfo();

    /**
     * <pre>
     *设置类型
     * </pre>
     *
     * <code>.RemoteSetType setType = 7;</code>
     */
    int getSetTypeValue();
    /**
     * <pre>
     *设置类型
     * </pre>
     *
     * <code>.RemoteSetType setType = 7;</code>
     */
    com.networkcollect.NetworkCollect.RemoteSetType getSetType();
  }
  /**
   * <pre>
   *远程控制命令
   * </pre>
   *
   * Protobuf type {@code RemoteCmdInfo}
   */
  public  static final class RemoteCmdInfo extends
      com.google.protobuf.GeneratedMessageLite<
          RemoteCmdInfo, RemoteCmdInfo.Builder> implements
      // @@protoc_insertion_point(message_implements:RemoteCmdInfo)
      RemoteCmdInfoOrBuilder {
    private RemoteCmdInfo() {
      fileName_ = "";
      routeInfo_ = emptyProtobufList();
      cmdDetail_ = "";
    }
    private int bitField0_;
    public static final int CMDTYPE_FIELD_NUMBER = 1;
    private int cmdType_;
    /**
     * <pre>
     *命令类型
     * </pre>
     *
     * <code>.RemoteCmdType CmdType = 1;</code>
     */
    public int getCmdTypeValue() {
      return cmdType_;
    }
    /**
     * <pre>
     *命令类型
     * </pre>
     *
     * <code>.RemoteCmdType CmdType = 1;</code>
     */
    public com.networkcollect.NetworkCollect.RemoteCmdType getCmdType() {
      com.networkcollect.NetworkCollect.RemoteCmdType result = com.networkcollect.NetworkCollect.RemoteCmdType.forNumber(cmdType_);
      return result == null ? com.networkcollect.NetworkCollect.RemoteCmdType.UNRECOGNIZED : result;
    }
    /**
     * <pre>
     *命令类型
     * </pre>
     *
     * <code>.RemoteCmdType CmdType = 1;</code>
     */
    private void setCmdTypeValue(int value) {
        cmdType_ = value;
    }
    /**
     * <pre>
     *命令类型
     * </pre>
     *
     * <code>.RemoteCmdType CmdType = 1;</code>
     */
    private void setCmdType(com.networkcollect.NetworkCollect.RemoteCmdType value) {
      if (value == null) {
        throw new NullPointerException();
      }
      
      cmdType_ = value.getNumber();
    }
    /**
     * <pre>
     *命令类型
     * </pre>
     *
     * <code>.RemoteCmdType CmdType = 1;</code>
     */
    private void clearCmdType() {
      
      cmdType_ = 0;
    }

    public static final int FILENAME_FIELD_NUMBER = 2;
    private java.lang.String fileName_;
    /**
     * <pre>
     *文件名称
     * </pre>
     *
     * <code>string fileName = 2;</code>
     */
    public java.lang.String getFileName() {
      return fileName_;
    }
    /**
     * <pre>
     *文件名称
     * </pre>
     *
     * <code>string fileName = 2;</code>
     */
    public com.google.protobuf.ByteString
        getFileNameBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(fileName_);
    }
    /**
     * <pre>
     *文件名称
     * </pre>
     *
     * <code>string fileName = 2;</code>
     */
    private void setFileName(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      fileName_ = value;
    }
    /**
     * <pre>
     *文件名称
     * </pre>
     *
     * <code>string fileName = 2;</code>
     */
    private void clearFileName() {
      
      fileName_ = getDefaultInstance().getFileName();
    }
    /**
     * <pre>
     *文件名称
     * </pre>
     *
     * <code>string fileName = 2;</code>
     */
    private void setFileNameBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      fileName_ = value.toStringUtf8();
    }

    public static final int NETINFO_FIELD_NUMBER = 3;
    private com.networkcollect.NetworkCollect.AllNetInfo netInfo_;
    /**
     * <pre>
     *网卡信息
     * </pre>
     *
     * <code>.AllNetInfo netInfo = 3;</code>
     */
    public boolean hasNetInfo() {
      return netInfo_ != null;
    }
    /**
     * <pre>
     *网卡信息
     * </pre>
     *
     * <code>.AllNetInfo netInfo = 3;</code>
     */
    public com.networkcollect.NetworkCollect.AllNetInfo getNetInfo() {
      return netInfo_ == null ? com.networkcollect.NetworkCollect.AllNetInfo.getDefaultInstance() : netInfo_;
    }
    /**
     * <pre>
     *网卡信息
     * </pre>
     *
     * <code>.AllNetInfo netInfo = 3;</code>
     */
    private void setNetInfo(com.networkcollect.NetworkCollect.AllNetInfo value) {
      if (value == null) {
        throw new NullPointerException();
      }
      netInfo_ = value;
      
      }
    /**
     * <pre>
     *网卡信息
     * </pre>
     *
     * <code>.AllNetInfo netInfo = 3;</code>
     */
    private void setNetInfo(
        com.networkcollect.NetworkCollect.AllNetInfo.Builder builderForValue) {
      netInfo_ = builderForValue.build();
      
    }
    /**
     * <pre>
     *网卡信息
     * </pre>
     *
     * <code>.AllNetInfo netInfo = 3;</code>
     */
    private void mergeNetInfo(com.networkcollect.NetworkCollect.AllNetInfo value) {
      if (netInfo_ != null &&
          netInfo_ != com.networkcollect.NetworkCollect.AllNetInfo.getDefaultInstance()) {
        netInfo_ =
          com.networkcollect.NetworkCollect.AllNetInfo.newBuilder(netInfo_).mergeFrom(value).buildPartial();
      } else {
        netInfo_ = value;
      }
      
    }
    /**
     * <pre>
     *网卡信息
     * </pre>
     *
     * <code>.AllNetInfo netInfo = 3;</code>
     */
    private void clearNetInfo() {  netInfo_ = null;
      
    }

    public static final int ROUTEINFO_FIELD_NUMBER = 4;
    private com.google.protobuf.Internal.ProtobufList<com.networkcollect.NetworkCollect.RouteInfo> routeInfo_;
    /**
     * <pre>
     *路由信息
     * </pre>
     *
     * <code>repeated .RouteInfo routeInfo = 4;</code>
     */
    public java.util.List<com.networkcollect.NetworkCollect.RouteInfo> getRouteInfoList() {
      return routeInfo_;
    }
    /**
     * <pre>
     *路由信息
     * </pre>
     *
     * <code>repeated .RouteInfo routeInfo = 4;</code>
     */
    public java.util.List<? extends com.networkcollect.NetworkCollect.RouteInfoOrBuilder> 
        getRouteInfoOrBuilderList() {
      return routeInfo_;
    }
    /**
     * <pre>
     *路由信息
     * </pre>
     *
     * <code>repeated .RouteInfo routeInfo = 4;</code>
     */
    public int getRouteInfoCount() {
      return routeInfo_.size();
    }
    /**
     * <pre>
     *路由信息
     * </pre>
     *
     * <code>repeated .RouteInfo routeInfo = 4;</code>
     */
    public com.networkcollect.NetworkCollect.RouteInfo getRouteInfo(int index) {
      return routeInfo_.get(index);
    }
    /**
     * <pre>
     *路由信息
     * </pre>
     *
     * <code>repeated .RouteInfo routeInfo = 4;</code>
     */
    public com.networkcollect.NetworkCollect.RouteInfoOrBuilder getRouteInfoOrBuilder(
        int index) {
      return routeInfo_.get(index);
    }
    private void ensureRouteInfoIsMutable() {
      if (!routeInfo_.isModifiable()) {
        routeInfo_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(routeInfo_);
       }
    }

    /**
     * <pre>
     *路由信息
     * </pre>
     *
     * <code>repeated .RouteInfo routeInfo = 4;</code>
     */
    private void setRouteInfo(
        int index, com.networkcollect.NetworkCollect.RouteInfo value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureRouteInfoIsMutable();
      routeInfo_.set(index, value);
    }
    /**
     * <pre>
     *路由信息
     * </pre>
     *
     * <code>repeated .RouteInfo routeInfo = 4;</code>
     */
    private void setRouteInfo(
        int index, com.networkcollect.NetworkCollect.RouteInfo.Builder builderForValue) {
      ensureRouteInfoIsMutable();
      routeInfo_.set(index, builderForValue.build());
    }
    /**
     * <pre>
     *路由信息
     * </pre>
     *
     * <code>repeated .RouteInfo routeInfo = 4;</code>
     */
    private void addRouteInfo(com.networkcollect.NetworkCollect.RouteInfo value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureRouteInfoIsMutable();
      routeInfo_.add(value);
    }
    /**
     * <pre>
     *路由信息
     * </pre>
     *
     * <code>repeated .RouteInfo routeInfo = 4;</code>
     */
    private void addRouteInfo(
        int index, com.networkcollect.NetworkCollect.RouteInfo value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureRouteInfoIsMutable();
      routeInfo_.add(index, value);
    }
    /**
     * <pre>
     *路由信息
     * </pre>
     *
     * <code>repeated .RouteInfo routeInfo = 4;</code>
     */
    private void addRouteInfo(
        com.networkcollect.NetworkCollect.RouteInfo.Builder builderForValue) {
      ensureRouteInfoIsMutable();
      routeInfo_.add(builderForValue.build());
    }
    /**
     * <pre>
     *路由信息
     * </pre>
     *
     * <code>repeated .RouteInfo routeInfo = 4;</code>
     */
    private void addRouteInfo(
        int index, com.networkcollect.NetworkCollect.RouteInfo.Builder builderForValue) {
      ensureRouteInfoIsMutable();
      routeInfo_.add(index, builderForValue.build());
    }
    /**
     * <pre>
     *路由信息
     * </pre>
     *
     * <code>repeated .RouteInfo routeInfo = 4;</code>
     */
    private void addAllRouteInfo(
        java.lang.Iterable<? extends com.networkcollect.NetworkCollect.RouteInfo> values) {
      ensureRouteInfoIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, routeInfo_);
    }
    /**
     * <pre>
     *路由信息
     * </pre>
     *
     * <code>repeated .RouteInfo routeInfo = 4;</code>
     */
    private void clearRouteInfo() {
      routeInfo_ = emptyProtobufList();
    }
    /**
     * <pre>
     *路由信息
     * </pre>
     *
     * <code>repeated .RouteInfo routeInfo = 4;</code>
     */
    private void removeRouteInfo(int index) {
      ensureRouteInfoIsMutable();
      routeInfo_.remove(index);
    }

    public static final int CMDDETAIL_FIELD_NUMBER = 5;
    private java.lang.String cmdDetail_;
    /**
     * <pre>
     *命令字符串
     * </pre>
     *
     * <code>string cmdDetail = 5;</code>
     */
    public java.lang.String getCmdDetail() {
      return cmdDetail_;
    }
    /**
     * <pre>
     *命令字符串
     * </pre>
     *
     * <code>string cmdDetail = 5;</code>
     */
    public com.google.protobuf.ByteString
        getCmdDetailBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(cmdDetail_);
    }
    /**
     * <pre>
     *命令字符串
     * </pre>
     *
     * <code>string cmdDetail = 5;</code>
     */
    private void setCmdDetail(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      cmdDetail_ = value;
    }
    /**
     * <pre>
     *命令字符串
     * </pre>
     *
     * <code>string cmdDetail = 5;</code>
     */
    private void clearCmdDetail() {
      
      cmdDetail_ = getDefaultInstance().getCmdDetail();
    }
    /**
     * <pre>
     *命令字符串
     * </pre>
     *
     * <code>string cmdDetail = 5;</code>
     */
    private void setCmdDetailBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      cmdDetail_ = value.toStringUtf8();
    }

    public static final int SUBNETINFO_FIELD_NUMBER = 6;
    private com.networkcollect.NetworkCollect.SubNetworkInfo subNetInfo_;
    /**
     * <pre>
     *子接口参数信息
     * </pre>
     *
     * <code>.SubNetworkInfo subNetInfo = 6;</code>
     */
    public boolean hasSubNetInfo() {
      return subNetInfo_ != null;
    }
    /**
     * <pre>
     *子接口参数信息
     * </pre>
     *
     * <code>.SubNetworkInfo subNetInfo = 6;</code>
     */
    public com.networkcollect.NetworkCollect.SubNetworkInfo getSubNetInfo() {
      return subNetInfo_ == null ? com.networkcollect.NetworkCollect.SubNetworkInfo.getDefaultInstance() : subNetInfo_;
    }
    /**
     * <pre>
     *子接口参数信息
     * </pre>
     *
     * <code>.SubNetworkInfo subNetInfo = 6;</code>
     */
    private void setSubNetInfo(com.networkcollect.NetworkCollect.SubNetworkInfo value) {
      if (value == null) {
        throw new NullPointerException();
      }
      subNetInfo_ = value;
      
      }
    /**
     * <pre>
     *子接口参数信息
     * </pre>
     *
     * <code>.SubNetworkInfo subNetInfo = 6;</code>
     */
    private void setSubNetInfo(
        com.networkcollect.NetworkCollect.SubNetworkInfo.Builder builderForValue) {
      subNetInfo_ = builderForValue.build();
      
    }
    /**
     * <pre>
     *子接口参数信息
     * </pre>
     *
     * <code>.SubNetworkInfo subNetInfo = 6;</code>
     */
    private void mergeSubNetInfo(com.networkcollect.NetworkCollect.SubNetworkInfo value) {
      if (subNetInfo_ != null &&
          subNetInfo_ != com.networkcollect.NetworkCollect.SubNetworkInfo.getDefaultInstance()) {
        subNetInfo_ =
          com.networkcollect.NetworkCollect.SubNetworkInfo.newBuilder(subNetInfo_).mergeFrom(value).buildPartial();
      } else {
        subNetInfo_ = value;
      }
      
    }
    /**
     * <pre>
     *子接口参数信息
     * </pre>
     *
     * <code>.SubNetworkInfo subNetInfo = 6;</code>
     */
    private void clearSubNetInfo() {  subNetInfo_ = null;
      
    }

    public static final int SETTYPE_FIELD_NUMBER = 7;
    private int setType_;
    /**
     * <pre>
     *设置类型
     * </pre>
     *
     * <code>.RemoteSetType setType = 7;</code>
     */
    public int getSetTypeValue() {
      return setType_;
    }
    /**
     * <pre>
     *设置类型
     * </pre>
     *
     * <code>.RemoteSetType setType = 7;</code>
     */
    public com.networkcollect.NetworkCollect.RemoteSetType getSetType() {
      com.networkcollect.NetworkCollect.RemoteSetType result = com.networkcollect.NetworkCollect.RemoteSetType.forNumber(setType_);
      return result == null ? com.networkcollect.NetworkCollect.RemoteSetType.UNRECOGNIZED : result;
    }
    /**
     * <pre>
     *设置类型
     * </pre>
     *
     * <code>.RemoteSetType setType = 7;</code>
     */
    private void setSetTypeValue(int value) {
        setType_ = value;
    }
    /**
     * <pre>
     *设置类型
     * </pre>
     *
     * <code>.RemoteSetType setType = 7;</code>
     */
    private void setSetType(com.networkcollect.NetworkCollect.RemoteSetType value) {
      if (value == null) {
        throw new NullPointerException();
      }
      
      setType_ = value.getNumber();
    }
    /**
     * <pre>
     *设置类型
     * </pre>
     *
     * <code>.RemoteSetType setType = 7;</code>
     */
    private void clearSetType() {
      
      setType_ = 0;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (cmdType_ != com.networkcollect.NetworkCollect.RemoteCmdType.RCT_INVALID.getNumber()) {
        output.writeEnum(1, cmdType_);
      }
      if (!fileName_.isEmpty()) {
        output.writeString(2, getFileName());
      }
      if (netInfo_ != null) {
        output.writeMessage(3, getNetInfo());
      }
      for (int i = 0; i < routeInfo_.size(); i++) {
        output.writeMessage(4, routeInfo_.get(i));
      }
      if (!cmdDetail_.isEmpty()) {
        output.writeString(5, getCmdDetail());
      }
      if (subNetInfo_ != null) {
        output.writeMessage(6, getSubNetInfo());
      }
      if (setType_ != com.networkcollect.NetworkCollect.RemoteSetType.RST_INVALID.getNumber()) {
        output.writeEnum(7, setType_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (cmdType_ != com.networkcollect.NetworkCollect.RemoteCmdType.RCT_INVALID.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, cmdType_);
      }
      if (!fileName_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(2, getFileName());
      }
      if (netInfo_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getNetInfo());
      }
      for (int i = 0; i < routeInfo_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, routeInfo_.get(i));
      }
      if (!cmdDetail_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(5, getCmdDetail());
      }
      if (subNetInfo_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, getSubNetInfo());
      }
      if (setType_ != com.networkcollect.NetworkCollect.RemoteSetType.RST_INVALID.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(7, setType_);
      }
      memoizedSerializedSize = size;
      return size;
    }

    public static com.networkcollect.NetworkCollect.RemoteCmdInfo parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.networkcollect.NetworkCollect.RemoteCmdInfo parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.networkcollect.NetworkCollect.RemoteCmdInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.networkcollect.NetworkCollect.RemoteCmdInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.networkcollect.NetworkCollect.RemoteCmdInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.networkcollect.NetworkCollect.RemoteCmdInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.networkcollect.NetworkCollect.RemoteCmdInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.networkcollect.NetworkCollect.RemoteCmdInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.networkcollect.NetworkCollect.RemoteCmdInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.networkcollect.NetworkCollect.RemoteCmdInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.networkcollect.NetworkCollect.RemoteCmdInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.networkcollect.NetworkCollect.RemoteCmdInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.networkcollect.NetworkCollect.RemoteCmdInfo prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * <pre>
     *远程控制命令
     * </pre>
     *
     * Protobuf type {@code RemoteCmdInfo}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.networkcollect.NetworkCollect.RemoteCmdInfo, Builder> implements
        // @@protoc_insertion_point(builder_implements:RemoteCmdInfo)
        com.networkcollect.NetworkCollect.RemoteCmdInfoOrBuilder {
      // Construct using com.networkcollect.NetworkCollect.RemoteCmdInfo.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       *命令类型
       * </pre>
       *
       * <code>.RemoteCmdType CmdType = 1;</code>
       */
      public int getCmdTypeValue() {
        return instance.getCmdTypeValue();
      }
      /**
       * <pre>
       *命令类型
       * </pre>
       *
       * <code>.RemoteCmdType CmdType = 1;</code>
       */
      public Builder setCmdTypeValue(int value) {
        copyOnWrite();
        instance.setCmdTypeValue(value);
        return this;
      }
      /**
       * <pre>
       *命令类型
       * </pre>
       *
       * <code>.RemoteCmdType CmdType = 1;</code>
       */
      public com.networkcollect.NetworkCollect.RemoteCmdType getCmdType() {
        return instance.getCmdType();
      }
      /**
       * <pre>
       *命令类型
       * </pre>
       *
       * <code>.RemoteCmdType CmdType = 1;</code>
       */
      public Builder setCmdType(com.networkcollect.NetworkCollect.RemoteCmdType value) {
        copyOnWrite();
        instance.setCmdType(value);
        return this;
      }
      /**
       * <pre>
       *命令类型
       * </pre>
       *
       * <code>.RemoteCmdType CmdType = 1;</code>
       */
      public Builder clearCmdType() {
        copyOnWrite();
        instance.clearCmdType();
        return this;
      }

      /**
       * <pre>
       *文件名称
       * </pre>
       *
       * <code>string fileName = 2;</code>
       */
      public java.lang.String getFileName() {
        return instance.getFileName();
      }
      /**
       * <pre>
       *文件名称
       * </pre>
       *
       * <code>string fileName = 2;</code>
       */
      public com.google.protobuf.ByteString
          getFileNameBytes() {
        return instance.getFileNameBytes();
      }
      /**
       * <pre>
       *文件名称
       * </pre>
       *
       * <code>string fileName = 2;</code>
       */
      public Builder setFileName(
          java.lang.String value) {
        copyOnWrite();
        instance.setFileName(value);
        return this;
      }
      /**
       * <pre>
       *文件名称
       * </pre>
       *
       * <code>string fileName = 2;</code>
       */
      public Builder clearFileName() {
        copyOnWrite();
        instance.clearFileName();
        return this;
      }
      /**
       * <pre>
       *文件名称
       * </pre>
       *
       * <code>string fileName = 2;</code>
       */
      public Builder setFileNameBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setFileNameBytes(value);
        return this;
      }

      /**
       * <pre>
       *网卡信息
       * </pre>
       *
       * <code>.AllNetInfo netInfo = 3;</code>
       */
      public boolean hasNetInfo() {
        return instance.hasNetInfo();
      }
      /**
       * <pre>
       *网卡信息
       * </pre>
       *
       * <code>.AllNetInfo netInfo = 3;</code>
       */
      public com.networkcollect.NetworkCollect.AllNetInfo getNetInfo() {
        return instance.getNetInfo();
      }
      /**
       * <pre>
       *网卡信息
       * </pre>
       *
       * <code>.AllNetInfo netInfo = 3;</code>
       */
      public Builder setNetInfo(com.networkcollect.NetworkCollect.AllNetInfo value) {
        copyOnWrite();
        instance.setNetInfo(value);
        return this;
        }
      /**
       * <pre>
       *网卡信息
       * </pre>
       *
       * <code>.AllNetInfo netInfo = 3;</code>
       */
      public Builder setNetInfo(
          com.networkcollect.NetworkCollect.AllNetInfo.Builder builderForValue) {
        copyOnWrite();
        instance.setNetInfo(builderForValue);
        return this;
      }
      /**
       * <pre>
       *网卡信息
       * </pre>
       *
       * <code>.AllNetInfo netInfo = 3;</code>
       */
      public Builder mergeNetInfo(com.networkcollect.NetworkCollect.AllNetInfo value) {
        copyOnWrite();
        instance.mergeNetInfo(value);
        return this;
      }
      /**
       * <pre>
       *网卡信息
       * </pre>
       *
       * <code>.AllNetInfo netInfo = 3;</code>
       */
      public Builder clearNetInfo() {  copyOnWrite();
        instance.clearNetInfo();
        return this;
      }

      /**
       * <pre>
       *路由信息
       * </pre>
       *
       * <code>repeated .RouteInfo routeInfo = 4;</code>
       */
      public java.util.List<com.networkcollect.NetworkCollect.RouteInfo> getRouteInfoList() {
        return java.util.Collections.unmodifiableList(
            instance.getRouteInfoList());
      }
      /**
       * <pre>
       *路由信息
       * </pre>
       *
       * <code>repeated .RouteInfo routeInfo = 4;</code>
       */
      public int getRouteInfoCount() {
        return instance.getRouteInfoCount();
      }/**
       * <pre>
       *路由信息
       * </pre>
       *
       * <code>repeated .RouteInfo routeInfo = 4;</code>
       */
      public com.networkcollect.NetworkCollect.RouteInfo getRouteInfo(int index) {
        return instance.getRouteInfo(index);
      }
      /**
       * <pre>
       *路由信息
       * </pre>
       *
       * <code>repeated .RouteInfo routeInfo = 4;</code>
       */
      public Builder setRouteInfo(
          int index, com.networkcollect.NetworkCollect.RouteInfo value) {
        copyOnWrite();
        instance.setRouteInfo(index, value);
        return this;
      }
      /**
       * <pre>
       *路由信息
       * </pre>
       *
       * <code>repeated .RouteInfo routeInfo = 4;</code>
       */
      public Builder setRouteInfo(
          int index, com.networkcollect.NetworkCollect.RouteInfo.Builder builderForValue) {
        copyOnWrite();
        instance.setRouteInfo(index, builderForValue);
        return this;
      }
      /**
       * <pre>
       *路由信息
       * </pre>
       *
       * <code>repeated .RouteInfo routeInfo = 4;</code>
       */
      public Builder addRouteInfo(com.networkcollect.NetworkCollect.RouteInfo value) {
        copyOnWrite();
        instance.addRouteInfo(value);
        return this;
      }
      /**
       * <pre>
       *路由信息
       * </pre>
       *
       * <code>repeated .RouteInfo routeInfo = 4;</code>
       */
      public Builder addRouteInfo(
          int index, com.networkcollect.NetworkCollect.RouteInfo value) {
        copyOnWrite();
        instance.addRouteInfo(index, value);
        return this;
      }
      /**
       * <pre>
       *路由信息
       * </pre>
       *
       * <code>repeated .RouteInfo routeInfo = 4;</code>
       */
      public Builder addRouteInfo(
          com.networkcollect.NetworkCollect.RouteInfo.Builder builderForValue) {
        copyOnWrite();
        instance.addRouteInfo(builderForValue);
        return this;
      }
      /**
       * <pre>
       *路由信息
       * </pre>
       *
       * <code>repeated .RouteInfo routeInfo = 4;</code>
       */
      public Builder addRouteInfo(
          int index, com.networkcollect.NetworkCollect.RouteInfo.Builder builderForValue) {
        copyOnWrite();
        instance.addRouteInfo(index, builderForValue);
        return this;
      }
      /**
       * <pre>
       *路由信息
       * </pre>
       *
       * <code>repeated .RouteInfo routeInfo = 4;</code>
       */
      public Builder addAllRouteInfo(
          java.lang.Iterable<? extends com.networkcollect.NetworkCollect.RouteInfo> values) {
        copyOnWrite();
        instance.addAllRouteInfo(values);
        return this;
      }
      /**
       * <pre>
       *路由信息
       * </pre>
       *
       * <code>repeated .RouteInfo routeInfo = 4;</code>
       */
      public Builder clearRouteInfo() {
        copyOnWrite();
        instance.clearRouteInfo();
        return this;
      }
      /**
       * <pre>
       *路由信息
       * </pre>
       *
       * <code>repeated .RouteInfo routeInfo = 4;</code>
       */
      public Builder removeRouteInfo(int index) {
        copyOnWrite();
        instance.removeRouteInfo(index);
        return this;
      }

      /**
       * <pre>
       *命令字符串
       * </pre>
       *
       * <code>string cmdDetail = 5;</code>
       */
      public java.lang.String getCmdDetail() {
        return instance.getCmdDetail();
      }
      /**
       * <pre>
       *命令字符串
       * </pre>
       *
       * <code>string cmdDetail = 5;</code>
       */
      public com.google.protobuf.ByteString
          getCmdDetailBytes() {
        return instance.getCmdDetailBytes();
      }
      /**
       * <pre>
       *命令字符串
       * </pre>
       *
       * <code>string cmdDetail = 5;</code>
       */
      public Builder setCmdDetail(
          java.lang.String value) {
        copyOnWrite();
        instance.setCmdDetail(value);
        return this;
      }
      /**
       * <pre>
       *命令字符串
       * </pre>
       *
       * <code>string cmdDetail = 5;</code>
       */
      public Builder clearCmdDetail() {
        copyOnWrite();
        instance.clearCmdDetail();
        return this;
      }
      /**
       * <pre>
       *命令字符串
       * </pre>
       *
       * <code>string cmdDetail = 5;</code>
       */
      public Builder setCmdDetailBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setCmdDetailBytes(value);
        return this;
      }

      /**
       * <pre>
       *子接口参数信息
       * </pre>
       *
       * <code>.SubNetworkInfo subNetInfo = 6;</code>
       */
      public boolean hasSubNetInfo() {
        return instance.hasSubNetInfo();
      }
      /**
       * <pre>
       *子接口参数信息
       * </pre>
       *
       * <code>.SubNetworkInfo subNetInfo = 6;</code>
       */
      public com.networkcollect.NetworkCollect.SubNetworkInfo getSubNetInfo() {
        return instance.getSubNetInfo();
      }
      /**
       * <pre>
       *子接口参数信息
       * </pre>
       *
       * <code>.SubNetworkInfo subNetInfo = 6;</code>
       */
      public Builder setSubNetInfo(com.networkcollect.NetworkCollect.SubNetworkInfo value) {
        copyOnWrite();
        instance.setSubNetInfo(value);
        return this;
        }
      /**
       * <pre>
       *子接口参数信息
       * </pre>
       *
       * <code>.SubNetworkInfo subNetInfo = 6;</code>
       */
      public Builder setSubNetInfo(
          com.networkcollect.NetworkCollect.SubNetworkInfo.Builder builderForValue) {
        copyOnWrite();
        instance.setSubNetInfo(builderForValue);
        return this;
      }
      /**
       * <pre>
       *子接口参数信息
       * </pre>
       *
       * <code>.SubNetworkInfo subNetInfo = 6;</code>
       */
      public Builder mergeSubNetInfo(com.networkcollect.NetworkCollect.SubNetworkInfo value) {
        copyOnWrite();
        instance.mergeSubNetInfo(value);
        return this;
      }
      /**
       * <pre>
       *子接口参数信息
       * </pre>
       *
       * <code>.SubNetworkInfo subNetInfo = 6;</code>
       */
      public Builder clearSubNetInfo() {  copyOnWrite();
        instance.clearSubNetInfo();
        return this;
      }

      /**
       * <pre>
       *设置类型
       * </pre>
       *
       * <code>.RemoteSetType setType = 7;</code>
       */
      public int getSetTypeValue() {
        return instance.getSetTypeValue();
      }
      /**
       * <pre>
       *设置类型
       * </pre>
       *
       * <code>.RemoteSetType setType = 7;</code>
       */
      public Builder setSetTypeValue(int value) {
        copyOnWrite();
        instance.setSetTypeValue(value);
        return this;
      }
      /**
       * <pre>
       *设置类型
       * </pre>
       *
       * <code>.RemoteSetType setType = 7;</code>
       */
      public com.networkcollect.NetworkCollect.RemoteSetType getSetType() {
        return instance.getSetType();
      }
      /**
       * <pre>
       *设置类型
       * </pre>
       *
       * <code>.RemoteSetType setType = 7;</code>
       */
      public Builder setSetType(com.networkcollect.NetworkCollect.RemoteSetType value) {
        copyOnWrite();
        instance.setSetType(value);
        return this;
      }
      /**
       * <pre>
       *设置类型
       * </pre>
       *
       * <code>.RemoteSetType setType = 7;</code>
       */
      public Builder clearSetType() {
        copyOnWrite();
        instance.clearSetType();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:RemoteCmdInfo)
    }
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.networkcollect.NetworkCollect.RemoteCmdInfo();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          routeInfo_.makeImmutable();
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.networkcollect.NetworkCollect.RemoteCmdInfo other = (com.networkcollect.NetworkCollect.RemoteCmdInfo) arg1;
          cmdType_ = visitor.visitInt(cmdType_ != 0, cmdType_,    other.cmdType_ != 0, other.cmdType_);
          fileName_ = visitor.visitString(!fileName_.isEmpty(), fileName_,
              !other.fileName_.isEmpty(), other.fileName_);
          netInfo_ = visitor.visitMessage(netInfo_, other.netInfo_);
          routeInfo_= visitor.visitList(routeInfo_, other.routeInfo_);
          cmdDetail_ = visitor.visitString(!cmdDetail_.isEmpty(), cmdDetail_,
              !other.cmdDetail_.isEmpty(), other.cmdDetail_);
          subNetInfo_ = visitor.visitMessage(subNetInfo_, other.subNetInfo_);
          setType_ = visitor.visitInt(setType_ != 0, setType_,    other.setType_ != 0, other.setType_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!input.skipField(tag)) {
                    done = true;
                  }
                  break;
                }
                case 8: {
                  int rawValue = input.readEnum();

                  cmdType_ = rawValue;
                  break;
                }
                case 18: {
                  String s = input.readStringRequireUtf8();

                  fileName_ = s;
                  break;
                }
                case 26: {
                  com.networkcollect.NetworkCollect.AllNetInfo.Builder subBuilder = null;
                  if (netInfo_ != null) {
                    subBuilder = netInfo_.toBuilder();
                  }
                  netInfo_ = input.readMessage(com.networkcollect.NetworkCollect.AllNetInfo.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(netInfo_);
                    netInfo_ = subBuilder.buildPartial();
                  }

                  break;
                }
                case 34: {
                  if (!routeInfo_.isModifiable()) {
                    routeInfo_ =
                        com.google.protobuf.GeneratedMessageLite.mutableCopy(routeInfo_);
                  }
                  routeInfo_.add(
                      input.readMessage(com.networkcollect.NetworkCollect.RouteInfo.parser(), extensionRegistry));
                  break;
                }
                case 42: {
                  String s = input.readStringRequireUtf8();

                  cmdDetail_ = s;
                  break;
                }
                case 50: {
                  com.networkcollect.NetworkCollect.SubNetworkInfo.Builder subBuilder = null;
                  if (subNetInfo_ != null) {
                    subBuilder = subNetInfo_.toBuilder();
                  }
                  subNetInfo_ = input.readMessage(com.networkcollect.NetworkCollect.SubNetworkInfo.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(subNetInfo_);
                    subNetInfo_ = subBuilder.buildPartial();
                  }

                  break;
                }
                case 56: {
                  int rawValue = input.readEnum();

                  setType_ = rawValue;
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (com.networkcollect.NetworkCollect.RemoteCmdInfo.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:RemoteCmdInfo)
    private static final com.networkcollect.NetworkCollect.RemoteCmdInfo DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new RemoteCmdInfo();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static com.networkcollect.NetworkCollect.RemoteCmdInfo getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<RemoteCmdInfo> PARSER;

    public static com.google.protobuf.Parser<RemoteCmdInfo> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface RemoteResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:RemoteResponse)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     *命令类型
     * </pre>
     *
     * <code>.RemoteCmdType CmdType = 1;</code>
     */
    int getCmdTypeValue();
    /**
     * <pre>
     *命令类型
     * </pre>
     *
     * <code>.RemoteCmdType CmdType = 1;</code>
     */
    com.networkcollect.NetworkCollect.RemoteCmdType getCmdType();

    /**
     * <pre>
     *返回消息
     * </pre>
     *
     * <code>string responseMsg = 2;</code>
     */
    java.lang.String getResponseMsg();
    /**
     * <pre>
     *返回消息
     * </pre>
     *
     * <code>string responseMsg = 2;</code>
     */
    com.google.protobuf.ByteString
        getResponseMsgBytes();

    /**
     * <pre>
     *网卡信息
     * </pre>
     *
     * <code>.AllNetInfo netInfo = 3;</code>
     */
    boolean hasNetInfo();
    /**
     * <pre>
     *网卡信息
     * </pre>
     *
     * <code>.AllNetInfo netInfo = 3;</code>
     */
    com.networkcollect.NetworkCollect.AllNetInfo getNetInfo();
  }
  /**
   * <pre>
   *远程控制回复
   * </pre>
   *
   * Protobuf type {@code RemoteResponse}
   */
  public  static final class RemoteResponse extends
      com.google.protobuf.GeneratedMessageLite<
          RemoteResponse, RemoteResponse.Builder> implements
      // @@protoc_insertion_point(message_implements:RemoteResponse)
      RemoteResponseOrBuilder {
    private RemoteResponse() {
      responseMsg_ = "";
    }
    public static final int CMDTYPE_FIELD_NUMBER = 1;
    private int cmdType_;
    /**
     * <pre>
     *命令类型
     * </pre>
     *
     * <code>.RemoteCmdType CmdType = 1;</code>
     */
    public int getCmdTypeValue() {
      return cmdType_;
    }
    /**
     * <pre>
     *命令类型
     * </pre>
     *
     * <code>.RemoteCmdType CmdType = 1;</code>
     */
    public com.networkcollect.NetworkCollect.RemoteCmdType getCmdType() {
      com.networkcollect.NetworkCollect.RemoteCmdType result = com.networkcollect.NetworkCollect.RemoteCmdType.forNumber(cmdType_);
      return result == null ? com.networkcollect.NetworkCollect.RemoteCmdType.UNRECOGNIZED : result;
    }
    /**
     * <pre>
     *命令类型
     * </pre>
     *
     * <code>.RemoteCmdType CmdType = 1;</code>
     */
    private void setCmdTypeValue(int value) {
        cmdType_ = value;
    }
    /**
     * <pre>
     *命令类型
     * </pre>
     *
     * <code>.RemoteCmdType CmdType = 1;</code>
     */
    private void setCmdType(com.networkcollect.NetworkCollect.RemoteCmdType value) {
      if (value == null) {
        throw new NullPointerException();
      }
      
      cmdType_ = value.getNumber();
    }
    /**
     * <pre>
     *命令类型
     * </pre>
     *
     * <code>.RemoteCmdType CmdType = 1;</code>
     */
    private void clearCmdType() {
      
      cmdType_ = 0;
    }

    public static final int RESPONSEMSG_FIELD_NUMBER = 2;
    private java.lang.String responseMsg_;
    /**
     * <pre>
     *返回消息
     * </pre>
     *
     * <code>string responseMsg = 2;</code>
     */
    public java.lang.String getResponseMsg() {
      return responseMsg_;
    }
    /**
     * <pre>
     *返回消息
     * </pre>
     *
     * <code>string responseMsg = 2;</code>
     */
    public com.google.protobuf.ByteString
        getResponseMsgBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(responseMsg_);
    }
    /**
     * <pre>
     *返回消息
     * </pre>
     *
     * <code>string responseMsg = 2;</code>
     */
    private void setResponseMsg(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      responseMsg_ = value;
    }
    /**
     * <pre>
     *返回消息
     * </pre>
     *
     * <code>string responseMsg = 2;</code>
     */
    private void clearResponseMsg() {
      
      responseMsg_ = getDefaultInstance().getResponseMsg();
    }
    /**
     * <pre>
     *返回消息
     * </pre>
     *
     * <code>string responseMsg = 2;</code>
     */
    private void setResponseMsgBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      responseMsg_ = value.toStringUtf8();
    }

    public static final int NETINFO_FIELD_NUMBER = 3;
    private com.networkcollect.NetworkCollect.AllNetInfo netInfo_;
    /**
     * <pre>
     *网卡信息
     * </pre>
     *
     * <code>.AllNetInfo netInfo = 3;</code>
     */
    public boolean hasNetInfo() {
      return netInfo_ != null;
    }
    /**
     * <pre>
     *网卡信息
     * </pre>
     *
     * <code>.AllNetInfo netInfo = 3;</code>
     */
    public com.networkcollect.NetworkCollect.AllNetInfo getNetInfo() {
      return netInfo_ == null ? com.networkcollect.NetworkCollect.AllNetInfo.getDefaultInstance() : netInfo_;
    }
    /**
     * <pre>
     *网卡信息
     * </pre>
     *
     * <code>.AllNetInfo netInfo = 3;</code>
     */
    private void setNetInfo(com.networkcollect.NetworkCollect.AllNetInfo value) {
      if (value == null) {
        throw new NullPointerException();
      }
      netInfo_ = value;
      
      }
    /**
     * <pre>
     *网卡信息
     * </pre>
     *
     * <code>.AllNetInfo netInfo = 3;</code>
     */
    private void setNetInfo(
        com.networkcollect.NetworkCollect.AllNetInfo.Builder builderForValue) {
      netInfo_ = builderForValue.build();
      
    }
    /**
     * <pre>
     *网卡信息
     * </pre>
     *
     * <code>.AllNetInfo netInfo = 3;</code>
     */
    private void mergeNetInfo(com.networkcollect.NetworkCollect.AllNetInfo value) {
      if (netInfo_ != null &&
          netInfo_ != com.networkcollect.NetworkCollect.AllNetInfo.getDefaultInstance()) {
        netInfo_ =
          com.networkcollect.NetworkCollect.AllNetInfo.newBuilder(netInfo_).mergeFrom(value).buildPartial();
      } else {
        netInfo_ = value;
      }
      
    }
    /**
     * <pre>
     *网卡信息
     * </pre>
     *
     * <code>.AllNetInfo netInfo = 3;</code>
     */
    private void clearNetInfo() {  netInfo_ = null;
      
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (cmdType_ != com.networkcollect.NetworkCollect.RemoteCmdType.RCT_INVALID.getNumber()) {
        output.writeEnum(1, cmdType_);
      }
      if (!responseMsg_.isEmpty()) {
        output.writeString(2, getResponseMsg());
      }
      if (netInfo_ != null) {
        output.writeMessage(3, getNetInfo());
      }
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (cmdType_ != com.networkcollect.NetworkCollect.RemoteCmdType.RCT_INVALID.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, cmdType_);
      }
      if (!responseMsg_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(2, getResponseMsg());
      }
      if (netInfo_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getNetInfo());
      }
      memoizedSerializedSize = size;
      return size;
    }

    public static com.networkcollect.NetworkCollect.RemoteResponse parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.networkcollect.NetworkCollect.RemoteResponse parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.networkcollect.NetworkCollect.RemoteResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.networkcollect.NetworkCollect.RemoteResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.networkcollect.NetworkCollect.RemoteResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.networkcollect.NetworkCollect.RemoteResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.networkcollect.NetworkCollect.RemoteResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.networkcollect.NetworkCollect.RemoteResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.networkcollect.NetworkCollect.RemoteResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.networkcollect.NetworkCollect.RemoteResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.networkcollect.NetworkCollect.RemoteResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.networkcollect.NetworkCollect.RemoteResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.networkcollect.NetworkCollect.RemoteResponse prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * <pre>
     *远程控制回复
     * </pre>
     *
     * Protobuf type {@code RemoteResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.networkcollect.NetworkCollect.RemoteResponse, Builder> implements
        // @@protoc_insertion_point(builder_implements:RemoteResponse)
        com.networkcollect.NetworkCollect.RemoteResponseOrBuilder {
      // Construct using com.networkcollect.NetworkCollect.RemoteResponse.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       *命令类型
       * </pre>
       *
       * <code>.RemoteCmdType CmdType = 1;</code>
       */
      public int getCmdTypeValue() {
        return instance.getCmdTypeValue();
      }
      /**
       * <pre>
       *命令类型
       * </pre>
       *
       * <code>.RemoteCmdType CmdType = 1;</code>
       */
      public Builder setCmdTypeValue(int value) {
        copyOnWrite();
        instance.setCmdTypeValue(value);
        return this;
      }
      /**
       * <pre>
       *命令类型
       * </pre>
       *
       * <code>.RemoteCmdType CmdType = 1;</code>
       */
      public com.networkcollect.NetworkCollect.RemoteCmdType getCmdType() {
        return instance.getCmdType();
      }
      /**
       * <pre>
       *命令类型
       * </pre>
       *
       * <code>.RemoteCmdType CmdType = 1;</code>
       */
      public Builder setCmdType(com.networkcollect.NetworkCollect.RemoteCmdType value) {
        copyOnWrite();
        instance.setCmdType(value);
        return this;
      }
      /**
       * <pre>
       *命令类型
       * </pre>
       *
       * <code>.RemoteCmdType CmdType = 1;</code>
       */
      public Builder clearCmdType() {
        copyOnWrite();
        instance.clearCmdType();
        return this;
      }

      /**
       * <pre>
       *返回消息
       * </pre>
       *
       * <code>string responseMsg = 2;</code>
       */
      public java.lang.String getResponseMsg() {
        return instance.getResponseMsg();
      }
      /**
       * <pre>
       *返回消息
       * </pre>
       *
       * <code>string responseMsg = 2;</code>
       */
      public com.google.protobuf.ByteString
          getResponseMsgBytes() {
        return instance.getResponseMsgBytes();
      }
      /**
       * <pre>
       *返回消息
       * </pre>
       *
       * <code>string responseMsg = 2;</code>
       */
      public Builder setResponseMsg(
          java.lang.String value) {
        copyOnWrite();
        instance.setResponseMsg(value);
        return this;
      }
      /**
       * <pre>
       *返回消息
       * </pre>
       *
       * <code>string responseMsg = 2;</code>
       */
      public Builder clearResponseMsg() {
        copyOnWrite();
        instance.clearResponseMsg();
        return this;
      }
      /**
       * <pre>
       *返回消息
       * </pre>
       *
       * <code>string responseMsg = 2;</code>
       */
      public Builder setResponseMsgBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setResponseMsgBytes(value);
        return this;
      }

      /**
       * <pre>
       *网卡信息
       * </pre>
       *
       * <code>.AllNetInfo netInfo = 3;</code>
       */
      public boolean hasNetInfo() {
        return instance.hasNetInfo();
      }
      /**
       * <pre>
       *网卡信息
       * </pre>
       *
       * <code>.AllNetInfo netInfo = 3;</code>
       */
      public com.networkcollect.NetworkCollect.AllNetInfo getNetInfo() {
        return instance.getNetInfo();
      }
      /**
       * <pre>
       *网卡信息
       * </pre>
       *
       * <code>.AllNetInfo netInfo = 3;</code>
       */
      public Builder setNetInfo(com.networkcollect.NetworkCollect.AllNetInfo value) {
        copyOnWrite();
        instance.setNetInfo(value);
        return this;
        }
      /**
       * <pre>
       *网卡信息
       * </pre>
       *
       * <code>.AllNetInfo netInfo = 3;</code>
       */
      public Builder setNetInfo(
          com.networkcollect.NetworkCollect.AllNetInfo.Builder builderForValue) {
        copyOnWrite();
        instance.setNetInfo(builderForValue);
        return this;
      }
      /**
       * <pre>
       *网卡信息
       * </pre>
       *
       * <code>.AllNetInfo netInfo = 3;</code>
       */
      public Builder mergeNetInfo(com.networkcollect.NetworkCollect.AllNetInfo value) {
        copyOnWrite();
        instance.mergeNetInfo(value);
        return this;
      }
      /**
       * <pre>
       *网卡信息
       * </pre>
       *
       * <code>.AllNetInfo netInfo = 3;</code>
       */
      public Builder clearNetInfo() {  copyOnWrite();
        instance.clearNetInfo();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:RemoteResponse)
    }
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.networkcollect.NetworkCollect.RemoteResponse();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.networkcollect.NetworkCollect.RemoteResponse other = (com.networkcollect.NetworkCollect.RemoteResponse) arg1;
          cmdType_ = visitor.visitInt(cmdType_ != 0, cmdType_,    other.cmdType_ != 0, other.cmdType_);
          responseMsg_ = visitor.visitString(!responseMsg_.isEmpty(), responseMsg_,
              !other.responseMsg_.isEmpty(), other.responseMsg_);
          netInfo_ = visitor.visitMessage(netInfo_, other.netInfo_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!input.skipField(tag)) {
                    done = true;
                  }
                  break;
                }
                case 8: {
                  int rawValue = input.readEnum();

                  cmdType_ = rawValue;
                  break;
                }
                case 18: {
                  String s = input.readStringRequireUtf8();

                  responseMsg_ = s;
                  break;
                }
                case 26: {
                  com.networkcollect.NetworkCollect.AllNetInfo.Builder subBuilder = null;
                  if (netInfo_ != null) {
                    subBuilder = netInfo_.toBuilder();
                  }
                  netInfo_ = input.readMessage(com.networkcollect.NetworkCollect.AllNetInfo.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(netInfo_);
                    netInfo_ = subBuilder.buildPartial();
                  }

                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (com.networkcollect.NetworkCollect.RemoteResponse.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:RemoteResponse)
    private static final com.networkcollect.NetworkCollect.RemoteResponse DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new RemoteResponse();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static com.networkcollect.NetworkCollect.RemoteResponse getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<RemoteResponse> PARSER;

    public static com.google.protobuf.Parser<RemoteResponse> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface OriginalSyslogOrBuilder extends
      // @@protoc_insertion_point(interface_extends:OriginalSyslog)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     *装置guid
     * </pre>
     *
     * <code>string deviceId = 1;</code>
     */
    java.lang.String getDeviceId();
    /**
     * <pre>
     *装置guid
     * </pre>
     *
     * <code>string deviceId = 1;</code>
     */
    com.google.protobuf.ByteString
        getDeviceIdBytes();

    /**
     * <pre>
     *资产id
     * </pre>
     *
     * <code>string assetId = 2;</code>
     */
    java.lang.String getAssetId();
    /**
     * <pre>
     *资产id
     * </pre>
     *
     * <code>string assetId = 2;</code>
     */
    com.google.protobuf.ByteString
        getAssetIdBytes();

    /**
     * <pre>
     *时间
     * </pre>
     *
     * <code>int32 time = 3;</code>
     */
    int getTime();

    /**
     * <pre>
     *日志内容
     * </pre>
     *
     * <code>string logDetail = 4;</code>
     */
    java.lang.String getLogDetail();
    /**
     * <pre>
     *日志内容
     * </pre>
     *
     * <code>string logDetail = 4;</code>
     */
    com.google.protobuf.ByteString
        getLogDetailBytes();
  }
  /**
   * <pre>
   *原始日志
   * </pre>
   *
   * Protobuf type {@code OriginalSyslog}
   */
  public  static final class OriginalSyslog extends
      com.google.protobuf.GeneratedMessageLite<
          OriginalSyslog, OriginalSyslog.Builder> implements
      // @@protoc_insertion_point(message_implements:OriginalSyslog)
      OriginalSyslogOrBuilder {
    private OriginalSyslog() {
      deviceId_ = "";
      assetId_ = "";
      logDetail_ = "";
    }
    public static final int DEVICEID_FIELD_NUMBER = 1;
    private java.lang.String deviceId_;
    /**
     * <pre>
     *装置guid
     * </pre>
     *
     * <code>string deviceId = 1;</code>
     */
    public java.lang.String getDeviceId() {
      return deviceId_;
    }
    /**
     * <pre>
     *装置guid
     * </pre>
     *
     * <code>string deviceId = 1;</code>
     */
    public com.google.protobuf.ByteString
        getDeviceIdBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(deviceId_);
    }
    /**
     * <pre>
     *装置guid
     * </pre>
     *
     * <code>string deviceId = 1;</code>
     */
    private void setDeviceId(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      deviceId_ = value;
    }
    /**
     * <pre>
     *装置guid
     * </pre>
     *
     * <code>string deviceId = 1;</code>
     */
    private void clearDeviceId() {
      
      deviceId_ = getDefaultInstance().getDeviceId();
    }
    /**
     * <pre>
     *装置guid
     * </pre>
     *
     * <code>string deviceId = 1;</code>
     */
    private void setDeviceIdBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      deviceId_ = value.toStringUtf8();
    }

    public static final int ASSETID_FIELD_NUMBER = 2;
    private java.lang.String assetId_;
    /**
     * <pre>
     *资产id
     * </pre>
     *
     * <code>string assetId = 2;</code>
     */
    public java.lang.String getAssetId() {
      return assetId_;
    }
    /**
     * <pre>
     *资产id
     * </pre>
     *
     * <code>string assetId = 2;</code>
     */
    public com.google.protobuf.ByteString
        getAssetIdBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(assetId_);
    }
    /**
     * <pre>
     *资产id
     * </pre>
     *
     * <code>string assetId = 2;</code>
     */
    private void setAssetId(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      assetId_ = value;
    }
    /**
     * <pre>
     *资产id
     * </pre>
     *
     * <code>string assetId = 2;</code>
     */
    private void clearAssetId() {
      
      assetId_ = getDefaultInstance().getAssetId();
    }
    /**
     * <pre>
     *资产id
     * </pre>
     *
     * <code>string assetId = 2;</code>
     */
    private void setAssetIdBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      assetId_ = value.toStringUtf8();
    }

    public static final int TIME_FIELD_NUMBER = 3;
    private int time_;
    /**
     * <pre>
     *时间
     * </pre>
     *
     * <code>int32 time = 3;</code>
     */
    public int getTime() {
      return time_;
    }
    /**
     * <pre>
     *时间
     * </pre>
     *
     * <code>int32 time = 3;</code>
     */
    private void setTime(int value) {
      
      time_ = value;
    }
    /**
     * <pre>
     *时间
     * </pre>
     *
     * <code>int32 time = 3;</code>
     */
    private void clearTime() {
      
      time_ = 0;
    }

    public static final int LOGDETAIL_FIELD_NUMBER = 4;
    private java.lang.String logDetail_;
    /**
     * <pre>
     *日志内容
     * </pre>
     *
     * <code>string logDetail = 4;</code>
     */
    public java.lang.String getLogDetail() {
      return logDetail_;
    }
    /**
     * <pre>
     *日志内容
     * </pre>
     *
     * <code>string logDetail = 4;</code>
     */
    public com.google.protobuf.ByteString
        getLogDetailBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(logDetail_);
    }
    /**
     * <pre>
     *日志内容
     * </pre>
     *
     * <code>string logDetail = 4;</code>
     */
    private void setLogDetail(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      logDetail_ = value;
    }
    /**
     * <pre>
     *日志内容
     * </pre>
     *
     * <code>string logDetail = 4;</code>
     */
    private void clearLogDetail() {
      
      logDetail_ = getDefaultInstance().getLogDetail();
    }
    /**
     * <pre>
     *日志内容
     * </pre>
     *
     * <code>string logDetail = 4;</code>
     */
    private void setLogDetailBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      logDetail_ = value.toStringUtf8();
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!deviceId_.isEmpty()) {
        output.writeString(1, getDeviceId());
      }
      if (!assetId_.isEmpty()) {
        output.writeString(2, getAssetId());
      }
      if (time_ != 0) {
        output.writeInt32(3, time_);
      }
      if (!logDetail_.isEmpty()) {
        output.writeString(4, getLogDetail());
      }
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (!deviceId_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getDeviceId());
      }
      if (!assetId_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(2, getAssetId());
      }
      if (time_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, time_);
      }
      if (!logDetail_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(4, getLogDetail());
      }
      memoizedSerializedSize = size;
      return size;
    }

    public static com.networkcollect.NetworkCollect.OriginalSyslog parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.networkcollect.NetworkCollect.OriginalSyslog parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.networkcollect.NetworkCollect.OriginalSyslog parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.networkcollect.NetworkCollect.OriginalSyslog parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.networkcollect.NetworkCollect.OriginalSyslog parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.networkcollect.NetworkCollect.OriginalSyslog parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.networkcollect.NetworkCollect.OriginalSyslog parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.networkcollect.NetworkCollect.OriginalSyslog parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.networkcollect.NetworkCollect.OriginalSyslog parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.networkcollect.NetworkCollect.OriginalSyslog parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.networkcollect.NetworkCollect.OriginalSyslog parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.networkcollect.NetworkCollect.OriginalSyslog parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.networkcollect.NetworkCollect.OriginalSyslog prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * <pre>
     *原始日志
     * </pre>
     *
     * Protobuf type {@code OriginalSyslog}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.networkcollect.NetworkCollect.OriginalSyslog, Builder> implements
        // @@protoc_insertion_point(builder_implements:OriginalSyslog)
        com.networkcollect.NetworkCollect.OriginalSyslogOrBuilder {
      // Construct using com.networkcollect.NetworkCollect.OriginalSyslog.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       *装置guid
       * </pre>
       *
       * <code>string deviceId = 1;</code>
       */
      public java.lang.String getDeviceId() {
        return instance.getDeviceId();
      }
      /**
       * <pre>
       *装置guid
       * </pre>
       *
       * <code>string deviceId = 1;</code>
       */
      public com.google.protobuf.ByteString
          getDeviceIdBytes() {
        return instance.getDeviceIdBytes();
      }
      /**
       * <pre>
       *装置guid
       * </pre>
       *
       * <code>string deviceId = 1;</code>
       */
      public Builder setDeviceId(
          java.lang.String value) {
        copyOnWrite();
        instance.setDeviceId(value);
        return this;
      }
      /**
       * <pre>
       *装置guid
       * </pre>
       *
       * <code>string deviceId = 1;</code>
       */
      public Builder clearDeviceId() {
        copyOnWrite();
        instance.clearDeviceId();
        return this;
      }
      /**
       * <pre>
       *装置guid
       * </pre>
       *
       * <code>string deviceId = 1;</code>
       */
      public Builder setDeviceIdBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setDeviceIdBytes(value);
        return this;
      }

      /**
       * <pre>
       *资产id
       * </pre>
       *
       * <code>string assetId = 2;</code>
       */
      public java.lang.String getAssetId() {
        return instance.getAssetId();
      }
      /**
       * <pre>
       *资产id
       * </pre>
       *
       * <code>string assetId = 2;</code>
       */
      public com.google.protobuf.ByteString
          getAssetIdBytes() {
        return instance.getAssetIdBytes();
      }
      /**
       * <pre>
       *资产id
       * </pre>
       *
       * <code>string assetId = 2;</code>
       */
      public Builder setAssetId(
          java.lang.String value) {
        copyOnWrite();
        instance.setAssetId(value);
        return this;
      }
      /**
       * <pre>
       *资产id
       * </pre>
       *
       * <code>string assetId = 2;</code>
       */
      public Builder clearAssetId() {
        copyOnWrite();
        instance.clearAssetId();
        return this;
      }
      /**
       * <pre>
       *资产id
       * </pre>
       *
       * <code>string assetId = 2;</code>
       */
      public Builder setAssetIdBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setAssetIdBytes(value);
        return this;
      }

      /**
       * <pre>
       *时间
       * </pre>
       *
       * <code>int32 time = 3;</code>
       */
      public int getTime() {
        return instance.getTime();
      }
      /**
       * <pre>
       *时间
       * </pre>
       *
       * <code>int32 time = 3;</code>
       */
      public Builder setTime(int value) {
        copyOnWrite();
        instance.setTime(value);
        return this;
      }
      /**
       * <pre>
       *时间
       * </pre>
       *
       * <code>int32 time = 3;</code>
       */
      public Builder clearTime() {
        copyOnWrite();
        instance.clearTime();
        return this;
      }

      /**
       * <pre>
       *日志内容
       * </pre>
       *
       * <code>string logDetail = 4;</code>
       */
      public java.lang.String getLogDetail() {
        return instance.getLogDetail();
      }
      /**
       * <pre>
       *日志内容
       * </pre>
       *
       * <code>string logDetail = 4;</code>
       */
      public com.google.protobuf.ByteString
          getLogDetailBytes() {
        return instance.getLogDetailBytes();
      }
      /**
       * <pre>
       *日志内容
       * </pre>
       *
       * <code>string logDetail = 4;</code>
       */
      public Builder setLogDetail(
          java.lang.String value) {
        copyOnWrite();
        instance.setLogDetail(value);
        return this;
      }
      /**
       * <pre>
       *日志内容
       * </pre>
       *
       * <code>string logDetail = 4;</code>
       */
      public Builder clearLogDetail() {
        copyOnWrite();
        instance.clearLogDetail();
        return this;
      }
      /**
       * <pre>
       *日志内容
       * </pre>
       *
       * <code>string logDetail = 4;</code>
       */
      public Builder setLogDetailBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setLogDetailBytes(value);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:OriginalSyslog)
    }
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.networkcollect.NetworkCollect.OriginalSyslog();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.networkcollect.NetworkCollect.OriginalSyslog other = (com.networkcollect.NetworkCollect.OriginalSyslog) arg1;
          deviceId_ = visitor.visitString(!deviceId_.isEmpty(), deviceId_,
              !other.deviceId_.isEmpty(), other.deviceId_);
          assetId_ = visitor.visitString(!assetId_.isEmpty(), assetId_,
              !other.assetId_.isEmpty(), other.assetId_);
          time_ = visitor.visitInt(time_ != 0, time_,
              other.time_ != 0, other.time_);
          logDetail_ = visitor.visitString(!logDetail_.isEmpty(), logDetail_,
              !other.logDetail_.isEmpty(), other.logDetail_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!input.skipField(tag)) {
                    done = true;
                  }
                  break;
                }
                case 10: {
                  String s = input.readStringRequireUtf8();

                  deviceId_ = s;
                  break;
                }
                case 18: {
                  String s = input.readStringRequireUtf8();

                  assetId_ = s;
                  break;
                }
                case 24: {

                  time_ = input.readInt32();
                  break;
                }
                case 34: {
                  String s = input.readStringRequireUtf8();

                  logDetail_ = s;
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (com.networkcollect.NetworkCollect.OriginalSyslog.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:OriginalSyslog)
    private static final com.networkcollect.NetworkCollect.OriginalSyslog DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new OriginalSyslog();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static com.networkcollect.NetworkCollect.OriginalSyslog getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<OriginalSyslog> PARSER;

    public static com.google.protobuf.Parser<OriginalSyslog> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface RestoreFileOrBuilder extends
      // @@protoc_insertion_point(interface_extends:RestoreFile)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>string logDetail = 1;</code>
     */
    java.lang.String getLogDetail();
    /**
     * <code>string logDetail = 1;</code>
     */
    com.google.protobuf.ByteString
        getLogDetailBytes();
  }
  /**
   * <pre>
   *还原文件
   * </pre>
   *
   * Protobuf type {@code RestoreFile}
   */
  public  static final class RestoreFile extends
      com.google.protobuf.GeneratedMessageLite<
          RestoreFile, RestoreFile.Builder> implements
      // @@protoc_insertion_point(message_implements:RestoreFile)
      RestoreFileOrBuilder {
    private RestoreFile() {
      logDetail_ = "";
    }
    public static final int LOGDETAIL_FIELD_NUMBER = 1;
    private java.lang.String logDetail_;
    /**
     * <code>string logDetail = 1;</code>
     */
    public java.lang.String getLogDetail() {
      return logDetail_;
    }
    /**
     * <code>string logDetail = 1;</code>
     */
    public com.google.protobuf.ByteString
        getLogDetailBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(logDetail_);
    }
    /**
     * <code>string logDetail = 1;</code>
     */
    private void setLogDetail(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      logDetail_ = value;
    }
    /**
     * <code>string logDetail = 1;</code>
     */
    private void clearLogDetail() {
      
      logDetail_ = getDefaultInstance().getLogDetail();
    }
    /**
     * <code>string logDetail = 1;</code>
     */
    private void setLogDetailBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      logDetail_ = value.toStringUtf8();
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!logDetail_.isEmpty()) {
        output.writeString(1, getLogDetail());
      }
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (!logDetail_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getLogDetail());
      }
      memoizedSerializedSize = size;
      return size;
    }

    public static com.networkcollect.NetworkCollect.RestoreFile parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.networkcollect.NetworkCollect.RestoreFile parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.networkcollect.NetworkCollect.RestoreFile parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.networkcollect.NetworkCollect.RestoreFile parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.networkcollect.NetworkCollect.RestoreFile parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.networkcollect.NetworkCollect.RestoreFile parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.networkcollect.NetworkCollect.RestoreFile parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.networkcollect.NetworkCollect.RestoreFile parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.networkcollect.NetworkCollect.RestoreFile parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.networkcollect.NetworkCollect.RestoreFile parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.networkcollect.NetworkCollect.RestoreFile parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.networkcollect.NetworkCollect.RestoreFile parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.networkcollect.NetworkCollect.RestoreFile prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * <pre>
     *还原文件
     * </pre>
     *
     * Protobuf type {@code RestoreFile}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.networkcollect.NetworkCollect.RestoreFile, Builder> implements
        // @@protoc_insertion_point(builder_implements:RestoreFile)
        com.networkcollect.NetworkCollect.RestoreFileOrBuilder {
      // Construct using com.networkcollect.NetworkCollect.RestoreFile.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>string logDetail = 1;</code>
       */
      public java.lang.String getLogDetail() {
        return instance.getLogDetail();
      }
      /**
       * <code>string logDetail = 1;</code>
       */
      public com.google.protobuf.ByteString
          getLogDetailBytes() {
        return instance.getLogDetailBytes();
      }
      /**
       * <code>string logDetail = 1;</code>
       */
      public Builder setLogDetail(
          java.lang.String value) {
        copyOnWrite();
        instance.setLogDetail(value);
        return this;
      }
      /**
       * <code>string logDetail = 1;</code>
       */
      public Builder clearLogDetail() {
        copyOnWrite();
        instance.clearLogDetail();
        return this;
      }
      /**
       * <code>string logDetail = 1;</code>
       */
      public Builder setLogDetailBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setLogDetailBytes(value);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:RestoreFile)
    }
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.networkcollect.NetworkCollect.RestoreFile();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.networkcollect.NetworkCollect.RestoreFile other = (com.networkcollect.NetworkCollect.RestoreFile) arg1;
          logDetail_ = visitor.visitString(!logDetail_.isEmpty(), logDetail_,
              !other.logDetail_.isEmpty(), other.logDetail_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!input.skipField(tag)) {
                    done = true;
                  }
                  break;
                }
                case 10: {
                  String s = input.readStringRequireUtf8();

                  logDetail_ = s;
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (com.networkcollect.NetworkCollect.RestoreFile.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:RestoreFile)
    private static final com.networkcollect.NetworkCollect.RestoreFile DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new RestoreFile();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static com.networkcollect.NetworkCollect.RestoreFile getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<RestoreFile> PARSER;

    public static com.google.protobuf.Parser<RestoreFile> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface NmapInfoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:NmapInfo)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>string logDetail = 1;</code>
     */
    java.lang.String getLogDetail();
    /**
     * <code>string logDetail = 1;</code>
     */
    com.google.protobuf.ByteString
        getLogDetailBytes();
  }
  /**
   * <pre>
   *网络自动扫描 
   * </pre>
   *
   * Protobuf type {@code NmapInfo}
   */
  public  static final class NmapInfo extends
      com.google.protobuf.GeneratedMessageLite<
          NmapInfo, NmapInfo.Builder> implements
      // @@protoc_insertion_point(message_implements:NmapInfo)
      NmapInfoOrBuilder {
    private NmapInfo() {
      logDetail_ = "";
    }
    public static final int LOGDETAIL_FIELD_NUMBER = 1;
    private java.lang.String logDetail_;
    /**
     * <code>string logDetail = 1;</code>
     */
    public java.lang.String getLogDetail() {
      return logDetail_;
    }
    /**
     * <code>string logDetail = 1;</code>
     */
    public com.google.protobuf.ByteString
        getLogDetailBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(logDetail_);
    }
    /**
     * <code>string logDetail = 1;</code>
     */
    private void setLogDetail(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      logDetail_ = value;
    }
    /**
     * <code>string logDetail = 1;</code>
     */
    private void clearLogDetail() {
      
      logDetail_ = getDefaultInstance().getLogDetail();
    }
    /**
     * <code>string logDetail = 1;</code>
     */
    private void setLogDetailBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      logDetail_ = value.toStringUtf8();
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!logDetail_.isEmpty()) {
        output.writeString(1, getLogDetail());
      }
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (!logDetail_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getLogDetail());
      }
      memoizedSerializedSize = size;
      return size;
    }

    public static com.networkcollect.NetworkCollect.NmapInfo parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.networkcollect.NetworkCollect.NmapInfo parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.networkcollect.NetworkCollect.NmapInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.networkcollect.NetworkCollect.NmapInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.networkcollect.NetworkCollect.NmapInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.networkcollect.NetworkCollect.NmapInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.networkcollect.NetworkCollect.NmapInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.networkcollect.NetworkCollect.NmapInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.networkcollect.NetworkCollect.NmapInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.networkcollect.NetworkCollect.NmapInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.networkcollect.NetworkCollect.NmapInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.networkcollect.NetworkCollect.NmapInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.networkcollect.NetworkCollect.NmapInfo prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * <pre>
     *网络自动扫描 
     * </pre>
     *
     * Protobuf type {@code NmapInfo}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.networkcollect.NetworkCollect.NmapInfo, Builder> implements
        // @@protoc_insertion_point(builder_implements:NmapInfo)
        com.networkcollect.NetworkCollect.NmapInfoOrBuilder {
      // Construct using com.networkcollect.NetworkCollect.NmapInfo.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>string logDetail = 1;</code>
       */
      public java.lang.String getLogDetail() {
        return instance.getLogDetail();
      }
      /**
       * <code>string logDetail = 1;</code>
       */
      public com.google.protobuf.ByteString
          getLogDetailBytes() {
        return instance.getLogDetailBytes();
      }
      /**
       * <code>string logDetail = 1;</code>
       */
      public Builder setLogDetail(
          java.lang.String value) {
        copyOnWrite();
        instance.setLogDetail(value);
        return this;
      }
      /**
       * <code>string logDetail = 1;</code>
       */
      public Builder clearLogDetail() {
        copyOnWrite();
        instance.clearLogDetail();
        return this;
      }
      /**
       * <code>string logDetail = 1;</code>
       */
      public Builder setLogDetailBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setLogDetailBytes(value);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:NmapInfo)
    }
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.networkcollect.NetworkCollect.NmapInfo();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.networkcollect.NetworkCollect.NmapInfo other = (com.networkcollect.NetworkCollect.NmapInfo) arg1;
          logDetail_ = visitor.visitString(!logDetail_.isEmpty(), logDetail_,
              !other.logDetail_.isEmpty(), other.logDetail_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!input.skipField(tag)) {
                    done = true;
                  }
                  break;
                }
                case 10: {
                  String s = input.readStringRequireUtf8();

                  logDetail_ = s;
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (com.networkcollect.NetworkCollect.NmapInfo.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:NmapInfo)
    private static final com.networkcollect.NetworkCollect.NmapInfo DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new NmapInfo();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static com.networkcollect.NetworkCollect.NmapInfo getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<NmapInfo> PARSER;

    public static com.google.protobuf.Parser<NmapInfo> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface SubMainStationDataOrBuilder extends
      // @@protoc_insertion_point(interface_extends:SubMainStationData)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>string dataStr = 1;</code>
     */
    java.lang.String getDataStr();
    /**
     * <code>string dataStr = 1;</code>
     */
    com.google.protobuf.ByteString
        getDataStrBytes();

    /**
     * <code>string logStr = 2;</code>
     */
    java.lang.String getLogStr();
    /**
     * <code>string logStr = 2;</code>
     */
    com.google.protobuf.ByteString
        getLogStrBytes();
  }
  /**
   * <pre>
   *上送副主站的数据
   * </pre>
   *
   * Protobuf type {@code SubMainStationData}
   */
  public  static final class SubMainStationData extends
      com.google.protobuf.GeneratedMessageLite<
          SubMainStationData, SubMainStationData.Builder> implements
      // @@protoc_insertion_point(message_implements:SubMainStationData)
      SubMainStationDataOrBuilder {
    private SubMainStationData() {
      dataStr_ = "";
      logStr_ = "";
    }
    public static final int DATASTR_FIELD_NUMBER = 1;
    private java.lang.String dataStr_;
    /**
     * <code>string dataStr = 1;</code>
     */
    public java.lang.String getDataStr() {
      return dataStr_;
    }
    /**
     * <code>string dataStr = 1;</code>
     */
    public com.google.protobuf.ByteString
        getDataStrBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(dataStr_);
    }
    /**
     * <code>string dataStr = 1;</code>
     */
    private void setDataStr(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      dataStr_ = value;
    }
    /**
     * <code>string dataStr = 1;</code>
     */
    private void clearDataStr() {
      
      dataStr_ = getDefaultInstance().getDataStr();
    }
    /**
     * <code>string dataStr = 1;</code>
     */
    private void setDataStrBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      dataStr_ = value.toStringUtf8();
    }

    public static final int LOGSTR_FIELD_NUMBER = 2;
    private java.lang.String logStr_;
    /**
     * <code>string logStr = 2;</code>
     */
    public java.lang.String getLogStr() {
      return logStr_;
    }
    /**
     * <code>string logStr = 2;</code>
     */
    public com.google.protobuf.ByteString
        getLogStrBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(logStr_);
    }
    /**
     * <code>string logStr = 2;</code>
     */
    private void setLogStr(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      logStr_ = value;
    }
    /**
     * <code>string logStr = 2;</code>
     */
    private void clearLogStr() {
      
      logStr_ = getDefaultInstance().getLogStr();
    }
    /**
     * <code>string logStr = 2;</code>
     */
    private void setLogStrBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      logStr_ = value.toStringUtf8();
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!dataStr_.isEmpty()) {
        output.writeString(1, getDataStr());
      }
      if (!logStr_.isEmpty()) {
        output.writeString(2, getLogStr());
      }
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (!dataStr_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getDataStr());
      }
      if (!logStr_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(2, getLogStr());
      }
      memoizedSerializedSize = size;
      return size;
    }

    public static com.networkcollect.NetworkCollect.SubMainStationData parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.networkcollect.NetworkCollect.SubMainStationData parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.networkcollect.NetworkCollect.SubMainStationData parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.networkcollect.NetworkCollect.SubMainStationData parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.networkcollect.NetworkCollect.SubMainStationData parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.networkcollect.NetworkCollect.SubMainStationData parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.networkcollect.NetworkCollect.SubMainStationData parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.networkcollect.NetworkCollect.SubMainStationData parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.networkcollect.NetworkCollect.SubMainStationData parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.networkcollect.NetworkCollect.SubMainStationData parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.networkcollect.NetworkCollect.SubMainStationData parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.networkcollect.NetworkCollect.SubMainStationData parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.networkcollect.NetworkCollect.SubMainStationData prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * <pre>
     *上送副主站的数据
     * </pre>
     *
     * Protobuf type {@code SubMainStationData}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.networkcollect.NetworkCollect.SubMainStationData, Builder> implements
        // @@protoc_insertion_point(builder_implements:SubMainStationData)
        com.networkcollect.NetworkCollect.SubMainStationDataOrBuilder {
      // Construct using com.networkcollect.NetworkCollect.SubMainStationData.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>string dataStr = 1;</code>
       */
      public java.lang.String getDataStr() {
        return instance.getDataStr();
      }
      /**
       * <code>string dataStr = 1;</code>
       */
      public com.google.protobuf.ByteString
          getDataStrBytes() {
        return instance.getDataStrBytes();
      }
      /**
       * <code>string dataStr = 1;</code>
       */
      public Builder setDataStr(
          java.lang.String value) {
        copyOnWrite();
        instance.setDataStr(value);
        return this;
      }
      /**
       * <code>string dataStr = 1;</code>
       */
      public Builder clearDataStr() {
        copyOnWrite();
        instance.clearDataStr();
        return this;
      }
      /**
       * <code>string dataStr = 1;</code>
       */
      public Builder setDataStrBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setDataStrBytes(value);
        return this;
      }

      /**
       * <code>string logStr = 2;</code>
       */
      public java.lang.String getLogStr() {
        return instance.getLogStr();
      }
      /**
       * <code>string logStr = 2;</code>
       */
      public com.google.protobuf.ByteString
          getLogStrBytes() {
        return instance.getLogStrBytes();
      }
      /**
       * <code>string logStr = 2;</code>
       */
      public Builder setLogStr(
          java.lang.String value) {
        copyOnWrite();
        instance.setLogStr(value);
        return this;
      }
      /**
       * <code>string logStr = 2;</code>
       */
      public Builder clearLogStr() {
        copyOnWrite();
        instance.clearLogStr();
        return this;
      }
      /**
       * <code>string logStr = 2;</code>
       */
      public Builder setLogStrBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setLogStrBytes(value);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:SubMainStationData)
    }
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.networkcollect.NetworkCollect.SubMainStationData();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.networkcollect.NetworkCollect.SubMainStationData other = (com.networkcollect.NetworkCollect.SubMainStationData) arg1;
          dataStr_ = visitor.visitString(!dataStr_.isEmpty(), dataStr_,
              !other.dataStr_.isEmpty(), other.dataStr_);
          logStr_ = visitor.visitString(!logStr_.isEmpty(), logStr_,
              !other.logStr_.isEmpty(), other.logStr_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!input.skipField(tag)) {
                    done = true;
                  }
                  break;
                }
                case 10: {
                  String s = input.readStringRequireUtf8();

                  dataStr_ = s;
                  break;
                }
                case 18: {
                  String s = input.readStringRequireUtf8();

                  logStr_ = s;
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (com.networkcollect.NetworkCollect.SubMainStationData.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:SubMainStationData)
    private static final com.networkcollect.NetworkCollect.SubMainStationData DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new SubMainStationData();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static com.networkcollect.NetworkCollect.SubMainStationData getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<SubMainStationData> PARSER;

    public static com.google.protobuf.Parser<SubMainStationData> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface StationConnectConfigOrBuilder extends
      // @@protoc_insertion_point(interface_extends:StationConnectConfig)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     *类型，新增、修改、删除
     * </pre>
     *
     * <code>.RemoteSetType setType = 1;</code>
     */
    int getSetTypeValue();
    /**
     * <pre>
     *类型，新增、修改、删除
     * </pre>
     *
     * <code>.RemoteSetType setType = 1;</code>
     */
    com.networkcollect.NetworkCollect.RemoteSetType getSetType();

    /**
     * <pre>
     *唯一标识
     * </pre>
     *
     * <code>string id = 2;</code>
     */
    java.lang.String getId();
    /**
     * <pre>
     *唯一标识
     * </pre>
     *
     * <code>string id = 2;</code>
     */
    com.google.protobuf.ByteString
        getIdBytes();

    /**
     * <pre>
     *主站名称
     * </pre>
     *
     * <code>string stationName = 3;</code>
     */
    java.lang.String getStationName();
    /**
     * <pre>
     *主站名称
     * </pre>
     *
     * <code>string stationName = 3;</code>
     */
    com.google.protobuf.ByteString
        getStationNameBytes();

    /**
     * <pre>
     *控制通道ip地址
     * </pre>
     *
     * <code>string ctrlChannelIp = 4;</code>
     */
    java.lang.String getCtrlChannelIp();
    /**
     * <pre>
     *控制通道ip地址
     * </pre>
     *
     * <code>string ctrlChannelIp = 4;</code>
     */
    com.google.protobuf.ByteString
        getCtrlChannelIpBytes();

    /**
     * <pre>
     *控制通道端口
     * </pre>
     *
     * <code>string ctrlChannelPort = 5;</code>
     */
    java.lang.String getCtrlChannelPort();
    /**
     * <pre>
     *控制通道端口
     * </pre>
     *
     * <code>string ctrlChannelPort = 5;</code>
     */
    com.google.protobuf.ByteString
        getCtrlChannelPortBytes();

    /**
     * <pre>
     *数据通道ip地址
     * </pre>
     *
     * <code>string dataChannelIp = 6;</code>
     */
    java.lang.String getDataChannelIp();
    /**
     * <pre>
     *数据通道ip地址
     * </pre>
     *
     * <code>string dataChannelIp = 6;</code>
     */
    com.google.protobuf.ByteString
        getDataChannelIpBytes();

    /**
     * <pre>
     *数据通道端口
     * </pre>
     *
     * <code>string dataChannelPort = 7;</code>
     */
    java.lang.String getDataChannelPort();
    /**
     * <pre>
     *数据通道端口
     * </pre>
     *
     * <code>string dataChannelPort = 7;</code>
     */
    com.google.protobuf.ByteString
        getDataChannelPortBytes();

    /**
     * <pre>
     *数据通道名称
     * </pre>
     *
     * <code>string dataChannelName = 8;</code>
     */
    java.lang.String getDataChannelName();
    /**
     * <pre>
     *数据通道名称
     * </pre>
     *
     * <code>string dataChannelName = 8;</code>
     */
    com.google.protobuf.ByteString
        getDataChannelNameBytes();

    /**
     * <pre>
     *0-主主站 1-附属主站
     * </pre>
     *
     * <code>int32 mainFlag = 9;</code>
     */
    int getMainFlag();
  }
  /**
   * <pre>
   *主站配置参数
   * </pre>
   *
   * Protobuf type {@code StationConnectConfig}
   */
  public  static final class StationConnectConfig extends
      com.google.protobuf.GeneratedMessageLite<
          StationConnectConfig, StationConnectConfig.Builder> implements
      // @@protoc_insertion_point(message_implements:StationConnectConfig)
      StationConnectConfigOrBuilder {
    private StationConnectConfig() {
      id_ = "";
      stationName_ = "";
      ctrlChannelIp_ = "";
      ctrlChannelPort_ = "";
      dataChannelIp_ = "";
      dataChannelPort_ = "";
      dataChannelName_ = "";
    }
    public static final int SETTYPE_FIELD_NUMBER = 1;
    private int setType_;
    /**
     * <pre>
     *类型，新增、修改、删除
     * </pre>
     *
     * <code>.RemoteSetType setType = 1;</code>
     */
    public int getSetTypeValue() {
      return setType_;
    }
    /**
     * <pre>
     *类型，新增、修改、删除
     * </pre>
     *
     * <code>.RemoteSetType setType = 1;</code>
     */
    public com.networkcollect.NetworkCollect.RemoteSetType getSetType() {
      com.networkcollect.NetworkCollect.RemoteSetType result = com.networkcollect.NetworkCollect.RemoteSetType.forNumber(setType_);
      return result == null ? com.networkcollect.NetworkCollect.RemoteSetType.UNRECOGNIZED : result;
    }
    /**
     * <pre>
     *类型，新增、修改、删除
     * </pre>
     *
     * <code>.RemoteSetType setType = 1;</code>
     */
    private void setSetTypeValue(int value) {
        setType_ = value;
    }
    /**
     * <pre>
     *类型，新增、修改、删除
     * </pre>
     *
     * <code>.RemoteSetType setType = 1;</code>
     */
    private void setSetType(com.networkcollect.NetworkCollect.RemoteSetType value) {
      if (value == null) {
        throw new NullPointerException();
      }
      
      setType_ = value.getNumber();
    }
    /**
     * <pre>
     *类型，新增、修改、删除
     * </pre>
     *
     * <code>.RemoteSetType setType = 1;</code>
     */
    private void clearSetType() {
      
      setType_ = 0;
    }

    public static final int ID_FIELD_NUMBER = 2;
    private java.lang.String id_;
    /**
     * <pre>
     *唯一标识
     * </pre>
     *
     * <code>string id = 2;</code>
     */
    public java.lang.String getId() {
      return id_;
    }
    /**
     * <pre>
     *唯一标识
     * </pre>
     *
     * <code>string id = 2;</code>
     */
    public com.google.protobuf.ByteString
        getIdBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(id_);
    }
    /**
     * <pre>
     *唯一标识
     * </pre>
     *
     * <code>string id = 2;</code>
     */
    private void setId(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      id_ = value;
    }
    /**
     * <pre>
     *唯一标识
     * </pre>
     *
     * <code>string id = 2;</code>
     */
    private void clearId() {
      
      id_ = getDefaultInstance().getId();
    }
    /**
     * <pre>
     *唯一标识
     * </pre>
     *
     * <code>string id = 2;</code>
     */
    private void setIdBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      id_ = value.toStringUtf8();
    }

    public static final int STATIONNAME_FIELD_NUMBER = 3;
    private java.lang.String stationName_;
    /**
     * <pre>
     *主站名称
     * </pre>
     *
     * <code>string stationName = 3;</code>
     */
    public java.lang.String getStationName() {
      return stationName_;
    }
    /**
     * <pre>
     *主站名称
     * </pre>
     *
     * <code>string stationName = 3;</code>
     */
    public com.google.protobuf.ByteString
        getStationNameBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(stationName_);
    }
    /**
     * <pre>
     *主站名称
     * </pre>
     *
     * <code>string stationName = 3;</code>
     */
    private void setStationName(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      stationName_ = value;
    }
    /**
     * <pre>
     *主站名称
     * </pre>
     *
     * <code>string stationName = 3;</code>
     */
    private void clearStationName() {
      
      stationName_ = getDefaultInstance().getStationName();
    }
    /**
     * <pre>
     *主站名称
     * </pre>
     *
     * <code>string stationName = 3;</code>
     */
    private void setStationNameBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      stationName_ = value.toStringUtf8();
    }

    public static final int CTRLCHANNELIP_FIELD_NUMBER = 4;
    private java.lang.String ctrlChannelIp_;
    /**
     * <pre>
     *控制通道ip地址
     * </pre>
     *
     * <code>string ctrlChannelIp = 4;</code>
     */
    public java.lang.String getCtrlChannelIp() {
      return ctrlChannelIp_;
    }
    /**
     * <pre>
     *控制通道ip地址
     * </pre>
     *
     * <code>string ctrlChannelIp = 4;</code>
     */
    public com.google.protobuf.ByteString
        getCtrlChannelIpBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(ctrlChannelIp_);
    }
    /**
     * <pre>
     *控制通道ip地址
     * </pre>
     *
     * <code>string ctrlChannelIp = 4;</code>
     */
    private void setCtrlChannelIp(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      ctrlChannelIp_ = value;
    }
    /**
     * <pre>
     *控制通道ip地址
     * </pre>
     *
     * <code>string ctrlChannelIp = 4;</code>
     */
    private void clearCtrlChannelIp() {
      
      ctrlChannelIp_ = getDefaultInstance().getCtrlChannelIp();
    }
    /**
     * <pre>
     *控制通道ip地址
     * </pre>
     *
     * <code>string ctrlChannelIp = 4;</code>
     */
    private void setCtrlChannelIpBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      ctrlChannelIp_ = value.toStringUtf8();
    }

    public static final int CTRLCHANNELPORT_FIELD_NUMBER = 5;
    private java.lang.String ctrlChannelPort_;
    /**
     * <pre>
     *控制通道端口
     * </pre>
     *
     * <code>string ctrlChannelPort = 5;</code>
     */
    public java.lang.String getCtrlChannelPort() {
      return ctrlChannelPort_;
    }
    /**
     * <pre>
     *控制通道端口
     * </pre>
     *
     * <code>string ctrlChannelPort = 5;</code>
     */
    public com.google.protobuf.ByteString
        getCtrlChannelPortBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(ctrlChannelPort_);
    }
    /**
     * <pre>
     *控制通道端口
     * </pre>
     *
     * <code>string ctrlChannelPort = 5;</code>
     */
    private void setCtrlChannelPort(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      ctrlChannelPort_ = value;
    }
    /**
     * <pre>
     *控制通道端口
     * </pre>
     *
     * <code>string ctrlChannelPort = 5;</code>
     */
    private void clearCtrlChannelPort() {
      
      ctrlChannelPort_ = getDefaultInstance().getCtrlChannelPort();
    }
    /**
     * <pre>
     *控制通道端口
     * </pre>
     *
     * <code>string ctrlChannelPort = 5;</code>
     */
    private void setCtrlChannelPortBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      ctrlChannelPort_ = value.toStringUtf8();
    }

    public static final int DATACHANNELIP_FIELD_NUMBER = 6;
    private java.lang.String dataChannelIp_;
    /**
     * <pre>
     *数据通道ip地址
     * </pre>
     *
     * <code>string dataChannelIp = 6;</code>
     */
    public java.lang.String getDataChannelIp() {
      return dataChannelIp_;
    }
    /**
     * <pre>
     *数据通道ip地址
     * </pre>
     *
     * <code>string dataChannelIp = 6;</code>
     */
    public com.google.protobuf.ByteString
        getDataChannelIpBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(dataChannelIp_);
    }
    /**
     * <pre>
     *数据通道ip地址
     * </pre>
     *
     * <code>string dataChannelIp = 6;</code>
     */
    private void setDataChannelIp(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      dataChannelIp_ = value;
    }
    /**
     * <pre>
     *数据通道ip地址
     * </pre>
     *
     * <code>string dataChannelIp = 6;</code>
     */
    private void clearDataChannelIp() {
      
      dataChannelIp_ = getDefaultInstance().getDataChannelIp();
    }
    /**
     * <pre>
     *数据通道ip地址
     * </pre>
     *
     * <code>string dataChannelIp = 6;</code>
     */
    private void setDataChannelIpBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      dataChannelIp_ = value.toStringUtf8();
    }

    public static final int DATACHANNELPORT_FIELD_NUMBER = 7;
    private java.lang.String dataChannelPort_;
    /**
     * <pre>
     *数据通道端口
     * </pre>
     *
     * <code>string dataChannelPort = 7;</code>
     */
    public java.lang.String getDataChannelPort() {
      return dataChannelPort_;
    }
    /**
     * <pre>
     *数据通道端口
     * </pre>
     *
     * <code>string dataChannelPort = 7;</code>
     */
    public com.google.protobuf.ByteString
        getDataChannelPortBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(dataChannelPort_);
    }
    /**
     * <pre>
     *数据通道端口
     * </pre>
     *
     * <code>string dataChannelPort = 7;</code>
     */
    private void setDataChannelPort(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      dataChannelPort_ = value;
    }
    /**
     * <pre>
     *数据通道端口
     * </pre>
     *
     * <code>string dataChannelPort = 7;</code>
     */
    private void clearDataChannelPort() {
      
      dataChannelPort_ = getDefaultInstance().getDataChannelPort();
    }
    /**
     * <pre>
     *数据通道端口
     * </pre>
     *
     * <code>string dataChannelPort = 7;</code>
     */
    private void setDataChannelPortBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      dataChannelPort_ = value.toStringUtf8();
    }

    public static final int DATACHANNELNAME_FIELD_NUMBER = 8;
    private java.lang.String dataChannelName_;
    /**
     * <pre>
     *数据通道名称
     * </pre>
     *
     * <code>string dataChannelName = 8;</code>
     */
    public java.lang.String getDataChannelName() {
      return dataChannelName_;
    }
    /**
     * <pre>
     *数据通道名称
     * </pre>
     *
     * <code>string dataChannelName = 8;</code>
     */
    public com.google.protobuf.ByteString
        getDataChannelNameBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(dataChannelName_);
    }
    /**
     * <pre>
     *数据通道名称
     * </pre>
     *
     * <code>string dataChannelName = 8;</code>
     */
    private void setDataChannelName(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      dataChannelName_ = value;
    }
    /**
     * <pre>
     *数据通道名称
     * </pre>
     *
     * <code>string dataChannelName = 8;</code>
     */
    private void clearDataChannelName() {
      
      dataChannelName_ = getDefaultInstance().getDataChannelName();
    }
    /**
     * <pre>
     *数据通道名称
     * </pre>
     *
     * <code>string dataChannelName = 8;</code>
     */
    private void setDataChannelNameBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      dataChannelName_ = value.toStringUtf8();
    }

    public static final int MAINFLAG_FIELD_NUMBER = 9;
    private int mainFlag_;
    /**
     * <pre>
     *0-主主站 1-附属主站
     * </pre>
     *
     * <code>int32 mainFlag = 9;</code>
     */
    public int getMainFlag() {
      return mainFlag_;
    }
    /**
     * <pre>
     *0-主主站 1-附属主站
     * </pre>
     *
     * <code>int32 mainFlag = 9;</code>
     */
    private void setMainFlag(int value) {
      
      mainFlag_ = value;
    }
    /**
     * <pre>
     *0-主主站 1-附属主站
     * </pre>
     *
     * <code>int32 mainFlag = 9;</code>
     */
    private void clearMainFlag() {
      
      mainFlag_ = 0;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (setType_ != com.networkcollect.NetworkCollect.RemoteSetType.RST_INVALID.getNumber()) {
        output.writeEnum(1, setType_);
      }
      if (!id_.isEmpty()) {
        output.writeString(2, getId());
      }
      if (!stationName_.isEmpty()) {
        output.writeString(3, getStationName());
      }
      if (!ctrlChannelIp_.isEmpty()) {
        output.writeString(4, getCtrlChannelIp());
      }
      if (!ctrlChannelPort_.isEmpty()) {
        output.writeString(5, getCtrlChannelPort());
      }
      if (!dataChannelIp_.isEmpty()) {
        output.writeString(6, getDataChannelIp());
      }
      if (!dataChannelPort_.isEmpty()) {
        output.writeString(7, getDataChannelPort());
      }
      if (!dataChannelName_.isEmpty()) {
        output.writeString(8, getDataChannelName());
      }
      if (mainFlag_ != 0) {
        output.writeInt32(9, mainFlag_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (setType_ != com.networkcollect.NetworkCollect.RemoteSetType.RST_INVALID.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, setType_);
      }
      if (!id_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(2, getId());
      }
      if (!stationName_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(3, getStationName());
      }
      if (!ctrlChannelIp_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(4, getCtrlChannelIp());
      }
      if (!ctrlChannelPort_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(5, getCtrlChannelPort());
      }
      if (!dataChannelIp_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(6, getDataChannelIp());
      }
      if (!dataChannelPort_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(7, getDataChannelPort());
      }
      if (!dataChannelName_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(8, getDataChannelName());
      }
      if (mainFlag_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(9, mainFlag_);
      }
      memoizedSerializedSize = size;
      return size;
    }

    public static com.networkcollect.NetworkCollect.StationConnectConfig parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.networkcollect.NetworkCollect.StationConnectConfig parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.networkcollect.NetworkCollect.StationConnectConfig parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.networkcollect.NetworkCollect.StationConnectConfig parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.networkcollect.NetworkCollect.StationConnectConfig parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.networkcollect.NetworkCollect.StationConnectConfig parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.networkcollect.NetworkCollect.StationConnectConfig parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.networkcollect.NetworkCollect.StationConnectConfig parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.networkcollect.NetworkCollect.StationConnectConfig parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.networkcollect.NetworkCollect.StationConnectConfig parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.networkcollect.NetworkCollect.StationConnectConfig parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.networkcollect.NetworkCollect.StationConnectConfig parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.networkcollect.NetworkCollect.StationConnectConfig prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * <pre>
     *主站配置参数
     * </pre>
     *
     * Protobuf type {@code StationConnectConfig}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.networkcollect.NetworkCollect.StationConnectConfig, Builder> implements
        // @@protoc_insertion_point(builder_implements:StationConnectConfig)
        com.networkcollect.NetworkCollect.StationConnectConfigOrBuilder {
      // Construct using com.networkcollect.NetworkCollect.StationConnectConfig.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       *类型，新增、修改、删除
       * </pre>
       *
       * <code>.RemoteSetType setType = 1;</code>
       */
      public int getSetTypeValue() {
        return instance.getSetTypeValue();
      }
      /**
       * <pre>
       *类型，新增、修改、删除
       * </pre>
       *
       * <code>.RemoteSetType setType = 1;</code>
       */
      public Builder setSetTypeValue(int value) {
        copyOnWrite();
        instance.setSetTypeValue(value);
        return this;
      }
      /**
       * <pre>
       *类型，新增、修改、删除
       * </pre>
       *
       * <code>.RemoteSetType setType = 1;</code>
       */
      public com.networkcollect.NetworkCollect.RemoteSetType getSetType() {
        return instance.getSetType();
      }
      /**
       * <pre>
       *类型，新增、修改、删除
       * </pre>
       *
       * <code>.RemoteSetType setType = 1;</code>
       */
      public Builder setSetType(com.networkcollect.NetworkCollect.RemoteSetType value) {
        copyOnWrite();
        instance.setSetType(value);
        return this;
      }
      /**
       * <pre>
       *类型，新增、修改、删除
       * </pre>
       *
       * <code>.RemoteSetType setType = 1;</code>
       */
      public Builder clearSetType() {
        copyOnWrite();
        instance.clearSetType();
        return this;
      }

      /**
       * <pre>
       *唯一标识
       * </pre>
       *
       * <code>string id = 2;</code>
       */
      public java.lang.String getId() {
        return instance.getId();
      }
      /**
       * <pre>
       *唯一标识
       * </pre>
       *
       * <code>string id = 2;</code>
       */
      public com.google.protobuf.ByteString
          getIdBytes() {
        return instance.getIdBytes();
      }
      /**
       * <pre>
       *唯一标识
       * </pre>
       *
       * <code>string id = 2;</code>
       */
      public Builder setId(
          java.lang.String value) {
        copyOnWrite();
        instance.setId(value);
        return this;
      }
      /**
       * <pre>
       *唯一标识
       * </pre>
       *
       * <code>string id = 2;</code>
       */
      public Builder clearId() {
        copyOnWrite();
        instance.clearId();
        return this;
      }
      /**
       * <pre>
       *唯一标识
       * </pre>
       *
       * <code>string id = 2;</code>
       */
      public Builder setIdBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setIdBytes(value);
        return this;
      }

      /**
       * <pre>
       *主站名称
       * </pre>
       *
       * <code>string stationName = 3;</code>
       */
      public java.lang.String getStationName() {
        return instance.getStationName();
      }
      /**
       * <pre>
       *主站名称
       * </pre>
       *
       * <code>string stationName = 3;</code>
       */
      public com.google.protobuf.ByteString
          getStationNameBytes() {
        return instance.getStationNameBytes();
      }
      /**
       * <pre>
       *主站名称
       * </pre>
       *
       * <code>string stationName = 3;</code>
       */
      public Builder setStationName(
          java.lang.String value) {
        copyOnWrite();
        instance.setStationName(value);
        return this;
      }
      /**
       * <pre>
       *主站名称
       * </pre>
       *
       * <code>string stationName = 3;</code>
       */
      public Builder clearStationName() {
        copyOnWrite();
        instance.clearStationName();
        return this;
      }
      /**
       * <pre>
       *主站名称
       * </pre>
       *
       * <code>string stationName = 3;</code>
       */
      public Builder setStationNameBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setStationNameBytes(value);
        return this;
      }

      /**
       * <pre>
       *控制通道ip地址
       * </pre>
       *
       * <code>string ctrlChannelIp = 4;</code>
       */
      public java.lang.String getCtrlChannelIp() {
        return instance.getCtrlChannelIp();
      }
      /**
       * <pre>
       *控制通道ip地址
       * </pre>
       *
       * <code>string ctrlChannelIp = 4;</code>
       */
      public com.google.protobuf.ByteString
          getCtrlChannelIpBytes() {
        return instance.getCtrlChannelIpBytes();
      }
      /**
       * <pre>
       *控制通道ip地址
       * </pre>
       *
       * <code>string ctrlChannelIp = 4;</code>
       */
      public Builder setCtrlChannelIp(
          java.lang.String value) {
        copyOnWrite();
        instance.setCtrlChannelIp(value);
        return this;
      }
      /**
       * <pre>
       *控制通道ip地址
       * </pre>
       *
       * <code>string ctrlChannelIp = 4;</code>
       */
      public Builder clearCtrlChannelIp() {
        copyOnWrite();
        instance.clearCtrlChannelIp();
        return this;
      }
      /**
       * <pre>
       *控制通道ip地址
       * </pre>
       *
       * <code>string ctrlChannelIp = 4;</code>
       */
      public Builder setCtrlChannelIpBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setCtrlChannelIpBytes(value);
        return this;
      }

      /**
       * <pre>
       *控制通道端口
       * </pre>
       *
       * <code>string ctrlChannelPort = 5;</code>
       */
      public java.lang.String getCtrlChannelPort() {
        return instance.getCtrlChannelPort();
      }
      /**
       * <pre>
       *控制通道端口
       * </pre>
       *
       * <code>string ctrlChannelPort = 5;</code>
       */
      public com.google.protobuf.ByteString
          getCtrlChannelPortBytes() {
        return instance.getCtrlChannelPortBytes();
      }
      /**
       * <pre>
       *控制通道端口
       * </pre>
       *
       * <code>string ctrlChannelPort = 5;</code>
       */
      public Builder setCtrlChannelPort(
          java.lang.String value) {
        copyOnWrite();
        instance.setCtrlChannelPort(value);
        return this;
      }
      /**
       * <pre>
       *控制通道端口
       * </pre>
       *
       * <code>string ctrlChannelPort = 5;</code>
       */
      public Builder clearCtrlChannelPort() {
        copyOnWrite();
        instance.clearCtrlChannelPort();
        return this;
      }
      /**
       * <pre>
       *控制通道端口
       * </pre>
       *
       * <code>string ctrlChannelPort = 5;</code>
       */
      public Builder setCtrlChannelPortBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setCtrlChannelPortBytes(value);
        return this;
      }

      /**
       * <pre>
       *数据通道ip地址
       * </pre>
       *
       * <code>string dataChannelIp = 6;</code>
       */
      public java.lang.String getDataChannelIp() {
        return instance.getDataChannelIp();
      }
      /**
       * <pre>
       *数据通道ip地址
       * </pre>
       *
       * <code>string dataChannelIp = 6;</code>
       */
      public com.google.protobuf.ByteString
          getDataChannelIpBytes() {
        return instance.getDataChannelIpBytes();
      }
      /**
       * <pre>
       *数据通道ip地址
       * </pre>
       *
       * <code>string dataChannelIp = 6;</code>
       */
      public Builder setDataChannelIp(
          java.lang.String value) {
        copyOnWrite();
        instance.setDataChannelIp(value);
        return this;
      }
      /**
       * <pre>
       *数据通道ip地址
       * </pre>
       *
       * <code>string dataChannelIp = 6;</code>
       */
      public Builder clearDataChannelIp() {
        copyOnWrite();
        instance.clearDataChannelIp();
        return this;
      }
      /**
       * <pre>
       *数据通道ip地址
       * </pre>
       *
       * <code>string dataChannelIp = 6;</code>
       */
      public Builder setDataChannelIpBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setDataChannelIpBytes(value);
        return this;
      }

      /**
       * <pre>
       *数据通道端口
       * </pre>
       *
       * <code>string dataChannelPort = 7;</code>
       */
      public java.lang.String getDataChannelPort() {
        return instance.getDataChannelPort();
      }
      /**
       * <pre>
       *数据通道端口
       * </pre>
       *
       * <code>string dataChannelPort = 7;</code>
       */
      public com.google.protobuf.ByteString
          getDataChannelPortBytes() {
        return instance.getDataChannelPortBytes();
      }
      /**
       * <pre>
       *数据通道端口
       * </pre>
       *
       * <code>string dataChannelPort = 7;</code>
       */
      public Builder setDataChannelPort(
          java.lang.String value) {
        copyOnWrite();
        instance.setDataChannelPort(value);
        return this;
      }
      /**
       * <pre>
       *数据通道端口
       * </pre>
       *
       * <code>string dataChannelPort = 7;</code>
       */
      public Builder clearDataChannelPort() {
        copyOnWrite();
        instance.clearDataChannelPort();
        return this;
      }
      /**
       * <pre>
       *数据通道端口
       * </pre>
       *
       * <code>string dataChannelPort = 7;</code>
       */
      public Builder setDataChannelPortBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setDataChannelPortBytes(value);
        return this;
      }

      /**
       * <pre>
       *数据通道名称
       * </pre>
       *
       * <code>string dataChannelName = 8;</code>
       */
      public java.lang.String getDataChannelName() {
        return instance.getDataChannelName();
      }
      /**
       * <pre>
       *数据通道名称
       * </pre>
       *
       * <code>string dataChannelName = 8;</code>
       */
      public com.google.protobuf.ByteString
          getDataChannelNameBytes() {
        return instance.getDataChannelNameBytes();
      }
      /**
       * <pre>
       *数据通道名称
       * </pre>
       *
       * <code>string dataChannelName = 8;</code>
       */
      public Builder setDataChannelName(
          java.lang.String value) {
        copyOnWrite();
        instance.setDataChannelName(value);
        return this;
      }
      /**
       * <pre>
       *数据通道名称
       * </pre>
       *
       * <code>string dataChannelName = 8;</code>
       */
      public Builder clearDataChannelName() {
        copyOnWrite();
        instance.clearDataChannelName();
        return this;
      }
      /**
       * <pre>
       *数据通道名称
       * </pre>
       *
       * <code>string dataChannelName = 8;</code>
       */
      public Builder setDataChannelNameBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setDataChannelNameBytes(value);
        return this;
      }

      /**
       * <pre>
       *0-主主站 1-附属主站
       * </pre>
       *
       * <code>int32 mainFlag = 9;</code>
       */
      public int getMainFlag() {
        return instance.getMainFlag();
      }
      /**
       * <pre>
       *0-主主站 1-附属主站
       * </pre>
       *
       * <code>int32 mainFlag = 9;</code>
       */
      public Builder setMainFlag(int value) {
        copyOnWrite();
        instance.setMainFlag(value);
        return this;
      }
      /**
       * <pre>
       *0-主主站 1-附属主站
       * </pre>
       *
       * <code>int32 mainFlag = 9;</code>
       */
      public Builder clearMainFlag() {
        copyOnWrite();
        instance.clearMainFlag();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:StationConnectConfig)
    }
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.networkcollect.NetworkCollect.StationConnectConfig();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.networkcollect.NetworkCollect.StationConnectConfig other = (com.networkcollect.NetworkCollect.StationConnectConfig) arg1;
          setType_ = visitor.visitInt(setType_ != 0, setType_,    other.setType_ != 0, other.setType_);
          id_ = visitor.visitString(!id_.isEmpty(), id_,
              !other.id_.isEmpty(), other.id_);
          stationName_ = visitor.visitString(!stationName_.isEmpty(), stationName_,
              !other.stationName_.isEmpty(), other.stationName_);
          ctrlChannelIp_ = visitor.visitString(!ctrlChannelIp_.isEmpty(), ctrlChannelIp_,
              !other.ctrlChannelIp_.isEmpty(), other.ctrlChannelIp_);
          ctrlChannelPort_ = visitor.visitString(!ctrlChannelPort_.isEmpty(), ctrlChannelPort_,
              !other.ctrlChannelPort_.isEmpty(), other.ctrlChannelPort_);
          dataChannelIp_ = visitor.visitString(!dataChannelIp_.isEmpty(), dataChannelIp_,
              !other.dataChannelIp_.isEmpty(), other.dataChannelIp_);
          dataChannelPort_ = visitor.visitString(!dataChannelPort_.isEmpty(), dataChannelPort_,
              !other.dataChannelPort_.isEmpty(), other.dataChannelPort_);
          dataChannelName_ = visitor.visitString(!dataChannelName_.isEmpty(), dataChannelName_,
              !other.dataChannelName_.isEmpty(), other.dataChannelName_);
          mainFlag_ = visitor.visitInt(mainFlag_ != 0, mainFlag_,
              other.mainFlag_ != 0, other.mainFlag_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!input.skipField(tag)) {
                    done = true;
                  }
                  break;
                }
                case 8: {
                  int rawValue = input.readEnum();

                  setType_ = rawValue;
                  break;
                }
                case 18: {
                  String s = input.readStringRequireUtf8();

                  id_ = s;
                  break;
                }
                case 26: {
                  String s = input.readStringRequireUtf8();

                  stationName_ = s;
                  break;
                }
                case 34: {
                  String s = input.readStringRequireUtf8();

                  ctrlChannelIp_ = s;
                  break;
                }
                case 42: {
                  String s = input.readStringRequireUtf8();

                  ctrlChannelPort_ = s;
                  break;
                }
                case 50: {
                  String s = input.readStringRequireUtf8();

                  dataChannelIp_ = s;
                  break;
                }
                case 58: {
                  String s = input.readStringRequireUtf8();

                  dataChannelPort_ = s;
                  break;
                }
                case 66: {
                  String s = input.readStringRequireUtf8();

                  dataChannelName_ = s;
                  break;
                }
                case 72: {

                  mainFlag_ = input.readInt32();
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (com.networkcollect.NetworkCollect.StationConnectConfig.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:StationConnectConfig)
    private static final com.networkcollect.NetworkCollect.StationConnectConfig DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new StationConnectConfig();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static com.networkcollect.NetworkCollect.StationConnectConfig getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<StationConnectConfig> PARSER;

    public static com.google.protobuf.Parser<StationConnectConfig> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface MainMessageOrBuilder extends
      // @@protoc_insertion_point(interface_extends:MainMessage)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     *消息类型
     * </pre>
     *
     * <code>.MessageType msgType = 1;</code>
     */
    int getMsgTypeValue();
    /**
     * <pre>
     *消息类型
     * </pre>
     *
     * <code>.MessageType msgType = 1;</code>
     */
    com.networkcollect.NetworkCollect.MessageType getMsgType();

    /**
     * <pre>
     *采集数据------8001
     * </pre>
     *
     * <code>.CollectData collectData = 2;</code>
     */
    boolean hasCollectData();
    /**
     * <pre>
     *采集数据------8001
     * </pre>
     *
     * <code>.CollectData collectData = 2;</code>
     */
    com.networkcollect.NetworkCollect.CollectData getCollectData();

    /**
     * <pre>
     *接收到主站数据------8002
     * </pre>
     *
     * <code>.RecvMainStationData recvMainStationData = 3;</code>
     */
    boolean hasRecvMainStationData();
    /**
     * <pre>
     *接收到主站数据------8002
     * </pre>
     *
     * <code>.RecvMainStationData recvMainStationData = 3;</code>
     */
    com.networkcollect.NetworkCollect.RecvMainStationData getRecvMainStationData();

    /**
     * <pre>
     *心跳消息------8003
     * </pre>
     *
     * <code>.HeartBeatMessage heartBeatMessage = 4;</code>
     */
    boolean hasHeartBeatMessage();
    /**
     * <pre>
     *心跳消息------8003
     * </pre>
     *
     * <code>.HeartBeatMessage heartBeatMessage = 4;</code>
     */
    com.networkcollect.NetworkCollect.HeartBeatMessage getHeartBeatMessage();

    /**
     * <pre>
     *进程控制------8004
     * </pre>
     *
     * <code>.ProcessCtrl processCtrl = 5;</code>
     */
    boolean hasProcessCtrl();
    /**
     * <pre>
     *进程控制------8004
     * </pre>
     *
     * <code>.ProcessCtrl processCtrl = 5;</code>
     */
    com.networkcollect.NetworkCollect.ProcessCtrl getProcessCtrl();

    /**
     * <pre>
     *新的未知资产------8005
     * </pre>
     *
     * <code>.UnknownAsset unknownAsset = 6;</code>
     */
    boolean hasUnknownAsset();
    /**
     * <pre>
     *新的未知资产------8005
     * </pre>
     *
     * <code>.UnknownAsset unknownAsset = 6;</code>
     */
    com.networkcollect.NetworkCollect.UnknownAsset getUnknownAsset();

    /**
     * <pre>
     *通信对-----8006
     * </pre>
     *
     * <code>.CommunicationPair communicationPair = 7;</code>
     */
    boolean hasCommunicationPair();
    /**
     * <pre>
     *通信对-----8006
     * </pre>
     *
     * <code>.CommunicationPair communicationPair = 7;</code>
     */
    com.networkcollect.NetworkCollect.CommunicationPair getCommunicationPair();

    /**
     * <pre>
     *原始日志----8007
     * </pre>
     *
     * <code>.OriginalSyslog OriginalSyslog = 8;</code>
     */
    boolean hasOriginalSyslog();
    /**
     * <pre>
     *原始日志----8007
     * </pre>
     *
     * <code>.OriginalSyslog OriginalSyslog = 8;</code>
     */
    com.networkcollect.NetworkCollect.OriginalSyslog getOriginalSyslog();

    /**
     * <pre>
     *远程控制命令-----8009
     * </pre>
     *
     * <code>.RemoteCmdInfo remoteCmdInfo = 10;</code>
     */
    boolean hasRemoteCmdInfo();
    /**
     * <pre>
     *远程控制命令-----8009
     * </pre>
     *
     * <code>.RemoteCmdInfo remoteCmdInfo = 10;</code>
     */
    com.networkcollect.NetworkCollect.RemoteCmdInfo getRemoteCmdInfo();

    /**
     * <pre>
     *远程控制回复------8010
     * </pre>
     *
     * <code>.RemoteResponse remoteResponse = 11;</code>
     */
    boolean hasRemoteResponse();
    /**
     * <pre>
     *远程控制回复------8010
     * </pre>
     *
     * <code>.RemoteResponse remoteResponse = 11;</code>
     */
    com.networkcollect.NetworkCollect.RemoteResponse getRemoteResponse();

    /**
     * <pre>
     *还原文件-----8011
     * </pre>
     *
     * <code>.RestoreFile restoreFile = 12;</code>
     */
    boolean hasRestoreFile();
    /**
     * <pre>
     *还原文件-----8011
     * </pre>
     *
     * <code>.RestoreFile restoreFile = 12;</code>
     */
    com.networkcollect.NetworkCollect.RestoreFile getRestoreFile();

    /**
     * <pre>
     *网络自动扫描 -----8012
     * </pre>
     *
     * <code>.NmapInfo nmapInfo = 13;</code>
     */
    boolean hasNmapInfo();
    /**
     * <pre>
     *网络自动扫描 -----8012
     * </pre>
     *
     * <code>.NmapInfo nmapInfo = 13;</code>
     */
    com.networkcollect.NetworkCollect.NmapInfo getNmapInfo();

    /**
     * <pre>
     *上送副主站的数据----8013
     * </pre>
     *
     * <code>.SubMainStationData subMainStationData = 14;</code>
     */
    boolean hasSubMainStationData();
    /**
     * <pre>
     *上送副主站的数据----8013
     * </pre>
     *
     * <code>.SubMainStationData subMainStationData = 14;</code>
     */
    com.networkcollect.NetworkCollect.SubMainStationData getSubMainStationData();

    /**
     * <pre>
     *主站配置参数----8014
     * </pre>
     *
     * <code>.StationConnectConfig stationConnectConfig = 15;</code>
     */
    boolean hasStationConnectConfig();
    /**
     * <pre>
     *主站配置参数----8014
     * </pre>
     *
     * <code>.StationConnectConfig stationConnectConfig = 15;</code>
     */
    com.networkcollect.NetworkCollect.StationConnectConfig getStationConnectConfig();
  }
  /**
   * <pre>
   *主消息体
   * </pre>
   *
   * Protobuf type {@code MainMessage}
   */
  public  static final class MainMessage extends
      com.google.protobuf.GeneratedMessageLite<
          MainMessage, MainMessage.Builder> implements
      // @@protoc_insertion_point(message_implements:MainMessage)
      MainMessageOrBuilder {
    private MainMessage() {
    }
    public static final int MSGTYPE_FIELD_NUMBER = 1;
    private int msgType_;
    /**
     * <pre>
     *消息类型
     * </pre>
     *
     * <code>.MessageType msgType = 1;</code>
     */
    public int getMsgTypeValue() {
      return msgType_;
    }
    /**
     * <pre>
     *消息类型
     * </pre>
     *
     * <code>.MessageType msgType = 1;</code>
     */
    public com.networkcollect.NetworkCollect.MessageType getMsgType() {
      com.networkcollect.NetworkCollect.MessageType result = com.networkcollect.NetworkCollect.MessageType.forNumber(msgType_);
      return result == null ? com.networkcollect.NetworkCollect.MessageType.UNRECOGNIZED : result;
    }
    /**
     * <pre>
     *消息类型
     * </pre>
     *
     * <code>.MessageType msgType = 1;</code>
     */
    private void setMsgTypeValue(int value) {
        msgType_ = value;
    }
    /**
     * <pre>
     *消息类型
     * </pre>
     *
     * <code>.MessageType msgType = 1;</code>
     */
    private void setMsgType(com.networkcollect.NetworkCollect.MessageType value) {
      if (value == null) {
        throw new NullPointerException();
      }
      
      msgType_ = value.getNumber();
    }
    /**
     * <pre>
     *消息类型
     * </pre>
     *
     * <code>.MessageType msgType = 1;</code>
     */
    private void clearMsgType() {
      
      msgType_ = 0;
    }

    public static final int COLLECTDATA_FIELD_NUMBER = 2;
    private com.networkcollect.NetworkCollect.CollectData collectData_;
    /**
     * <pre>
     *采集数据------8001
     * </pre>
     *
     * <code>.CollectData collectData = 2;</code>
     */
    public boolean hasCollectData() {
      return collectData_ != null;
    }
    /**
     * <pre>
     *采集数据------8001
     * </pre>
     *
     * <code>.CollectData collectData = 2;</code>
     */
    public com.networkcollect.NetworkCollect.CollectData getCollectData() {
      return collectData_ == null ? com.networkcollect.NetworkCollect.CollectData.getDefaultInstance() : collectData_;
    }
    /**
     * <pre>
     *采集数据------8001
     * </pre>
     *
     * <code>.CollectData collectData = 2;</code>
     */
    private void setCollectData(com.networkcollect.NetworkCollect.CollectData value) {
      if (value == null) {
        throw new NullPointerException();
      }
      collectData_ = value;
      
      }
    /**
     * <pre>
     *采集数据------8001
     * </pre>
     *
     * <code>.CollectData collectData = 2;</code>
     */
    private void setCollectData(
        com.networkcollect.NetworkCollect.CollectData.Builder builderForValue) {
      collectData_ = builderForValue.build();
      
    }
    /**
     * <pre>
     *采集数据------8001
     * </pre>
     *
     * <code>.CollectData collectData = 2;</code>
     */
    private void mergeCollectData(com.networkcollect.NetworkCollect.CollectData value) {
      if (collectData_ != null &&
          collectData_ != com.networkcollect.NetworkCollect.CollectData.getDefaultInstance()) {
        collectData_ =
          com.networkcollect.NetworkCollect.CollectData.newBuilder(collectData_).mergeFrom(value).buildPartial();
      } else {
        collectData_ = value;
      }
      
    }
    /**
     * <pre>
     *采集数据------8001
     * </pre>
     *
     * <code>.CollectData collectData = 2;</code>
     */
    private void clearCollectData() {  collectData_ = null;
      
    }

    public static final int RECVMAINSTATIONDATA_FIELD_NUMBER = 3;
    private com.networkcollect.NetworkCollect.RecvMainStationData recvMainStationData_;
    /**
     * <pre>
     *接收到主站数据------8002
     * </pre>
     *
     * <code>.RecvMainStationData recvMainStationData = 3;</code>
     */
    public boolean hasRecvMainStationData() {
      return recvMainStationData_ != null;
    }
    /**
     * <pre>
     *接收到主站数据------8002
     * </pre>
     *
     * <code>.RecvMainStationData recvMainStationData = 3;</code>
     */
    public com.networkcollect.NetworkCollect.RecvMainStationData getRecvMainStationData() {
      return recvMainStationData_ == null ? com.networkcollect.NetworkCollect.RecvMainStationData.getDefaultInstance() : recvMainStationData_;
    }
    /**
     * <pre>
     *接收到主站数据------8002
     * </pre>
     *
     * <code>.RecvMainStationData recvMainStationData = 3;</code>
     */
    private void setRecvMainStationData(com.networkcollect.NetworkCollect.RecvMainStationData value) {
      if (value == null) {
        throw new NullPointerException();
      }
      recvMainStationData_ = value;
      
      }
    /**
     * <pre>
     *接收到主站数据------8002
     * </pre>
     *
     * <code>.RecvMainStationData recvMainStationData = 3;</code>
     */
    private void setRecvMainStationData(
        com.networkcollect.NetworkCollect.RecvMainStationData.Builder builderForValue) {
      recvMainStationData_ = builderForValue.build();
      
    }
    /**
     * <pre>
     *接收到主站数据------8002
     * </pre>
     *
     * <code>.RecvMainStationData recvMainStationData = 3;</code>
     */
    private void mergeRecvMainStationData(com.networkcollect.NetworkCollect.RecvMainStationData value) {
      if (recvMainStationData_ != null &&
          recvMainStationData_ != com.networkcollect.NetworkCollect.RecvMainStationData.getDefaultInstance()) {
        recvMainStationData_ =
          com.networkcollect.NetworkCollect.RecvMainStationData.newBuilder(recvMainStationData_).mergeFrom(value).buildPartial();
      } else {
        recvMainStationData_ = value;
      }
      
    }
    /**
     * <pre>
     *接收到主站数据------8002
     * </pre>
     *
     * <code>.RecvMainStationData recvMainStationData = 3;</code>
     */
    private void clearRecvMainStationData() {  recvMainStationData_ = null;
      
    }

    public static final int HEARTBEATMESSAGE_FIELD_NUMBER = 4;
    private com.networkcollect.NetworkCollect.HeartBeatMessage heartBeatMessage_;
    /**
     * <pre>
     *心跳消息------8003
     * </pre>
     *
     * <code>.HeartBeatMessage heartBeatMessage = 4;</code>
     */
    public boolean hasHeartBeatMessage() {
      return heartBeatMessage_ != null;
    }
    /**
     * <pre>
     *心跳消息------8003
     * </pre>
     *
     * <code>.HeartBeatMessage heartBeatMessage = 4;</code>
     */
    public com.networkcollect.NetworkCollect.HeartBeatMessage getHeartBeatMessage() {
      return heartBeatMessage_ == null ? com.networkcollect.NetworkCollect.HeartBeatMessage.getDefaultInstance() : heartBeatMessage_;
    }
    /**
     * <pre>
     *心跳消息------8003
     * </pre>
     *
     * <code>.HeartBeatMessage heartBeatMessage = 4;</code>
     */
    private void setHeartBeatMessage(com.networkcollect.NetworkCollect.HeartBeatMessage value) {
      if (value == null) {
        throw new NullPointerException();
      }
      heartBeatMessage_ = value;
      
      }
    /**
     * <pre>
     *心跳消息------8003
     * </pre>
     *
     * <code>.HeartBeatMessage heartBeatMessage = 4;</code>
     */
    private void setHeartBeatMessage(
        com.networkcollect.NetworkCollect.HeartBeatMessage.Builder builderForValue) {
      heartBeatMessage_ = builderForValue.build();
      
    }
    /**
     * <pre>
     *心跳消息------8003
     * </pre>
     *
     * <code>.HeartBeatMessage heartBeatMessage = 4;</code>
     */
    private void mergeHeartBeatMessage(com.networkcollect.NetworkCollect.HeartBeatMessage value) {
      if (heartBeatMessage_ != null &&
          heartBeatMessage_ != com.networkcollect.NetworkCollect.HeartBeatMessage.getDefaultInstance()) {
        heartBeatMessage_ =
          com.networkcollect.NetworkCollect.HeartBeatMessage.newBuilder(heartBeatMessage_).mergeFrom(value).buildPartial();
      } else {
        heartBeatMessage_ = value;
      }
      
    }
    /**
     * <pre>
     *心跳消息------8003
     * </pre>
     *
     * <code>.HeartBeatMessage heartBeatMessage = 4;</code>
     */
    private void clearHeartBeatMessage() {  heartBeatMessage_ = null;
      
    }

    public static final int PROCESSCTRL_FIELD_NUMBER = 5;
    private com.networkcollect.NetworkCollect.ProcessCtrl processCtrl_;
    /**
     * <pre>
     *进程控制------8004
     * </pre>
     *
     * <code>.ProcessCtrl processCtrl = 5;</code>
     */
    public boolean hasProcessCtrl() {
      return processCtrl_ != null;
    }
    /**
     * <pre>
     *进程控制------8004
     * </pre>
     *
     * <code>.ProcessCtrl processCtrl = 5;</code>
     */
    public com.networkcollect.NetworkCollect.ProcessCtrl getProcessCtrl() {
      return processCtrl_ == null ? com.networkcollect.NetworkCollect.ProcessCtrl.getDefaultInstance() : processCtrl_;
    }
    /**
     * <pre>
     *进程控制------8004
     * </pre>
     *
     * <code>.ProcessCtrl processCtrl = 5;</code>
     */
    private void setProcessCtrl(com.networkcollect.NetworkCollect.ProcessCtrl value) {
      if (value == null) {
        throw new NullPointerException();
      }
      processCtrl_ = value;
      
      }
    /**
     * <pre>
     *进程控制------8004
     * </pre>
     *
     * <code>.ProcessCtrl processCtrl = 5;</code>
     */
    private void setProcessCtrl(
        com.networkcollect.NetworkCollect.ProcessCtrl.Builder builderForValue) {
      processCtrl_ = builderForValue.build();
      
    }
    /**
     * <pre>
     *进程控制------8004
     * </pre>
     *
     * <code>.ProcessCtrl processCtrl = 5;</code>
     */
    private void mergeProcessCtrl(com.networkcollect.NetworkCollect.ProcessCtrl value) {
      if (processCtrl_ != null &&
          processCtrl_ != com.networkcollect.NetworkCollect.ProcessCtrl.getDefaultInstance()) {
        processCtrl_ =
          com.networkcollect.NetworkCollect.ProcessCtrl.newBuilder(processCtrl_).mergeFrom(value).buildPartial();
      } else {
        processCtrl_ = value;
      }
      
    }
    /**
     * <pre>
     *进程控制------8004
     * </pre>
     *
     * <code>.ProcessCtrl processCtrl = 5;</code>
     */
    private void clearProcessCtrl() {  processCtrl_ = null;
      
    }

    public static final int UNKNOWNASSET_FIELD_NUMBER = 6;
    private com.networkcollect.NetworkCollect.UnknownAsset unknownAsset_;
    /**
     * <pre>
     *新的未知资产------8005
     * </pre>
     *
     * <code>.UnknownAsset unknownAsset = 6;</code>
     */
    public boolean hasUnknownAsset() {
      return unknownAsset_ != null;
    }
    /**
     * <pre>
     *新的未知资产------8005
     * </pre>
     *
     * <code>.UnknownAsset unknownAsset = 6;</code>
     */
    public com.networkcollect.NetworkCollect.UnknownAsset getUnknownAsset() {
      return unknownAsset_ == null ? com.networkcollect.NetworkCollect.UnknownAsset.getDefaultInstance() : unknownAsset_;
    }
    /**
     * <pre>
     *新的未知资产------8005
     * </pre>
     *
     * <code>.UnknownAsset unknownAsset = 6;</code>
     */
    private void setUnknownAsset(com.networkcollect.NetworkCollect.UnknownAsset value) {
      if (value == null) {
        throw new NullPointerException();
      }
      unknownAsset_ = value;
      
      }
    /**
     * <pre>
     *新的未知资产------8005
     * </pre>
     *
     * <code>.UnknownAsset unknownAsset = 6;</code>
     */
    private void setUnknownAsset(
        com.networkcollect.NetworkCollect.UnknownAsset.Builder builderForValue) {
      unknownAsset_ = builderForValue.build();
      
    }
    /**
     * <pre>
     *新的未知资产------8005
     * </pre>
     *
     * <code>.UnknownAsset unknownAsset = 6;</code>
     */
    private void mergeUnknownAsset(com.networkcollect.NetworkCollect.UnknownAsset value) {
      if (unknownAsset_ != null &&
          unknownAsset_ != com.networkcollect.NetworkCollect.UnknownAsset.getDefaultInstance()) {
        unknownAsset_ =
          com.networkcollect.NetworkCollect.UnknownAsset.newBuilder(unknownAsset_).mergeFrom(value).buildPartial();
      } else {
        unknownAsset_ = value;
      }
      
    }
    /**
     * <pre>
     *新的未知资产------8005
     * </pre>
     *
     * <code>.UnknownAsset unknownAsset = 6;</code>
     */
    private void clearUnknownAsset() {  unknownAsset_ = null;
      
    }

    public static final int COMMUNICATIONPAIR_FIELD_NUMBER = 7;
    private com.networkcollect.NetworkCollect.CommunicationPair communicationPair_;
    /**
     * <pre>
     *通信对-----8006
     * </pre>
     *
     * <code>.CommunicationPair communicationPair = 7;</code>
     */
    public boolean hasCommunicationPair() {
      return communicationPair_ != null;
    }
    /**
     * <pre>
     *通信对-----8006
     * </pre>
     *
     * <code>.CommunicationPair communicationPair = 7;</code>
     */
    public com.networkcollect.NetworkCollect.CommunicationPair getCommunicationPair() {
      return communicationPair_ == null ? com.networkcollect.NetworkCollect.CommunicationPair.getDefaultInstance() : communicationPair_;
    }
    /**
     * <pre>
     *通信对-----8006
     * </pre>
     *
     * <code>.CommunicationPair communicationPair = 7;</code>
     */
    private void setCommunicationPair(com.networkcollect.NetworkCollect.CommunicationPair value) {
      if (value == null) {
        throw new NullPointerException();
      }
      communicationPair_ = value;
      
      }
    /**
     * <pre>
     *通信对-----8006
     * </pre>
     *
     * <code>.CommunicationPair communicationPair = 7;</code>
     */
    private void setCommunicationPair(
        com.networkcollect.NetworkCollect.CommunicationPair.Builder builderForValue) {
      communicationPair_ = builderForValue.build();
      
    }
    /**
     * <pre>
     *通信对-----8006
     * </pre>
     *
     * <code>.CommunicationPair communicationPair = 7;</code>
     */
    private void mergeCommunicationPair(com.networkcollect.NetworkCollect.CommunicationPair value) {
      if (communicationPair_ != null &&
          communicationPair_ != com.networkcollect.NetworkCollect.CommunicationPair.getDefaultInstance()) {
        communicationPair_ =
          com.networkcollect.NetworkCollect.CommunicationPair.newBuilder(communicationPair_).mergeFrom(value).buildPartial();
      } else {
        communicationPair_ = value;
      }
      
    }
    /**
     * <pre>
     *通信对-----8006
     * </pre>
     *
     * <code>.CommunicationPair communicationPair = 7;</code>
     */
    private void clearCommunicationPair() {  communicationPair_ = null;
      
    }

    public static final int ORIGINALSYSLOG_FIELD_NUMBER = 8;
    private com.networkcollect.NetworkCollect.OriginalSyslog originalSyslog_;
    /**
     * <pre>
     *原始日志----8007
     * </pre>
     *
     * <code>.OriginalSyslog OriginalSyslog = 8;</code>
     */
    public boolean hasOriginalSyslog() {
      return originalSyslog_ != null;
    }
    /**
     * <pre>
     *原始日志----8007
     * </pre>
     *
     * <code>.OriginalSyslog OriginalSyslog = 8;</code>
     */
    public com.networkcollect.NetworkCollect.OriginalSyslog getOriginalSyslog() {
      return originalSyslog_ == null ? com.networkcollect.NetworkCollect.OriginalSyslog.getDefaultInstance() : originalSyslog_;
    }
    /**
     * <pre>
     *原始日志----8007
     * </pre>
     *
     * <code>.OriginalSyslog OriginalSyslog = 8;</code>
     */
    private void setOriginalSyslog(com.networkcollect.NetworkCollect.OriginalSyslog value) {
      if (value == null) {
        throw new NullPointerException();
      }
      originalSyslog_ = value;
      
      }
    /**
     * <pre>
     *原始日志----8007
     * </pre>
     *
     * <code>.OriginalSyslog OriginalSyslog = 8;</code>
     */
    private void setOriginalSyslog(
        com.networkcollect.NetworkCollect.OriginalSyslog.Builder builderForValue) {
      originalSyslog_ = builderForValue.build();
      
    }
    /**
     * <pre>
     *原始日志----8007
     * </pre>
     *
     * <code>.OriginalSyslog OriginalSyslog = 8;</code>
     */
    private void mergeOriginalSyslog(com.networkcollect.NetworkCollect.OriginalSyslog value) {
      if (originalSyslog_ != null &&
          originalSyslog_ != com.networkcollect.NetworkCollect.OriginalSyslog.getDefaultInstance()) {
        originalSyslog_ =
          com.networkcollect.NetworkCollect.OriginalSyslog.newBuilder(originalSyslog_).mergeFrom(value).buildPartial();
      } else {
        originalSyslog_ = value;
      }
      
    }
    /**
     * <pre>
     *原始日志----8007
     * </pre>
     *
     * <code>.OriginalSyslog OriginalSyslog = 8;</code>
     */
    private void clearOriginalSyslog() {  originalSyslog_ = null;
      
    }

    public static final int REMOTECMDINFO_FIELD_NUMBER = 10;
    private com.networkcollect.NetworkCollect.RemoteCmdInfo remoteCmdInfo_;
    /**
     * <pre>
     *远程控制命令-----8009
     * </pre>
     *
     * <code>.RemoteCmdInfo remoteCmdInfo = 10;</code>
     */
    public boolean hasRemoteCmdInfo() {
      return remoteCmdInfo_ != null;
    }
    /**
     * <pre>
     *远程控制命令-----8009
     * </pre>
     *
     * <code>.RemoteCmdInfo remoteCmdInfo = 10;</code>
     */
    public com.networkcollect.NetworkCollect.RemoteCmdInfo getRemoteCmdInfo() {
      return remoteCmdInfo_ == null ? com.networkcollect.NetworkCollect.RemoteCmdInfo.getDefaultInstance() : remoteCmdInfo_;
    }
    /**
     * <pre>
     *远程控制命令-----8009
     * </pre>
     *
     * <code>.RemoteCmdInfo remoteCmdInfo = 10;</code>
     */
    private void setRemoteCmdInfo(com.networkcollect.NetworkCollect.RemoteCmdInfo value) {
      if (value == null) {
        throw new NullPointerException();
      }
      remoteCmdInfo_ = value;
      
      }
    /**
     * <pre>
     *远程控制命令-----8009
     * </pre>
     *
     * <code>.RemoteCmdInfo remoteCmdInfo = 10;</code>
     */
    private void setRemoteCmdInfo(
        com.networkcollect.NetworkCollect.RemoteCmdInfo.Builder builderForValue) {
      remoteCmdInfo_ = builderForValue.build();
      
    }
    /**
     * <pre>
     *远程控制命令-----8009
     * </pre>
     *
     * <code>.RemoteCmdInfo remoteCmdInfo = 10;</code>
     */
    private void mergeRemoteCmdInfo(com.networkcollect.NetworkCollect.RemoteCmdInfo value) {
      if (remoteCmdInfo_ != null &&
          remoteCmdInfo_ != com.networkcollect.NetworkCollect.RemoteCmdInfo.getDefaultInstance()) {
        remoteCmdInfo_ =
          com.networkcollect.NetworkCollect.RemoteCmdInfo.newBuilder(remoteCmdInfo_).mergeFrom(value).buildPartial();
      } else {
        remoteCmdInfo_ = value;
      }
      
    }
    /**
     * <pre>
     *远程控制命令-----8009
     * </pre>
     *
     * <code>.RemoteCmdInfo remoteCmdInfo = 10;</code>
     */
    private void clearRemoteCmdInfo() {  remoteCmdInfo_ = null;
      
    }

    public static final int REMOTERESPONSE_FIELD_NUMBER = 11;
    private com.networkcollect.NetworkCollect.RemoteResponse remoteResponse_;
    /**
     * <pre>
     *远程控制回复------8010
     * </pre>
     *
     * <code>.RemoteResponse remoteResponse = 11;</code>
     */
    public boolean hasRemoteResponse() {
      return remoteResponse_ != null;
    }
    /**
     * <pre>
     *远程控制回复------8010
     * </pre>
     *
     * <code>.RemoteResponse remoteResponse = 11;</code>
     */
    public com.networkcollect.NetworkCollect.RemoteResponse getRemoteResponse() {
      return remoteResponse_ == null ? com.networkcollect.NetworkCollect.RemoteResponse.getDefaultInstance() : remoteResponse_;
    }
    /**
     * <pre>
     *远程控制回复------8010
     * </pre>
     *
     * <code>.RemoteResponse remoteResponse = 11;</code>
     */
    private void setRemoteResponse(com.networkcollect.NetworkCollect.RemoteResponse value) {
      if (value == null) {
        throw new NullPointerException();
      }
      remoteResponse_ = value;
      
      }
    /**
     * <pre>
     *远程控制回复------8010
     * </pre>
     *
     * <code>.RemoteResponse remoteResponse = 11;</code>
     */
    private void setRemoteResponse(
        com.networkcollect.NetworkCollect.RemoteResponse.Builder builderForValue) {
      remoteResponse_ = builderForValue.build();
      
    }
    /**
     * <pre>
     *远程控制回复------8010
     * </pre>
     *
     * <code>.RemoteResponse remoteResponse = 11;</code>
     */
    private void mergeRemoteResponse(com.networkcollect.NetworkCollect.RemoteResponse value) {
      if (remoteResponse_ != null &&
          remoteResponse_ != com.networkcollect.NetworkCollect.RemoteResponse.getDefaultInstance()) {
        remoteResponse_ =
          com.networkcollect.NetworkCollect.RemoteResponse.newBuilder(remoteResponse_).mergeFrom(value).buildPartial();
      } else {
        remoteResponse_ = value;
      }
      
    }
    /**
     * <pre>
     *远程控制回复------8010
     * </pre>
     *
     * <code>.RemoteResponse remoteResponse = 11;</code>
     */
    private void clearRemoteResponse() {  remoteResponse_ = null;
      
    }

    public static final int RESTOREFILE_FIELD_NUMBER = 12;
    private com.networkcollect.NetworkCollect.RestoreFile restoreFile_;
    /**
     * <pre>
     *还原文件-----8011
     * </pre>
     *
     * <code>.RestoreFile restoreFile = 12;</code>
     */
    public boolean hasRestoreFile() {
      return restoreFile_ != null;
    }
    /**
     * <pre>
     *还原文件-----8011
     * </pre>
     *
     * <code>.RestoreFile restoreFile = 12;</code>
     */
    public com.networkcollect.NetworkCollect.RestoreFile getRestoreFile() {
      return restoreFile_ == null ? com.networkcollect.NetworkCollect.RestoreFile.getDefaultInstance() : restoreFile_;
    }
    /**
     * <pre>
     *还原文件-----8011
     * </pre>
     *
     * <code>.RestoreFile restoreFile = 12;</code>
     */
    private void setRestoreFile(com.networkcollect.NetworkCollect.RestoreFile value) {
      if (value == null) {
        throw new NullPointerException();
      }
      restoreFile_ = value;
      
      }
    /**
     * <pre>
     *还原文件-----8011
     * </pre>
     *
     * <code>.RestoreFile restoreFile = 12;</code>
     */
    private void setRestoreFile(
        com.networkcollect.NetworkCollect.RestoreFile.Builder builderForValue) {
      restoreFile_ = builderForValue.build();
      
    }
    /**
     * <pre>
     *还原文件-----8011
     * </pre>
     *
     * <code>.RestoreFile restoreFile = 12;</code>
     */
    private void mergeRestoreFile(com.networkcollect.NetworkCollect.RestoreFile value) {
      if (restoreFile_ != null &&
          restoreFile_ != com.networkcollect.NetworkCollect.RestoreFile.getDefaultInstance()) {
        restoreFile_ =
          com.networkcollect.NetworkCollect.RestoreFile.newBuilder(restoreFile_).mergeFrom(value).buildPartial();
      } else {
        restoreFile_ = value;
      }
      
    }
    /**
     * <pre>
     *还原文件-----8011
     * </pre>
     *
     * <code>.RestoreFile restoreFile = 12;</code>
     */
    private void clearRestoreFile() {  restoreFile_ = null;
      
    }

    public static final int NMAPINFO_FIELD_NUMBER = 13;
    private com.networkcollect.NetworkCollect.NmapInfo nmapInfo_;
    /**
     * <pre>
     *网络自动扫描 -----8012
     * </pre>
     *
     * <code>.NmapInfo nmapInfo = 13;</code>
     */
    public boolean hasNmapInfo() {
      return nmapInfo_ != null;
    }
    /**
     * <pre>
     *网络自动扫描 -----8012
     * </pre>
     *
     * <code>.NmapInfo nmapInfo = 13;</code>
     */
    public com.networkcollect.NetworkCollect.NmapInfo getNmapInfo() {
      return nmapInfo_ == null ? com.networkcollect.NetworkCollect.NmapInfo.getDefaultInstance() : nmapInfo_;
    }
    /**
     * <pre>
     *网络自动扫描 -----8012
     * </pre>
     *
     * <code>.NmapInfo nmapInfo = 13;</code>
     */
    private void setNmapInfo(com.networkcollect.NetworkCollect.NmapInfo value) {
      if (value == null) {
        throw new NullPointerException();
      }
      nmapInfo_ = value;
      
      }
    /**
     * <pre>
     *网络自动扫描 -----8012
     * </pre>
     *
     * <code>.NmapInfo nmapInfo = 13;</code>
     */
    private void setNmapInfo(
        com.networkcollect.NetworkCollect.NmapInfo.Builder builderForValue) {
      nmapInfo_ = builderForValue.build();
      
    }
    /**
     * <pre>
     *网络自动扫描 -----8012
     * </pre>
     *
     * <code>.NmapInfo nmapInfo = 13;</code>
     */
    private void mergeNmapInfo(com.networkcollect.NetworkCollect.NmapInfo value) {
      if (nmapInfo_ != null &&
          nmapInfo_ != com.networkcollect.NetworkCollect.NmapInfo.getDefaultInstance()) {
        nmapInfo_ =
          com.networkcollect.NetworkCollect.NmapInfo.newBuilder(nmapInfo_).mergeFrom(value).buildPartial();
      } else {
        nmapInfo_ = value;
      }
      
    }
    /**
     * <pre>
     *网络自动扫描 -----8012
     * </pre>
     *
     * <code>.NmapInfo nmapInfo = 13;</code>
     */
    private void clearNmapInfo() {  nmapInfo_ = null;
      
    }

    public static final int SUBMAINSTATIONDATA_FIELD_NUMBER = 14;
    private com.networkcollect.NetworkCollect.SubMainStationData subMainStationData_;
    /**
     * <pre>
     *上送副主站的数据----8013
     * </pre>
     *
     * <code>.SubMainStationData subMainStationData = 14;</code>
     */
    public boolean hasSubMainStationData() {
      return subMainStationData_ != null;
    }
    /**
     * <pre>
     *上送副主站的数据----8013
     * </pre>
     *
     * <code>.SubMainStationData subMainStationData = 14;</code>
     */
    public com.networkcollect.NetworkCollect.SubMainStationData getSubMainStationData() {
      return subMainStationData_ == null ? com.networkcollect.NetworkCollect.SubMainStationData.getDefaultInstance() : subMainStationData_;
    }
    /**
     * <pre>
     *上送副主站的数据----8013
     * </pre>
     *
     * <code>.SubMainStationData subMainStationData = 14;</code>
     */
    private void setSubMainStationData(com.networkcollect.NetworkCollect.SubMainStationData value) {
      if (value == null) {
        throw new NullPointerException();
      }
      subMainStationData_ = value;
      
      }
    /**
     * <pre>
     *上送副主站的数据----8013
     * </pre>
     *
     * <code>.SubMainStationData subMainStationData = 14;</code>
     */
    private void setSubMainStationData(
        com.networkcollect.NetworkCollect.SubMainStationData.Builder builderForValue) {
      subMainStationData_ = builderForValue.build();
      
    }
    /**
     * <pre>
     *上送副主站的数据----8013
     * </pre>
     *
     * <code>.SubMainStationData subMainStationData = 14;</code>
     */
    private void mergeSubMainStationData(com.networkcollect.NetworkCollect.SubMainStationData value) {
      if (subMainStationData_ != null &&
          subMainStationData_ != com.networkcollect.NetworkCollect.SubMainStationData.getDefaultInstance()) {
        subMainStationData_ =
          com.networkcollect.NetworkCollect.SubMainStationData.newBuilder(subMainStationData_).mergeFrom(value).buildPartial();
      } else {
        subMainStationData_ = value;
      }
      
    }
    /**
     * <pre>
     *上送副主站的数据----8013
     * </pre>
     *
     * <code>.SubMainStationData subMainStationData = 14;</code>
     */
    private void clearSubMainStationData() {  subMainStationData_ = null;
      
    }

    public static final int STATIONCONNECTCONFIG_FIELD_NUMBER = 15;
    private com.networkcollect.NetworkCollect.StationConnectConfig stationConnectConfig_;
    /**
     * <pre>
     *主站配置参数----8014
     * </pre>
     *
     * <code>.StationConnectConfig stationConnectConfig = 15;</code>
     */
    public boolean hasStationConnectConfig() {
      return stationConnectConfig_ != null;
    }
    /**
     * <pre>
     *主站配置参数----8014
     * </pre>
     *
     * <code>.StationConnectConfig stationConnectConfig = 15;</code>
     */
    public com.networkcollect.NetworkCollect.StationConnectConfig getStationConnectConfig() {
      return stationConnectConfig_ == null ? com.networkcollect.NetworkCollect.StationConnectConfig.getDefaultInstance() : stationConnectConfig_;
    }
    /**
     * <pre>
     *主站配置参数----8014
     * </pre>
     *
     * <code>.StationConnectConfig stationConnectConfig = 15;</code>
     */
    private void setStationConnectConfig(com.networkcollect.NetworkCollect.StationConnectConfig value) {
      if (value == null) {
        throw new NullPointerException();
      }
      stationConnectConfig_ = value;
      
      }
    /**
     * <pre>
     *主站配置参数----8014
     * </pre>
     *
     * <code>.StationConnectConfig stationConnectConfig = 15;</code>
     */
    private void setStationConnectConfig(
        com.networkcollect.NetworkCollect.StationConnectConfig.Builder builderForValue) {
      stationConnectConfig_ = builderForValue.build();
      
    }
    /**
     * <pre>
     *主站配置参数----8014
     * </pre>
     *
     * <code>.StationConnectConfig stationConnectConfig = 15;</code>
     */
    private void mergeStationConnectConfig(com.networkcollect.NetworkCollect.StationConnectConfig value) {
      if (stationConnectConfig_ != null &&
          stationConnectConfig_ != com.networkcollect.NetworkCollect.StationConnectConfig.getDefaultInstance()) {
        stationConnectConfig_ =
          com.networkcollect.NetworkCollect.StationConnectConfig.newBuilder(stationConnectConfig_).mergeFrom(value).buildPartial();
      } else {
        stationConnectConfig_ = value;
      }
      
    }
    /**
     * <pre>
     *主站配置参数----8014
     * </pre>
     *
     * <code>.StationConnectConfig stationConnectConfig = 15;</code>
     */
    private void clearStationConnectConfig() {  stationConnectConfig_ = null;
      
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (msgType_ != com.networkcollect.NetworkCollect.MessageType.MT_INVALID.getNumber()) {
        output.writeEnum(1, msgType_);
      }
      if (collectData_ != null) {
        output.writeMessage(2, getCollectData());
      }
      if (recvMainStationData_ != null) {
        output.writeMessage(3, getRecvMainStationData());
      }
      if (heartBeatMessage_ != null) {
        output.writeMessage(4, getHeartBeatMessage());
      }
      if (processCtrl_ != null) {
        output.writeMessage(5, getProcessCtrl());
      }
      if (unknownAsset_ != null) {
        output.writeMessage(6, getUnknownAsset());
      }
      if (communicationPair_ != null) {
        output.writeMessage(7, getCommunicationPair());
      }
      if (originalSyslog_ != null) {
        output.writeMessage(8, getOriginalSyslog());
      }
      if (remoteCmdInfo_ != null) {
        output.writeMessage(10, getRemoteCmdInfo());
      }
      if (remoteResponse_ != null) {
        output.writeMessage(11, getRemoteResponse());
      }
      if (restoreFile_ != null) {
        output.writeMessage(12, getRestoreFile());
      }
      if (nmapInfo_ != null) {
        output.writeMessage(13, getNmapInfo());
      }
      if (subMainStationData_ != null) {
        output.writeMessage(14, getSubMainStationData());
      }
      if (stationConnectConfig_ != null) {
        output.writeMessage(15, getStationConnectConfig());
      }
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (msgType_ != com.networkcollect.NetworkCollect.MessageType.MT_INVALID.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, msgType_);
      }
      if (collectData_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getCollectData());
      }
      if (recvMainStationData_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getRecvMainStationData());
      }
      if (heartBeatMessage_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getHeartBeatMessage());
      }
      if (processCtrl_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, getProcessCtrl());
      }
      if (unknownAsset_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, getUnknownAsset());
      }
      if (communicationPair_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, getCommunicationPair());
      }
      if (originalSyslog_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(8, getOriginalSyslog());
      }
      if (remoteCmdInfo_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(10, getRemoteCmdInfo());
      }
      if (remoteResponse_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(11, getRemoteResponse());
      }
      if (restoreFile_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(12, getRestoreFile());
      }
      if (nmapInfo_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(13, getNmapInfo());
      }
      if (subMainStationData_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(14, getSubMainStationData());
      }
      if (stationConnectConfig_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(15, getStationConnectConfig());
      }
      memoizedSerializedSize = size;
      return size;
    }

    public static com.networkcollect.NetworkCollect.MainMessage parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.networkcollect.NetworkCollect.MainMessage parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.networkcollect.NetworkCollect.MainMessage parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.networkcollect.NetworkCollect.MainMessage parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.networkcollect.NetworkCollect.MainMessage parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.networkcollect.NetworkCollect.MainMessage parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.networkcollect.NetworkCollect.MainMessage parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.networkcollect.NetworkCollect.MainMessage parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.networkcollect.NetworkCollect.MainMessage parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.networkcollect.NetworkCollect.MainMessage parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.networkcollect.NetworkCollect.MainMessage parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.networkcollect.NetworkCollect.MainMessage parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.networkcollect.NetworkCollect.MainMessage prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * <pre>
     *主消息体
     * </pre>
     *
     * Protobuf type {@code MainMessage}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.networkcollect.NetworkCollect.MainMessage, Builder> implements
        // @@protoc_insertion_point(builder_implements:MainMessage)
        com.networkcollect.NetworkCollect.MainMessageOrBuilder {
      // Construct using com.networkcollect.NetworkCollect.MainMessage.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       *消息类型
       * </pre>
       *
       * <code>.MessageType msgType = 1;</code>
       */
      public int getMsgTypeValue() {
        return instance.getMsgTypeValue();
      }
      /**
       * <pre>
       *消息类型
       * </pre>
       *
       * <code>.MessageType msgType = 1;</code>
       */
      public Builder setMsgTypeValue(int value) {
        copyOnWrite();
        instance.setMsgTypeValue(value);
        return this;
      }
      /**
       * <pre>
       *消息类型
       * </pre>
       *
       * <code>.MessageType msgType = 1;</code>
       */
      public com.networkcollect.NetworkCollect.MessageType getMsgType() {
        return instance.getMsgType();
      }
      /**
       * <pre>
       *消息类型
       * </pre>
       *
       * <code>.MessageType msgType = 1;</code>
       */
      public Builder setMsgType(com.networkcollect.NetworkCollect.MessageType value) {
        copyOnWrite();
        instance.setMsgType(value);
        return this;
      }
      /**
       * <pre>
       *消息类型
       * </pre>
       *
       * <code>.MessageType msgType = 1;</code>
       */
      public Builder clearMsgType() {
        copyOnWrite();
        instance.clearMsgType();
        return this;
      }

      /**
       * <pre>
       *采集数据------8001
       * </pre>
       *
       * <code>.CollectData collectData = 2;</code>
       */
      public boolean hasCollectData() {
        return instance.hasCollectData();
      }
      /**
       * <pre>
       *采集数据------8001
       * </pre>
       *
       * <code>.CollectData collectData = 2;</code>
       */
      public com.networkcollect.NetworkCollect.CollectData getCollectData() {
        return instance.getCollectData();
      }
      /**
       * <pre>
       *采集数据------8001
       * </pre>
       *
       * <code>.CollectData collectData = 2;</code>
       */
      public Builder setCollectData(com.networkcollect.NetworkCollect.CollectData value) {
        copyOnWrite();
        instance.setCollectData(value);
        return this;
        }
      /**
       * <pre>
       *采集数据------8001
       * </pre>
       *
       * <code>.CollectData collectData = 2;</code>
       */
      public Builder setCollectData(
          com.networkcollect.NetworkCollect.CollectData.Builder builderForValue) {
        copyOnWrite();
        instance.setCollectData(builderForValue);
        return this;
      }
      /**
       * <pre>
       *采集数据------8001
       * </pre>
       *
       * <code>.CollectData collectData = 2;</code>
       */
      public Builder mergeCollectData(com.networkcollect.NetworkCollect.CollectData value) {
        copyOnWrite();
        instance.mergeCollectData(value);
        return this;
      }
      /**
       * <pre>
       *采集数据------8001
       * </pre>
       *
       * <code>.CollectData collectData = 2;</code>
       */
      public Builder clearCollectData() {  copyOnWrite();
        instance.clearCollectData();
        return this;
      }

      /**
       * <pre>
       *接收到主站数据------8002
       * </pre>
       *
       * <code>.RecvMainStationData recvMainStationData = 3;</code>
       */
      public boolean hasRecvMainStationData() {
        return instance.hasRecvMainStationData();
      }
      /**
       * <pre>
       *接收到主站数据------8002
       * </pre>
       *
       * <code>.RecvMainStationData recvMainStationData = 3;</code>
       */
      public com.networkcollect.NetworkCollect.RecvMainStationData getRecvMainStationData() {
        return instance.getRecvMainStationData();
      }
      /**
       * <pre>
       *接收到主站数据------8002
       * </pre>
       *
       * <code>.RecvMainStationData recvMainStationData = 3;</code>
       */
      public Builder setRecvMainStationData(com.networkcollect.NetworkCollect.RecvMainStationData value) {
        copyOnWrite();
        instance.setRecvMainStationData(value);
        return this;
        }
      /**
       * <pre>
       *接收到主站数据------8002
       * </pre>
       *
       * <code>.RecvMainStationData recvMainStationData = 3;</code>
       */
      public Builder setRecvMainStationData(
          com.networkcollect.NetworkCollect.RecvMainStationData.Builder builderForValue) {
        copyOnWrite();
        instance.setRecvMainStationData(builderForValue);
        return this;
      }
      /**
       * <pre>
       *接收到主站数据------8002
       * </pre>
       *
       * <code>.RecvMainStationData recvMainStationData = 3;</code>
       */
      public Builder mergeRecvMainStationData(com.networkcollect.NetworkCollect.RecvMainStationData value) {
        copyOnWrite();
        instance.mergeRecvMainStationData(value);
        return this;
      }
      /**
       * <pre>
       *接收到主站数据------8002
       * </pre>
       *
       * <code>.RecvMainStationData recvMainStationData = 3;</code>
       */
      public Builder clearRecvMainStationData() {  copyOnWrite();
        instance.clearRecvMainStationData();
        return this;
      }

      /**
       * <pre>
       *心跳消息------8003
       * </pre>
       *
       * <code>.HeartBeatMessage heartBeatMessage = 4;</code>
       */
      public boolean hasHeartBeatMessage() {
        return instance.hasHeartBeatMessage();
      }
      /**
       * <pre>
       *心跳消息------8003
       * </pre>
       *
       * <code>.HeartBeatMessage heartBeatMessage = 4;</code>
       */
      public com.networkcollect.NetworkCollect.HeartBeatMessage getHeartBeatMessage() {
        return instance.getHeartBeatMessage();
      }
      /**
       * <pre>
       *心跳消息------8003
       * </pre>
       *
       * <code>.HeartBeatMessage heartBeatMessage = 4;</code>
       */
      public Builder setHeartBeatMessage(com.networkcollect.NetworkCollect.HeartBeatMessage value) {
        copyOnWrite();
        instance.setHeartBeatMessage(value);
        return this;
        }
      /**
       * <pre>
       *心跳消息------8003
       * </pre>
       *
       * <code>.HeartBeatMessage heartBeatMessage = 4;</code>
       */
      public Builder setHeartBeatMessage(
          com.networkcollect.NetworkCollect.HeartBeatMessage.Builder builderForValue) {
        copyOnWrite();
        instance.setHeartBeatMessage(builderForValue);
        return this;
      }
      /**
       * <pre>
       *心跳消息------8003
       * </pre>
       *
       * <code>.HeartBeatMessage heartBeatMessage = 4;</code>
       */
      public Builder mergeHeartBeatMessage(com.networkcollect.NetworkCollect.HeartBeatMessage value) {
        copyOnWrite();
        instance.mergeHeartBeatMessage(value);
        return this;
      }
      /**
       * <pre>
       *心跳消息------8003
       * </pre>
       *
       * <code>.HeartBeatMessage heartBeatMessage = 4;</code>
       */
      public Builder clearHeartBeatMessage() {  copyOnWrite();
        instance.clearHeartBeatMessage();
        return this;
      }

      /**
       * <pre>
       *进程控制------8004
       * </pre>
       *
       * <code>.ProcessCtrl processCtrl = 5;</code>
       */
      public boolean hasProcessCtrl() {
        return instance.hasProcessCtrl();
      }
      /**
       * <pre>
       *进程控制------8004
       * </pre>
       *
       * <code>.ProcessCtrl processCtrl = 5;</code>
       */
      public com.networkcollect.NetworkCollect.ProcessCtrl getProcessCtrl() {
        return instance.getProcessCtrl();
      }
      /**
       * <pre>
       *进程控制------8004
       * </pre>
       *
       * <code>.ProcessCtrl processCtrl = 5;</code>
       */
      public Builder setProcessCtrl(com.networkcollect.NetworkCollect.ProcessCtrl value) {
        copyOnWrite();
        instance.setProcessCtrl(value);
        return this;
        }
      /**
       * <pre>
       *进程控制------8004
       * </pre>
       *
       * <code>.ProcessCtrl processCtrl = 5;</code>
       */
      public Builder setProcessCtrl(
          com.networkcollect.NetworkCollect.ProcessCtrl.Builder builderForValue) {
        copyOnWrite();
        instance.setProcessCtrl(builderForValue);
        return this;
      }
      /**
       * <pre>
       *进程控制------8004
       * </pre>
       *
       * <code>.ProcessCtrl processCtrl = 5;</code>
       */
      public Builder mergeProcessCtrl(com.networkcollect.NetworkCollect.ProcessCtrl value) {
        copyOnWrite();
        instance.mergeProcessCtrl(value);
        return this;
      }
      /**
       * <pre>
       *进程控制------8004
       * </pre>
       *
       * <code>.ProcessCtrl processCtrl = 5;</code>
       */
      public Builder clearProcessCtrl() {  copyOnWrite();
        instance.clearProcessCtrl();
        return this;
      }

      /**
       * <pre>
       *新的未知资产------8005
       * </pre>
       *
       * <code>.UnknownAsset unknownAsset = 6;</code>
       */
      public boolean hasUnknownAsset() {
        return instance.hasUnknownAsset();
      }
      /**
       * <pre>
       *新的未知资产------8005
       * </pre>
       *
       * <code>.UnknownAsset unknownAsset = 6;</code>
       */
      public com.networkcollect.NetworkCollect.UnknownAsset getUnknownAsset() {
        return instance.getUnknownAsset();
      }
      /**
       * <pre>
       *新的未知资产------8005
       * </pre>
       *
       * <code>.UnknownAsset unknownAsset = 6;</code>
       */
      public Builder setUnknownAsset(com.networkcollect.NetworkCollect.UnknownAsset value) {
        copyOnWrite();
        instance.setUnknownAsset(value);
        return this;
        }
      /**
       * <pre>
       *新的未知资产------8005
       * </pre>
       *
       * <code>.UnknownAsset unknownAsset = 6;</code>
       */
      public Builder setUnknownAsset(
          com.networkcollect.NetworkCollect.UnknownAsset.Builder builderForValue) {
        copyOnWrite();
        instance.setUnknownAsset(builderForValue);
        return this;
      }
      /**
       * <pre>
       *新的未知资产------8005
       * </pre>
       *
       * <code>.UnknownAsset unknownAsset = 6;</code>
       */
      public Builder mergeUnknownAsset(com.networkcollect.NetworkCollect.UnknownAsset value) {
        copyOnWrite();
        instance.mergeUnknownAsset(value);
        return this;
      }
      /**
       * <pre>
       *新的未知资产------8005
       * </pre>
       *
       * <code>.UnknownAsset unknownAsset = 6;</code>
       */
      public Builder clearUnknownAsset() {  copyOnWrite();
        instance.clearUnknownAsset();
        return this;
      }

      /**
       * <pre>
       *通信对-----8006
       * </pre>
       *
       * <code>.CommunicationPair communicationPair = 7;</code>
       */
      public boolean hasCommunicationPair() {
        return instance.hasCommunicationPair();
      }
      /**
       * <pre>
       *通信对-----8006
       * </pre>
       *
       * <code>.CommunicationPair communicationPair = 7;</code>
       */
      public com.networkcollect.NetworkCollect.CommunicationPair getCommunicationPair() {
        return instance.getCommunicationPair();
      }
      /**
       * <pre>
       *通信对-----8006
       * </pre>
       *
       * <code>.CommunicationPair communicationPair = 7;</code>
       */
      public Builder setCommunicationPair(com.networkcollect.NetworkCollect.CommunicationPair value) {
        copyOnWrite();
        instance.setCommunicationPair(value);
        return this;
        }
      /**
       * <pre>
       *通信对-----8006
       * </pre>
       *
       * <code>.CommunicationPair communicationPair = 7;</code>
       */
      public Builder setCommunicationPair(
          com.networkcollect.NetworkCollect.CommunicationPair.Builder builderForValue) {
        copyOnWrite();
        instance.setCommunicationPair(builderForValue);
        return this;
      }
      /**
       * <pre>
       *通信对-----8006
       * </pre>
       *
       * <code>.CommunicationPair communicationPair = 7;</code>
       */
      public Builder mergeCommunicationPair(com.networkcollect.NetworkCollect.CommunicationPair value) {
        copyOnWrite();
        instance.mergeCommunicationPair(value);
        return this;
      }
      /**
       * <pre>
       *通信对-----8006
       * </pre>
       *
       * <code>.CommunicationPair communicationPair = 7;</code>
       */
      public Builder clearCommunicationPair() {  copyOnWrite();
        instance.clearCommunicationPair();
        return this;
      }

      /**
       * <pre>
       *原始日志----8007
       * </pre>
       *
       * <code>.OriginalSyslog OriginalSyslog = 8;</code>
       */
      public boolean hasOriginalSyslog() {
        return instance.hasOriginalSyslog();
      }
      /**
       * <pre>
       *原始日志----8007
       * </pre>
       *
       * <code>.OriginalSyslog OriginalSyslog = 8;</code>
       */
      public com.networkcollect.NetworkCollect.OriginalSyslog getOriginalSyslog() {
        return instance.getOriginalSyslog();
      }
      /**
       * <pre>
       *原始日志----8007
       * </pre>
       *
       * <code>.OriginalSyslog OriginalSyslog = 8;</code>
       */
      public Builder setOriginalSyslog(com.networkcollect.NetworkCollect.OriginalSyslog value) {
        copyOnWrite();
        instance.setOriginalSyslog(value);
        return this;
        }
      /**
       * <pre>
       *原始日志----8007
       * </pre>
       *
       * <code>.OriginalSyslog OriginalSyslog = 8;</code>
       */
      public Builder setOriginalSyslog(
          com.networkcollect.NetworkCollect.OriginalSyslog.Builder builderForValue) {
        copyOnWrite();
        instance.setOriginalSyslog(builderForValue);
        return this;
      }
      /**
       * <pre>
       *原始日志----8007
       * </pre>
       *
       * <code>.OriginalSyslog OriginalSyslog = 8;</code>
       */
      public Builder mergeOriginalSyslog(com.networkcollect.NetworkCollect.OriginalSyslog value) {
        copyOnWrite();
        instance.mergeOriginalSyslog(value);
        return this;
      }
      /**
       * <pre>
       *原始日志----8007
       * </pre>
       *
       * <code>.OriginalSyslog OriginalSyslog = 8;</code>
       */
      public Builder clearOriginalSyslog() {  copyOnWrite();
        instance.clearOriginalSyslog();
        return this;
      }

      /**
       * <pre>
       *远程控制命令-----8009
       * </pre>
       *
       * <code>.RemoteCmdInfo remoteCmdInfo = 10;</code>
       */
      public boolean hasRemoteCmdInfo() {
        return instance.hasRemoteCmdInfo();
      }
      /**
       * <pre>
       *远程控制命令-----8009
       * </pre>
       *
       * <code>.RemoteCmdInfo remoteCmdInfo = 10;</code>
       */
      public com.networkcollect.NetworkCollect.RemoteCmdInfo getRemoteCmdInfo() {
        return instance.getRemoteCmdInfo();
      }
      /**
       * <pre>
       *远程控制命令-----8009
       * </pre>
       *
       * <code>.RemoteCmdInfo remoteCmdInfo = 10;</code>
       */
      public Builder setRemoteCmdInfo(com.networkcollect.NetworkCollect.RemoteCmdInfo value) {
        copyOnWrite();
        instance.setRemoteCmdInfo(value);
        return this;
        }
      /**
       * <pre>
       *远程控制命令-----8009
       * </pre>
       *
       * <code>.RemoteCmdInfo remoteCmdInfo = 10;</code>
       */
      public Builder setRemoteCmdInfo(
          com.networkcollect.NetworkCollect.RemoteCmdInfo.Builder builderForValue) {
        copyOnWrite();
        instance.setRemoteCmdInfo(builderForValue);
        return this;
      }
      /**
       * <pre>
       *远程控制命令-----8009
       * </pre>
       *
       * <code>.RemoteCmdInfo remoteCmdInfo = 10;</code>
       */
      public Builder mergeRemoteCmdInfo(com.networkcollect.NetworkCollect.RemoteCmdInfo value) {
        copyOnWrite();
        instance.mergeRemoteCmdInfo(value);
        return this;
      }
      /**
       * <pre>
       *远程控制命令-----8009
       * </pre>
       *
       * <code>.RemoteCmdInfo remoteCmdInfo = 10;</code>
       */
      public Builder clearRemoteCmdInfo() {  copyOnWrite();
        instance.clearRemoteCmdInfo();
        return this;
      }

      /**
       * <pre>
       *远程控制回复------8010
       * </pre>
       *
       * <code>.RemoteResponse remoteResponse = 11;</code>
       */
      public boolean hasRemoteResponse() {
        return instance.hasRemoteResponse();
      }
      /**
       * <pre>
       *远程控制回复------8010
       * </pre>
       *
       * <code>.RemoteResponse remoteResponse = 11;</code>
       */
      public com.networkcollect.NetworkCollect.RemoteResponse getRemoteResponse() {
        return instance.getRemoteResponse();
      }
      /**
       * <pre>
       *远程控制回复------8010
       * </pre>
       *
       * <code>.RemoteResponse remoteResponse = 11;</code>
       */
      public Builder setRemoteResponse(com.networkcollect.NetworkCollect.RemoteResponse value) {
        copyOnWrite();
        instance.setRemoteResponse(value);
        return this;
        }
      /**
       * <pre>
       *远程控制回复------8010
       * </pre>
       *
       * <code>.RemoteResponse remoteResponse = 11;</code>
       */
      public Builder setRemoteResponse(
          com.networkcollect.NetworkCollect.RemoteResponse.Builder builderForValue) {
        copyOnWrite();
        instance.setRemoteResponse(builderForValue);
        return this;
      }
      /**
       * <pre>
       *远程控制回复------8010
       * </pre>
       *
       * <code>.RemoteResponse remoteResponse = 11;</code>
       */
      public Builder mergeRemoteResponse(com.networkcollect.NetworkCollect.RemoteResponse value) {
        copyOnWrite();
        instance.mergeRemoteResponse(value);
        return this;
      }
      /**
       * <pre>
       *远程控制回复------8010
       * </pre>
       *
       * <code>.RemoteResponse remoteResponse = 11;</code>
       */
      public Builder clearRemoteResponse() {  copyOnWrite();
        instance.clearRemoteResponse();
        return this;
      }

      /**
       * <pre>
       *还原文件-----8011
       * </pre>
       *
       * <code>.RestoreFile restoreFile = 12;</code>
       */
      public boolean hasRestoreFile() {
        return instance.hasRestoreFile();
      }
      /**
       * <pre>
       *还原文件-----8011
       * </pre>
       *
       * <code>.RestoreFile restoreFile = 12;</code>
       */
      public com.networkcollect.NetworkCollect.RestoreFile getRestoreFile() {
        return instance.getRestoreFile();
      }
      /**
       * <pre>
       *还原文件-----8011
       * </pre>
       *
       * <code>.RestoreFile restoreFile = 12;</code>
       */
      public Builder setRestoreFile(com.networkcollect.NetworkCollect.RestoreFile value) {
        copyOnWrite();
        instance.setRestoreFile(value);
        return this;
        }
      /**
       * <pre>
       *还原文件-----8011
       * </pre>
       *
       * <code>.RestoreFile restoreFile = 12;</code>
       */
      public Builder setRestoreFile(
          com.networkcollect.NetworkCollect.RestoreFile.Builder builderForValue) {
        copyOnWrite();
        instance.setRestoreFile(builderForValue);
        return this;
      }
      /**
       * <pre>
       *还原文件-----8011
       * </pre>
       *
       * <code>.RestoreFile restoreFile = 12;</code>
       */
      public Builder mergeRestoreFile(com.networkcollect.NetworkCollect.RestoreFile value) {
        copyOnWrite();
        instance.mergeRestoreFile(value);
        return this;
      }
      /**
       * <pre>
       *还原文件-----8011
       * </pre>
       *
       * <code>.RestoreFile restoreFile = 12;</code>
       */
      public Builder clearRestoreFile() {  copyOnWrite();
        instance.clearRestoreFile();
        return this;
      }

      /**
       * <pre>
       *网络自动扫描 -----8012
       * </pre>
       *
       * <code>.NmapInfo nmapInfo = 13;</code>
       */
      public boolean hasNmapInfo() {
        return instance.hasNmapInfo();
      }
      /**
       * <pre>
       *网络自动扫描 -----8012
       * </pre>
       *
       * <code>.NmapInfo nmapInfo = 13;</code>
       */
      public com.networkcollect.NetworkCollect.NmapInfo getNmapInfo() {
        return instance.getNmapInfo();
      }
      /**
       * <pre>
       *网络自动扫描 -----8012
       * </pre>
       *
       * <code>.NmapInfo nmapInfo = 13;</code>
       */
      public Builder setNmapInfo(com.networkcollect.NetworkCollect.NmapInfo value) {
        copyOnWrite();
        instance.setNmapInfo(value);
        return this;
        }
      /**
       * <pre>
       *网络自动扫描 -----8012
       * </pre>
       *
       * <code>.NmapInfo nmapInfo = 13;</code>
       */
      public Builder setNmapInfo(
          com.networkcollect.NetworkCollect.NmapInfo.Builder builderForValue) {
        copyOnWrite();
        instance.setNmapInfo(builderForValue);
        return this;
      }
      /**
       * <pre>
       *网络自动扫描 -----8012
       * </pre>
       *
       * <code>.NmapInfo nmapInfo = 13;</code>
       */
      public Builder mergeNmapInfo(com.networkcollect.NetworkCollect.NmapInfo value) {
        copyOnWrite();
        instance.mergeNmapInfo(value);
        return this;
      }
      /**
       * <pre>
       *网络自动扫描 -----8012
       * </pre>
       *
       * <code>.NmapInfo nmapInfo = 13;</code>
       */
      public Builder clearNmapInfo() {  copyOnWrite();
        instance.clearNmapInfo();
        return this;
      }

      /**
       * <pre>
       *上送副主站的数据----8013
       * </pre>
       *
       * <code>.SubMainStationData subMainStationData = 14;</code>
       */
      public boolean hasSubMainStationData() {
        return instance.hasSubMainStationData();
      }
      /**
       * <pre>
       *上送副主站的数据----8013
       * </pre>
       *
       * <code>.SubMainStationData subMainStationData = 14;</code>
       */
      public com.networkcollect.NetworkCollect.SubMainStationData getSubMainStationData() {
        return instance.getSubMainStationData();
      }
      /**
       * <pre>
       *上送副主站的数据----8013
       * </pre>
       *
       * <code>.SubMainStationData subMainStationData = 14;</code>
       */
      public Builder setSubMainStationData(com.networkcollect.NetworkCollect.SubMainStationData value) {
        copyOnWrite();
        instance.setSubMainStationData(value);
        return this;
        }
      /**
       * <pre>
       *上送副主站的数据----8013
       * </pre>
       *
       * <code>.SubMainStationData subMainStationData = 14;</code>
       */
      public Builder setSubMainStationData(
          com.networkcollect.NetworkCollect.SubMainStationData.Builder builderForValue) {
        copyOnWrite();
        instance.setSubMainStationData(builderForValue);
        return this;
      }
      /**
       * <pre>
       *上送副主站的数据----8013
       * </pre>
       *
       * <code>.SubMainStationData subMainStationData = 14;</code>
       */
      public Builder mergeSubMainStationData(com.networkcollect.NetworkCollect.SubMainStationData value) {
        copyOnWrite();
        instance.mergeSubMainStationData(value);
        return this;
      }
      /**
       * <pre>
       *上送副主站的数据----8013
       * </pre>
       *
       * <code>.SubMainStationData subMainStationData = 14;</code>
       */
      public Builder clearSubMainStationData() {  copyOnWrite();
        instance.clearSubMainStationData();
        return this;
      }

      /**
       * <pre>
       *主站配置参数----8014
       * </pre>
       *
       * <code>.StationConnectConfig stationConnectConfig = 15;</code>
       */
      public boolean hasStationConnectConfig() {
        return instance.hasStationConnectConfig();
      }
      /**
       * <pre>
       *主站配置参数----8014
       * </pre>
       *
       * <code>.StationConnectConfig stationConnectConfig = 15;</code>
       */
      public com.networkcollect.NetworkCollect.StationConnectConfig getStationConnectConfig() {
        return instance.getStationConnectConfig();
      }
      /**
       * <pre>
       *主站配置参数----8014
       * </pre>
       *
       * <code>.StationConnectConfig stationConnectConfig = 15;</code>
       */
      public Builder setStationConnectConfig(com.networkcollect.NetworkCollect.StationConnectConfig value) {
        copyOnWrite();
        instance.setStationConnectConfig(value);
        return this;
        }
      /**
       * <pre>
       *主站配置参数----8014
       * </pre>
       *
       * <code>.StationConnectConfig stationConnectConfig = 15;</code>
       */
      public Builder setStationConnectConfig(
          com.networkcollect.NetworkCollect.StationConnectConfig.Builder builderForValue) {
        copyOnWrite();
        instance.setStationConnectConfig(builderForValue);
        return this;
      }
      /**
       * <pre>
       *主站配置参数----8014
       * </pre>
       *
       * <code>.StationConnectConfig stationConnectConfig = 15;</code>
       */
      public Builder mergeStationConnectConfig(com.networkcollect.NetworkCollect.StationConnectConfig value) {
        copyOnWrite();
        instance.mergeStationConnectConfig(value);
        return this;
      }
      /**
       * <pre>
       *主站配置参数----8014
       * </pre>
       *
       * <code>.StationConnectConfig stationConnectConfig = 15;</code>
       */
      public Builder clearStationConnectConfig() {  copyOnWrite();
        instance.clearStationConnectConfig();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:MainMessage)
    }
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.networkcollect.NetworkCollect.MainMessage();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.networkcollect.NetworkCollect.MainMessage other = (com.networkcollect.NetworkCollect.MainMessage) arg1;
          msgType_ = visitor.visitInt(msgType_ != 0, msgType_,    other.msgType_ != 0, other.msgType_);
          collectData_ = visitor.visitMessage(collectData_, other.collectData_);
          recvMainStationData_ = visitor.visitMessage(recvMainStationData_, other.recvMainStationData_);
          heartBeatMessage_ = visitor.visitMessage(heartBeatMessage_, other.heartBeatMessage_);
          processCtrl_ = visitor.visitMessage(processCtrl_, other.processCtrl_);
          unknownAsset_ = visitor.visitMessage(unknownAsset_, other.unknownAsset_);
          communicationPair_ = visitor.visitMessage(communicationPair_, other.communicationPair_);
          originalSyslog_ = visitor.visitMessage(originalSyslog_, other.originalSyslog_);
          remoteCmdInfo_ = visitor.visitMessage(remoteCmdInfo_, other.remoteCmdInfo_);
          remoteResponse_ = visitor.visitMessage(remoteResponse_, other.remoteResponse_);
          restoreFile_ = visitor.visitMessage(restoreFile_, other.restoreFile_);
          nmapInfo_ = visitor.visitMessage(nmapInfo_, other.nmapInfo_);
          subMainStationData_ = visitor.visitMessage(subMainStationData_, other.subMainStationData_);
          stationConnectConfig_ = visitor.visitMessage(stationConnectConfig_, other.stationConnectConfig_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!input.skipField(tag)) {
                    done = true;
                  }
                  break;
                }
                case 8: {
                  int rawValue = input.readEnum();

                  msgType_ = rawValue;
                  break;
                }
                case 18: {
                  com.networkcollect.NetworkCollect.CollectData.Builder subBuilder = null;
                  if (collectData_ != null) {
                    subBuilder = collectData_.toBuilder();
                  }
                  collectData_ = input.readMessage(com.networkcollect.NetworkCollect.CollectData.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(collectData_);
                    collectData_ = subBuilder.buildPartial();
                  }

                  break;
                }
                case 26: {
                  com.networkcollect.NetworkCollect.RecvMainStationData.Builder subBuilder = null;
                  if (recvMainStationData_ != null) {
                    subBuilder = recvMainStationData_.toBuilder();
                  }
                  recvMainStationData_ = input.readMessage(com.networkcollect.NetworkCollect.RecvMainStationData.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(recvMainStationData_);
                    recvMainStationData_ = subBuilder.buildPartial();
                  }

                  break;
                }
                case 34: {
                  com.networkcollect.NetworkCollect.HeartBeatMessage.Builder subBuilder = null;
                  if (heartBeatMessage_ != null) {
                    subBuilder = heartBeatMessage_.toBuilder();
                  }
                  heartBeatMessage_ = input.readMessage(com.networkcollect.NetworkCollect.HeartBeatMessage.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(heartBeatMessage_);
                    heartBeatMessage_ = subBuilder.buildPartial();
                  }

                  break;
                }
                case 42: {
                  com.networkcollect.NetworkCollect.ProcessCtrl.Builder subBuilder = null;
                  if (processCtrl_ != null) {
                    subBuilder = processCtrl_.toBuilder();
                  }
                  processCtrl_ = input.readMessage(com.networkcollect.NetworkCollect.ProcessCtrl.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(processCtrl_);
                    processCtrl_ = subBuilder.buildPartial();
                  }

                  break;
                }
                case 50: {
                  com.networkcollect.NetworkCollect.UnknownAsset.Builder subBuilder = null;
                  if (unknownAsset_ != null) {
                    subBuilder = unknownAsset_.toBuilder();
                  }
                  unknownAsset_ = input.readMessage(com.networkcollect.NetworkCollect.UnknownAsset.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(unknownAsset_);
                    unknownAsset_ = subBuilder.buildPartial();
                  }

                  break;
                }
                case 58: {
                  com.networkcollect.NetworkCollect.CommunicationPair.Builder subBuilder = null;
                  if (communicationPair_ != null) {
                    subBuilder = communicationPair_.toBuilder();
                  }
                  communicationPair_ = input.readMessage(com.networkcollect.NetworkCollect.CommunicationPair.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(communicationPair_);
                    communicationPair_ = subBuilder.buildPartial();
                  }

                  break;
                }
                case 66: {
                  com.networkcollect.NetworkCollect.OriginalSyslog.Builder subBuilder = null;
                  if (originalSyslog_ != null) {
                    subBuilder = originalSyslog_.toBuilder();
                  }
                  originalSyslog_ = input.readMessage(com.networkcollect.NetworkCollect.OriginalSyslog.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(originalSyslog_);
                    originalSyslog_ = subBuilder.buildPartial();
                  }

                  break;
                }
                case 82: {
                  com.networkcollect.NetworkCollect.RemoteCmdInfo.Builder subBuilder = null;
                  if (remoteCmdInfo_ != null) {
                    subBuilder = remoteCmdInfo_.toBuilder();
                  }
                  remoteCmdInfo_ = input.readMessage(com.networkcollect.NetworkCollect.RemoteCmdInfo.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(remoteCmdInfo_);
                    remoteCmdInfo_ = subBuilder.buildPartial();
                  }

                  break;
                }
                case 90: {
                  com.networkcollect.NetworkCollect.RemoteResponse.Builder subBuilder = null;
                  if (remoteResponse_ != null) {
                    subBuilder = remoteResponse_.toBuilder();
                  }
                  remoteResponse_ = input.readMessage(com.networkcollect.NetworkCollect.RemoteResponse.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(remoteResponse_);
                    remoteResponse_ = subBuilder.buildPartial();
                  }

                  break;
                }
                case 98: {
                  com.networkcollect.NetworkCollect.RestoreFile.Builder subBuilder = null;
                  if (restoreFile_ != null) {
                    subBuilder = restoreFile_.toBuilder();
                  }
                  restoreFile_ = input.readMessage(com.networkcollect.NetworkCollect.RestoreFile.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(restoreFile_);
                    restoreFile_ = subBuilder.buildPartial();
                  }

                  break;
                }
                case 106: {
                  com.networkcollect.NetworkCollect.NmapInfo.Builder subBuilder = null;
                  if (nmapInfo_ != null) {
                    subBuilder = nmapInfo_.toBuilder();
                  }
                  nmapInfo_ = input.readMessage(com.networkcollect.NetworkCollect.NmapInfo.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(nmapInfo_);
                    nmapInfo_ = subBuilder.buildPartial();
                  }

                  break;
                }
                case 114: {
                  com.networkcollect.NetworkCollect.SubMainStationData.Builder subBuilder = null;
                  if (subMainStationData_ != null) {
                    subBuilder = subMainStationData_.toBuilder();
                  }
                  subMainStationData_ = input.readMessage(com.networkcollect.NetworkCollect.SubMainStationData.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(subMainStationData_);
                    subMainStationData_ = subBuilder.buildPartial();
                  }

                  break;
                }
                case 122: {
                  com.networkcollect.NetworkCollect.StationConnectConfig.Builder subBuilder = null;
                  if (stationConnectConfig_ != null) {
                    subBuilder = stationConnectConfig_.toBuilder();
                  }
                  stationConnectConfig_ = input.readMessage(com.networkcollect.NetworkCollect.StationConnectConfig.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(stationConnectConfig_);
                    stationConnectConfig_ = subBuilder.buildPartial();
                  }

                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (com.networkcollect.NetworkCollect.MainMessage.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:MainMessage)
    private static final com.networkcollect.NetworkCollect.MainMessage DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new MainMessage();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static com.networkcollect.NetworkCollect.MainMessage getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<MainMessage> PARSER;

    public static com.google.protobuf.Parser<MainMessage> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }


  static {
  }

  // @@protoc_insertion_point(outer_class_scope)
}
